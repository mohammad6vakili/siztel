{"version":3,"sources":["../node_modules/clsx/dist/clsx.m.js","../../src/components/RefTrackerProvider.tsx","../../src/core/eventManager.ts","../../src/hooks/useRefTracker.ts","../../src/core/contextMenu.ts","../../src/hooks/useContextMenu.ts","../../src/components/menuController.ts","../../src/constants.ts","../../src/components/utils.ts","../../src/components/Menu.tsx","../../src/hooks/usePrevious.ts","../../src/components/Item.tsx","../../src/components/Submenu.tsx","views/extensions/context-menu/ContextSubmenu.js","views/extensions/context-menu/ContextMenuBasic.js","views/extensions/context-menu/ContextMenuLeftClick.js","views/extensions/context-menu/ContextMenuDoubleClick.js","views/extensions/context-menu/ContextMenuAnimation.js","views/extensions/context-menu/index.js","@core/components/extensions-header/index.js"],"names":["r","e","t","f","n","Array","isArray","length","clsx","arguments","Context","createContext","useRefTrackerContext","useContext","RefTrackerProvider","props","Provider","value","refTracker","children","createEventManager","eventList","Map","on","event","handler","has","get","add","set","Set","this","off","emit","args","process","NODE","currentEv","console","error","forEach","eventManager","useRefTracker","useRef","current","contextMenu","id","position","preventDefault","nativeEvent","useContextMenu","show","params","hideAll","createMenuController","focusedIndex","parentNode","isAtRoot","currentItems","menuList","forceCloseSubmenu","focusSelectedItem","node","focus","isFocused","moveDown","closeSubmenu","isRoot","items","parentFocusedIndex","menuParentNode","classList","remove","clear","init","rootMenu","moveUp","openSubmenu","isSubmenu","submenuItems","from","submenuRefTracker","values","currentNode","animation","NOOP","isFn","v","isStr","cloneItems","map","Children","toArray","filter","Boolean","item","cloneElement","getPredicateValue","predicate","payload","reducer","state","Menu","theme","style","className","onHidden","onShown","rest","useReducer","x","y","visible","triggerEvent","propsFromTrigger","willLeave","setState","nodeRef","didMount","wasVisible","ref","useEffect","usePrevious","menuController","useState","stopPropagation","pos","type","isTouchEvent","changedTouches","clientX","clientY","getMousePosition","setTimeout","hide","button","ctrlKey","exit","hasExitAnimation","window","windowWidth","innerWidth","windowHeight","innerHeight","menuWidth","offsetWidth","menuHeight","offsetHeight","handleKeyboard","key","addEventListener","removeEventListener","cssClasses","cx","enter","computeAnimationClasses","menuStyle","left","top","opacity","onAnimationEnd","role","Item","data","onClick","disabled","hidden","handlerParams","isDisabled","onKeyDown","tabIndex","Submenu","arrow","label","menuRefTracker","bottom","setPosition","isHidden","rect","getBoundingClientRect","right","undefined","submenuStyle","ContextSubMenu","_jsxs","Card","_jsx","CardHeader","CardTitle","tag","CardBody","Button","color","onContextMenu","outline","toast","success","ContextMenuBasic","ContextMenuLeftClick","ContextMenuDoubleClick","onDoubleClick","ContextMenuAnimations","showFade","showFlip","showSlide","FadeMenu","FlipMenu","SlideMenu","Contexify","Fragment","ExtensionsHeader","title","subTitle","link","Row","Col","sm","ContextMenuAnimation","href","target","rel"],"mappings":"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","file":"static/js/103.d228298a.chunk.js","sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React, { useContext, createContext } from 'react';\nimport { RefTracker } from '../hooks';\n\nconst Context = createContext({} as RefTracker);\n\n/**\n * Access parent ref tracker.\n */\nexport function useRefTrackerContext() {\n  return useContext(Context);\n}\n\nexport interface RefTrackerProviderProps {\n  refTracker: RefTracker;\n}\n\nexport const RefTrackerProvider: React.FC<RefTrackerProviderProps> = props => {\n  return (\n    <Context.Provider value={props.refTracker}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n","import { EVENT } from '../constants';\n\nexport type EventType = string | number | symbol;\nexport type Handler<T = any> = (args: T) => void;\n\nexport interface EventManager<E = EventType> {\n  on<T = any>(event: E, handler: Handler<T>): EventManager<E>;\n  off<T = any>(event: E, handler?: Handler<T>): EventManager<E>;\n  emit<T = any>(event: E, args?: T): EventManager<E>;\n}\n\nfunction createEventManager<E = EventType>(): EventManager<E> {\n  const eventList = new Map<E, Set<Handler>>();\n\n  return {\n    on<T = any>(event: E, handler: Handler<T>) {\n      //eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      eventList.has(event)\n        ? eventList.get(event)?.add(handler)\n        : eventList.set(event, new Set([handler]));\n      return this;\n    },\n    off<T = any>(event: E, handler?: Handler<T>) {\n      handler ? eventList.get(event)!.delete(handler) : eventList.delete(event);\n      return this;\n    },\n    emit<T = any>(event: E, args: T) {\n      if (process.env.NODE !== 'production') {\n        const currentEv = (event as unknown) as number;\n\n        if (!eventList.has(event) && currentEv !== EVENT.HIDE_ALL) {\n          console.error(\n            `It seems that the menu you are trying to display is not renderer or you have a menu id mismatch.`,\n            `You used the menu id: ${event}`\n          );\n        }\n      }\n      eventList.has(event) &&\n        eventList.get(event)!.forEach((handler: Handler<T>) => {\n          handler(args);\n        });\n      return this;\n    },\n  };\n}\n\nexport const eventManager = createEventManager();\n","import { useRef } from 'react';\n\nexport interface RefTrackerValue {\n  node: HTMLElement;\n  isSubmenu: boolean;\n  submenuRefTracker?: RefTracker;\n}\n\nexport type RefTracker = ReturnType<typeof useRefTracker>;\n\n/**\n * Used to store children refs\n */\nexport function useRefTracker() {\n  return useRef<Map<HTMLElement, RefTrackerValue>>(new Map()).current;\n}\n","import { eventManager } from './eventManager';\nimport { MenuId, TriggerEvent } from '../types';\nimport { SyntheticEvent } from 'react';\n\nimport { EVENT } from '../constants';\n\nexport interface ShowContextMenuParams {\n  id: MenuId;\n  event: TriggerEvent;\n  props?: any;\n  position?: {\n    x: number;\n    y: number;\n  } | null;\n}\n\nexport interface ContextMenu {\n  show: (params: ShowContextMenuParams) => void;\n  hideAll: () => void;\n}\n\nconst contextMenu: ContextMenu = {\n  show({ id, event, props, position }) {\n    if (event.preventDefault) event.preventDefault();\n\n    eventManager.emit(EVENT.HIDE_ALL).emit(id, {\n      event: (event as SyntheticEvent).nativeEvent || event,\n      props,\n      position,\n    });\n  },\n  hideAll() {\n    eventManager.emit(EVENT.HIDE_ALL);\n  },\n};\n\nexport { contextMenu };\n","import { contextMenu } from '../core';\nimport { ContextMenuParams, TriggerEvent } from '../types';\n\nexport type UseContextMenuProps = Partial<\n  Pick<ContextMenuParams, 'id' | 'props'>\n>;\n\nexport function useContextMenu(props?: UseContextMenuProps) {\n  return {\n    show(event: TriggerEvent, params?: Omit<ContextMenuParams, 'event'>) {\n      if (process.env.NODE_ENV === 'development') {\n        if (!props?.id && !params?.id)\n          console.error(\n            \"You need to provide an id when initializing the hook `useContextMenu({ id: 'your id' })` or when you display the menu `show(e, { id: 'your id' })`. The later is used to override the one defined during initialization.\"\n          );\n      }\n      contextMenu.show({\n        id: (params?.id || props?.id) as string,\n        props: params?.props || props?.props,\n        event: event,\n        position: params?.position,\n      });\n    },\n    hideAll() {\n      contextMenu.hideAll();\n    },\n  };\n}\n","import { RefTrackerValue } from '../hooks';\nimport { STYLE } from '../constants';\n\ninterface Menu<T = RefTrackerValue> {\n  items: T[];\n  isRoot: boolean;\n  focusedIndex: number;\n  parentNode: HTMLElement;\n}\n\n/**\n * Used to control keyboard navigation\n */\nexport function createMenuController() {\n  const menuList = new Map<HTMLElement, Menu>();\n  let focusedIndex: number;\n  let parentNode: HTMLElement;\n  let isAtRoot: boolean;\n  let currentItems: RefTrackerValue[];\n  let forceCloseSubmenu = false;\n\n  function init(rootMenu: RefTrackerValue[]) {\n    currentItems = rootMenu;\n    focusedIndex = -1;\n    isAtRoot = true;\n  }\n\n  function focusSelectedItem() {\n    currentItems[focusedIndex].node.focus();\n  }\n\n  function isSubmenuFocused() {\n    return focusedIndex >= 0 && currentItems[focusedIndex].isSubmenu;\n  }\n\n  function getSubmenuItems() {\n    return Array.from(currentItems[focusedIndex].submenuRefTracker!.values());\n  }\n\n  function isFocused() {\n    if (focusedIndex === -1) {\n      // focus first item\n      moveDown();\n      return false;\n    }\n\n    return true;\n  }\n\n  function moveDown() {\n    if (focusedIndex + 1 < currentItems.length) {\n      focusedIndex++;\n    } else if (focusedIndex + 1 === currentItems.length) {\n      focusedIndex = 0;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function moveUp() {\n    if (focusedIndex === -1 || focusedIndex === 0) {\n      focusedIndex = currentItems.length - 1;\n    } else if (focusedIndex - 1 < currentItems.length) {\n      focusedIndex--;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function openSubmenu() {\n    if (isFocused() && isSubmenuFocused()) {\n      const submenuItems = getSubmenuItems();\n      const currentNode = currentItems[focusedIndex].node;\n\n      menuList.set(currentNode, {\n        isRoot: isAtRoot,\n        focusedIndex,\n        parentNode: parentNode || currentNode,\n        items: currentItems,\n      });\n\n      currentNode.classList.add(STYLE.submenuOpen);\n      parentNode = currentNode;\n\n      if (submenuItems.length > 0) {\n        focusedIndex = 0;\n        currentItems = submenuItems;\n      } else {\n        forceCloseSubmenu = true;\n      }\n\n      isAtRoot = false;\n\n      focusSelectedItem();\n      return true;\n    }\n    return false;\n  }\n\n  function closeSubmenu() {\n    if (isFocused() && !isAtRoot) {\n      const {\n        isRoot,\n        items,\n        focusedIndex: parentFocusedIndex,\n        parentNode: menuParentNode,\n      } = menuList.get(parentNode)!;\n\n      parentNode.classList.remove(STYLE.submenuOpen);\n\n      currentItems = items;\n      parentNode = menuParentNode;\n\n      if (isRoot) {\n        isAtRoot = true;\n        menuList.clear();\n      }\n      if (!forceCloseSubmenu) {\n        focusedIndex = parentFocusedIndex;\n        focusSelectedItem();\n      }\n    }\n  }\n\n  return {\n    init,\n    moveDown,\n    moveUp,\n    openSubmenu,\n    closeSubmenu,\n  };\n}\n","/*\n * css classes mapping\n * */\nexport const enum STYLE {\n  menu = 'react-contexify',\n  submenu = 'react-contexify react-contexify__submenu',\n  submenuArrow = 'react-contexify__submenu-arrow',\n  submenuOpen = 'react-contexify__submenu--is-open',\n  separator = 'react-contexify__separator',\n  item = 'react-contexify__item',\n  itemDisabled = 'react-contexify__item--disabled',\n  itemContent = 'react-contexify__item__content',\n  theme = 'react-contexify__theme--',\n  animationWillEnter = 'react-contexify__will-enter--',\n  animationWillLeave = 'react-contexify__will-leave--',\n}\n\nexport const enum EVENT {\n  HIDE_ALL,\n}\n\nexport const theme = {\n  light: 'light',\n  dark: 'dark',\n};\n\nexport const animation = {\n  fade: 'fade',\n  flip: 'flip',\n  scale: 'scale',\n  slide: 'slide',\n};\n\nexport const NOOP = () => {};\n","import { Children, cloneElement, ReactNode, ReactElement } from 'react';\n\nimport {\n  BooleanPredicate,\n  PredicateParams,\n  MenuAnimation,\n  TriggerEvent,\n} from '../types';\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isTouchEvent(e: TriggerEvent): e is TouchEvent {\n  return e.type === 'touchend';\n}\n\nexport function cloneItems(\n  children: ReactNode,\n  props: { triggerEvent: TriggerEvent; propsFromTrigger?: object }\n) {\n  return Children.map(\n    // remove null item\n    Children.toArray(children).filter(Boolean),\n    item => cloneElement(item as ReactElement<any>, props)\n  );\n}\n\nexport function getMousePosition(e: TriggerEvent) {\n  const pos = {\n    x: 0,\n    y: 0,\n  };\n\n  if (isTouchEvent(e) && e.changedTouches && e.changedTouches.length > 0) {\n    pos.x = e.changedTouches[0].clientX;\n    pos.y = e.changedTouches[0].clientY;\n  } else {\n    pos.x = (e as MouseEvent).clientX;\n    pos.y = (e as MouseEvent).clientY;\n  }\n\n  if (!pos.x || pos.x < 0) pos.x = 0;\n\n  if (!pos.y || pos.y < 0) pos.y = 0;\n\n  return pos;\n}\n\nexport function getPredicateValue(\n  predicate: BooleanPredicate,\n  payload: PredicateParams\n) {\n  return isFn(predicate) ? predicate(payload) : predicate;\n}\n\nexport function hasExitAnimation(animation: MenuAnimation) {\n  return !!(\n    animation &&\n    (isStr(animation) || ('exit' in animation && animation.exit))\n  );\n}\n","/* global: window */\nimport React, {\n  ReactNode,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport cx from 'clsx';\n\nimport { RefTrackerProvider } from './RefTrackerProvider';\n\nimport { eventManager } from '../core/eventManager';\nimport {\n  TriggerEvent,\n  MenuId,\n  ContextMenuParams,\n  MenuAnimation,\n} from '../types';\nimport { usePrevious, useRefTracker } from '../hooks';\nimport { createMenuController } from './menuController';\nimport { NOOP, STYLE, EVENT } from '../constants';\nimport {\n  cloneItems,\n  getMousePosition,\n  hasExitAnimation,\n  isFn,\n  isStr,\n} from './utils';\n\nexport interface MenuProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'id'> {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Theme is appended to `react-contexify__theme--${given theme}`.\n   *\n   * Built-in theme are `light` and `dark`\n   */\n  theme?: string;\n\n  /**\n   * Animation is appended to\n   * - `.react-contexify__will-enter--${given animation}`\n   * - `.react-contexify__will-leave--${given animation}`\n   *\n   * - To disable all animations you can pass `false`\n   * - To disable only the enter or the exit animation you can provide an object `{enter: false, exit: 'exitAnimation'}`\n   *\n   * - default is set to `scale`\n   *\n   * To use the built-in animation a helper in available\n   * `import { animation } from 'react-contexify`\n   *\n   * animation.fade\n   */\n  animation?: MenuAnimation;\n\n  /**\n   * Invoked after the menu is visible.\n   */\n  onShown?: () => void;\n\n  /**\n   * Invoked after the menu has been hidden.\n   */\n  onHidden?: () => void;\n}\n\ninterface MenuState {\n  x: number;\n  y: number;\n  visible: boolean;\n  triggerEvent: TriggerEvent;\n  propsFromTrigger: any;\n  willLeave: boolean;\n}\n\nfunction reducer(\n  state: MenuState,\n  payload: Partial<MenuState> | ((state: MenuState) => Partial<MenuState>)\n) {\n  return isFn(payload)\n    ? { ...state, ...payload(state) }\n    : { ...state, ...payload };\n}\n\nexport const Menu: React.FC<MenuProps> = ({\n  id,\n  theme,\n  style,\n  className,\n  children,\n  animation = 'scale',\n  onHidden = NOOP,\n  onShown = NOOP,\n  ...rest\n}) => {\n  const [state, setState] = useReducer(reducer, {\n    x: 0,\n    y: 0,\n    visible: false,\n    triggerEvent: {} as TriggerEvent,\n    propsFromTrigger: null,\n    willLeave: false,\n  });\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const didMount = useRef(false);\n  const wasVisible = usePrevious(state.visible);\n  const refTracker = useRefTracker();\n  const [menuController] = useState(() => createMenuController());\n\n  // subscribe event manager\n  useEffect(() => {\n    didMount.current = true;\n    eventManager.on(id, show).on(EVENT.HIDE_ALL, hide);\n\n    return () => {\n      eventManager.off(id, show).off(EVENT.HIDE_ALL, hide);\n    };\n    // hide rely on setState(dispatch), which is guaranted to be the same across render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // handle show/ hide callback\n  useEffect(() => {\n    if (didMount.current && state.visible !== wasVisible) {\n      state.visible ? onShown() : onHidden();\n    }\n    // wasWisible is a ref\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, onHidden, onShown]);\n\n  // collect menu items for keyboard navigation\n  useEffect(() => {\n    if (!state.visible) {\n      refTracker.clear();\n    } else {\n      menuController.init(Array.from(refTracker.values()));\n    }\n  }, [state.visible, menuController, refTracker]);\n\n  // compute menu position\n  useEffect(() => {\n    if (state.visible) {\n      const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n      const {\n        offsetWidth: menuWidth,\n        offsetHeight: menuHeight,\n      } = nodeRef.current!;\n      let { x, y } = state;\n\n      if (x + menuWidth > windowWidth) {\n        x -= x + menuWidth - windowWidth;\n      }\n\n      if (y + menuHeight > windowHeight) {\n        y -= y + menuHeight - windowHeight;\n      }\n\n      setState({\n        x,\n        y,\n      });\n    }\n\n    // state.visible and state{x,y} are updated together\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible]);\n\n  // subscribe dom events\n  useEffect(() => {\n    function handleKeyboard(e: KeyboardEvent) {\n      e.preventDefault();\n      switch (e.key) {\n        case 'Enter':\n          if (!menuController.openSubmenu()) hide();\n          break;\n        case 'Escape':\n          hide();\n          break;\n        case 'ArrowUp':\n          menuController.moveUp();\n          break;\n        case 'ArrowDown':\n          menuController.moveDown();\n          break;\n        case 'ArrowRight':\n          menuController.openSubmenu();\n          break;\n        case 'ArrowLeft':\n          menuController.closeSubmenu();\n          break;\n      }\n    }\n\n    if (state.visible) {\n      window.addEventListener('resize', hide);\n      window.addEventListener('contextmenu', hide);\n      window.addEventListener('click', hide);\n      window.addEventListener('scroll', hide);\n      window.addEventListener('keydown', handleKeyboard);\n\n      // This let us debug the menu in the console in dev mode\n      if (process.env.NODE_ENV !== 'development') {\n        window.addEventListener('blur', hide);\n      }\n    }\n\n    return () => {\n      window.removeEventListener('resize', hide);\n      window.removeEventListener('contextmenu', hide);\n      window.removeEventListener('click', hide);\n      window.removeEventListener('scroll', hide);\n      window.removeEventListener('keydown', handleKeyboard);\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.removeEventListener('blur', hide);\n      }\n    };\n    // state.visible will let us get the right reference to `hide`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, menuController]);\n\n  function show({ event, props, position }: ContextMenuParams) {\n    event.stopPropagation();\n    const { x, y } = position || getMousePosition(event);\n\n    // prevent react from batching the state update\n    // if the menu is already visible we have to recompute bounding rect based on position\n    setTimeout(() => {\n      setState({\n        visible: true,\n        willLeave: false,\n        x,\n        y,\n        triggerEvent: event,\n        propsFromTrigger: props,\n      });\n    }, 0);\n  }\n\n  function hide(event?: Event) {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    const e = event as KeyboardEvent & MouseEvent;\n\n    if (\n      typeof e !== 'undefined' &&\n      (e.button === 2 || e.ctrlKey === true) &&\n      e.type !== 'contextmenu'\n    ) {\n      return;\n    }\n\n    hasExitAnimation(animation)\n      ? setState(state => ({ willLeave: state.visible }))\n      : setState(state => ({ visible: state.visible ? false : state.visible }));\n  }\n\n  function handleAnimationEnd() {\n    if (state.willLeave && state.visible) {\n      setState({ visible: false, willLeave: false });\n    }\n  }\n\n  function computeAnimationClasses() {\n    if (!animation) return null;\n\n    if (isStr(animation)) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation}`]:\n          animation && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation} ${STYLE.animationWillLeave}'disabled'`]:\n          animation && visible && willLeave,\n      });\n    } else if ('enter' in animation && 'exit' in animation) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation.enter}`]:\n          animation.enter && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation.exit} ${STYLE.animationWillLeave}'disabled'`]:\n          animation.exit && visible && willLeave,\n      });\n    }\n\n    return null;\n  }\n\n  const { visible, triggerEvent, propsFromTrigger, x, y, willLeave } = state;\n  const cssClasses = cx(\n    STYLE.menu,\n    className,\n    { [`${STYLE.theme}${theme}`]: theme },\n    computeAnimationClasses()\n  );\n\n  const menuStyle = {\n    ...style,\n    left: x,\n    top: y,\n    opacity: 1,\n  };\n\n  return (\n    <RefTrackerProvider refTracker={refTracker}>\n      {visible && (\n        <div\n          {...rest}\n          className={cssClasses}\n          onAnimationEnd={handleAnimationEnd}\n          style={menuStyle}\n          ref={nodeRef}\n          role=\"menu\"\n        >\n          {cloneItems(children, {\n            propsFromTrigger,\n            triggerEvent,\n          })}\n        </div>\n      )}\n    </RefTrackerProvider>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import React, { ReactNode } from 'react';\nimport cx from 'clsx';\n\nimport {\n  ItemParams,\n  InternalProps,\n  BooleanPredicate,\n  HandlerParamsEvent,\n} from '../types';\nimport { useRefTrackerContext } from './RefTrackerProvider';\nimport { NOOP, STYLE } from '../constants';\nimport { getPredicateValue } from './utils';\n\nexport interface ItemProps\n  extends InternalProps,\n    Omit<React.HTMLAttributes<HTMLElement>, 'hidden' | 'disabled' | 'onClick'> {\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Passed to the `Item` onClick callback. Accessible via `data`\n   */\n  data?: any;\n\n  /**\n   * Disable `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemDisabled({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item disabled={isItemDisabled} data={data}>content</Item>\n   * ```\n   */\n  disabled?: BooleanPredicate;\n\n  /**\n   * Hide the `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemHidden({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item hidden={isItemHidden} data={data}>content</Item>\n   * ```\n   */\n  hidden?: BooleanPredicate;\n\n  /**\n   * Callback when the `Item` is clicked.\n   *\n   * @param event The event that occured on the Item node\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   * ```\n   * function handleItemClick({ triggerEvent, event, props, data }: ItemParams<type of props, type of data>){\n   *    // retrieve the id of the Item or any other dom attribute\n   *    const id = e.currentTarget.id;\n   *\n   *    // access the props and the data\n   *    console.log(props, data);\n   *\n   *    // access the coordinate of the mouse when the menu has been displayed\n   *    const {  clientX, clientY } = triggerEvent;\n   *\n   * }\n   *\n   * <Item id=\"item-id\" onClick={handleItemClick} data={{key: 'value'}}>Something</Item>\n   * ```\n   */\n  onClick?: (args: ItemParams) => void;\n}\n\nexport const Item: React.FC<ItemProps> = ({\n  children,\n  className,\n  style,\n  triggerEvent,\n  data,\n  propsFromTrigger,\n  onClick = NOOP,\n  disabled = false,\n  hidden = false,\n  ...rest\n}) => {\n  const refTracker = useRefTrackerContext();\n  const handlerParams = {\n    data,\n    triggerEvent: triggerEvent as HandlerParamsEvent,\n    props: propsFromTrigger,\n  };\n  const isDisabled = getPredicateValue(disabled, handlerParams);\n  const isHidden = getPredicateValue(hidden, handlerParams);\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    (handlerParams as ItemParams).event = e;\n    isDisabled ? e.stopPropagation() : onClick(handlerParams as ItemParams);\n  }\n\n  function trackRef(node: HTMLElement | null) {\n    if (node && !isDisabled)\n      refTracker.set(node, {\n        node,\n        isSubmenu: false,\n      });\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (e.key === 'Enter') {\n      (handlerParams as ItemParams).event = e;\n      onClick(handlerParams as ItemParams);\n    }\n  }\n\n  if (isHidden) return null;\n\n  const cssClasses = cx(STYLE.item, className, {\n    [`${STYLE.itemDisabled}`]: isDisabled,\n  });\n\n  return (\n    <div\n      {...rest}\n      className={cssClasses}\n      style={style}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={trackRef}\n      tabIndex={-1}\n      role=\"menuitem\"\n      aria-disabled={isDisabled}\n    >\n      <div className={STYLE.itemContent}>{children}</div>\n    </div>\n  );\n};\n","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport cx from 'clsx';\n\nimport { InternalProps, BooleanPredicate, HandlerParamsEvent } from '../types';\nimport { RefTrackerProvider, useRefTrackerContext } from './RefTrackerProvider';\nimport { useRefTracker } from '../hooks';\nimport { STYLE } from '../constants';\nimport { cloneItems, getPredicateValue } from './utils';\n\nexport interface SubMenuProps\n  extends InternalProps,\n    Omit<React.HTMLAttributes<HTMLElement>, 'hidden'> {\n  /**\n   * Any valid node that can be rendered\n   */\n  label: ReactNode;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Render a custom arrow\n   */\n  arrow?: ReactNode;\n\n  /**\n   * Disable the `Submenu`. If a function is used, a boolean must be returned\n   */\n  disabled?: BooleanPredicate;\n\n  /**\n   * Hide the `Submenu` and his children. If a function is used, a boolean must be returned\n   */\n  hidden?: BooleanPredicate;\n}\n\ninterface SubMenuState {\n  left?: string | number;\n  right?: string | number;\n  top?: string | number;\n  bottom?: string | number;\n}\n\nexport const Submenu: React.FC<SubMenuProps> = ({\n  arrow = '▶',\n  children,\n  disabled = false,\n  hidden = false,\n  label,\n  className,\n  triggerEvent,\n  propsFromTrigger,\n  style,\n  ...rest\n}) => {\n  const menuRefTracker = useRefTrackerContext();\n  const refTracker = useRefTracker();\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const [position, setPosition] = useState<SubMenuState>({\n    left: '100%',\n    top: 0,\n    bottom: 'initial',\n  });\n  const handlerParams = {\n    triggerEvent: triggerEvent as HandlerParamsEvent,\n    props: propsFromTrigger,\n  };\n  const isDisabled = getPredicateValue(disabled, handlerParams);\n  const isHidden = getPredicateValue(hidden, handlerParams);\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const { innerWidth, innerHeight } = window;\n      const rect = nodeRef.current.getBoundingClientRect();\n      const style: SubMenuState = {};\n\n      if (rect.right < innerWidth) {\n        style.left = '100%';\n        style.right = undefined;\n      } else {\n        style.right = '100%';\n        style.left = undefined;\n      }\n\n      if (rect.bottom > innerHeight) {\n        style.bottom = 0;\n        style.top = 'initial';\n      } else {\n        style.bottom = 'initial';\n      }\n\n      setPosition(style);\n    }\n  }, []);\n\n  function handleClick(e: React.SyntheticEvent) {\n    e.stopPropagation();\n  }\n\n  function trackRef(node: HTMLElement | null) {\n    if (node && !isDisabled)\n      menuRefTracker.set(node, {\n        node,\n        isSubmenu: true,\n        submenuRefTracker: refTracker,\n      });\n  }\n\n  if (isHidden) return null;\n\n  const cssClasses = cx(STYLE.item, className, {\n    [`${STYLE.itemDisabled}`]: isDisabled,\n  });\n\n  const submenuStyle = {\n    ...style,\n    ...position,\n  };\n\n  return (\n    <RefTrackerProvider refTracker={refTracker}>\n      <div\n        {...rest}\n        className={cssClasses}\n        ref={trackRef}\n        tabIndex={-1}\n        role=\"menuitem\"\n        aria-haspopup\n        aria-disabled={isDisabled}\n      >\n        <div className={STYLE.itemContent} onClick={handleClick}>\n          {label}\n          <span className={STYLE.submenuArrow}>{arrow}</span>\n        </div>\n        <div className={STYLE.submenu} ref={nodeRef} style={submenuStyle}>\n          {cloneItems(children, {\n            propsFromTrigger,\n            // injected by the parent\n            triggerEvent: triggerEvent!,\n          })}\n        </div>\n      </div>\n    </RefTrackerProvider>\n  );\n};\n","// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Menu, Item, Submenu, useContextMenu } from 'react-contexify'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst ContextSubMenu = () => {\n  const { show } = useContextMenu({ id: 'submenu_id' })\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Sub Menu</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button color='primary' onContextMenu={show} outline>\n          Submenu\n        </Button>\n        <Menu id='submenu_id'>\n          <Item onClick={() => toast.success('Clicked Option 1')}>Option 1</Item>\n          <Item onClick={() => toast.success('Clicked Option 2')}>Option 2</Item>\n          <Item disabled>Option 3</Item>\n          <Submenu label='Submenu'>\n            <Item onClick={() => toast.success('Clicked Foo Bar')}>Foo Bar</Item>\n            <Submenu label='Submenu'>\n              <Item onClick={() => toast.success('Clicked Echo')}>Echo</Item>\n              <Item onClick={() => toast.success('Clicked Foxtrot')}>Foxtrot</Item>\n              <Item onClick={() => toast.success('Clicked Golf')}>Golf</Item>\n            </Submenu>\n          </Submenu>\n        </Menu>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ContextSubMenu\n","// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Menu, Item, useContextMenu } from 'react-contexify'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst ContextMenuBasic = () => {\n  const { show } = useContextMenu({ id: 'menu_id' })\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic Context Menu</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button color='primary' onContextMenu={show} outline>\n          Right Click On Me\n        </Button>\n        <Menu id='menu_id'>\n          <Item onClick={() => toast.success('Clicked Option 1')}>Item 1</Item>\n          <Item onClick={() => toast.success('Clicked Option 2')}>Item 2</Item>\n        </Menu>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ContextMenuBasic\n","// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Menu, Item, useContextMenu } from 'react-contexify'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst ContextMenuLeftClick = () => {\n  const { show } = useContextMenu({ id: 'menu_left' })\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Left Click</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button color='primary' onClick={show} outline>\n          Left Click On Me\n        </Button>\n        <Menu id='menu_left'>\n          <Item onClick={() => toast.success('Clicked Option 1')}>Option 1</Item>\n          <Item onClick={() => toast.success('Clicked Option 2')}>Option 2</Item>\n        </Menu>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ContextMenuLeftClick\n","// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Menu, Item, useContextMenu } from 'react-contexify'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst ContextMenuDoubleClick = () => {\n  const { show } = useContextMenu({ id: 'menu_double' })\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Double Click</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button color='primary' onDoubleClick={show} outline>\n          Double Click On Me\n        </Button>\n        <Menu id='menu_double'>\n          <Item onClick={() => toast.success('Clicked Option 1')}>Option 1</Item>\n          <Item onClick={() => toast.success('Clicked Option 2')}>Option 2</Item>\n        </Menu>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ContextMenuDoubleClick\n","// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Menu, Item, useContextMenu, animation } from 'react-contexify'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst ContextMenuAnimations = () => {\n  const { show: showFade } = useContextMenu({\n    id: 'fade'\n  })\n  const { show: showFlip } = useContextMenu({\n    id: 'flip'\n  })\n  const { show: showSlide } = useContextMenu({\n    id: 'pop'\n  })\n\n  const FadeMenu = () => {\n    return (\n      <Menu id='fade' animation={animation.fade}>\n        <Item onClick={() => toast.success('Clicked Option 1')}>Option 1</Item>\n        <Item onClick={() => toast.success('Clicked Option 2')}>Option 2</Item>\n      </Menu>\n    )\n  }\n  const FlipMenu = () => {\n    return (\n      <Menu id='flip' animation={animation.flip}>\n        <Item onClick={() => toast.success('Clicked Option 1')}>Option 1</Item>\n        <Item onClick={() => toast.success('Clicked Option 2')}>Option 2</Item>\n      </Menu>\n    )\n  }\n  const SlideMenu = () => {\n    return (\n      <Menu id='pop' animation={animation.slide}>\n        <Item onClick={() => toast.success('Clicked Option 1')}>Option 1</Item>\n        <Item onClick={() => toast.success('Clicked Option 2')}>Option 2</Item>\n      </Menu>\n    )\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Animations</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onContextMenu={showFade} outline>\n            Fade\n          </Button>\n\n          <Button color='primary' onContextMenu={showFlip} outline>\n            Flip\n          </Button>\n\n          <Button color='primary' onContextMenu={showSlide} outline>\n            Slide\n          </Button>\n        </div>\n        <FadeMenu />\n        <FlipMenu />\n        <SlideMenu />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ContextMenuAnimations\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Demo Components\nimport ContextSubMenu from './ContextSubmenu'\nimport ContextMenuBasic from './ContextMenuBasic'\nimport ContextMenuLeftClick from './ContextMenuLeftClick'\nimport ContextMenuDoubleClick from './ContextMenuDoubleClick'\nimport ContextMenuAnimation from './ContextMenuAnimation'\n\n// ** Styles\nimport 'react-contexify/dist/ReactContexify.min.css'\nimport '@styles/react/libs/context-menu/context-menu.scss'\n\nconst Contexify = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Contexify'\n        subTitle='Adds a context menu to your react app with ease'\n        link='https://github.com/fkhadra/react-contexify'\n      />\n      <Row>\n        <Col sm='12'>\n          <ContextMenuBasic />\n        </Col>\n        <Col sm='12'>\n          <ContextSubMenu />\n        </Col>\n        <Col sm='12'>\n          <ContextMenuLeftClick />\n        </Col>\n        <Col sm='12'>\n          <ContextMenuDoubleClick />\n        </Col>\n        <Col sm='12'>\n          <ContextMenuAnimation />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Contexify\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}