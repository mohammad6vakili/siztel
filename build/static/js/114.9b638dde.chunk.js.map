{"version":3,"sources":["views/extensions/react-hot-toasts/ToastBlank.js","views/extensions/react-hot-toasts/ToastError.js","views/extensions/react-hot-toasts/ToastEmoji.js","views/extensions/react-hot-toasts/ToastThemed.js","views/extensions/react-hot-toasts/ToastCustom.js","views/extensions/react-hot-toasts/ToastSuccess.js","views/extensions/react-hot-toasts/ToastPromise.js","views/extensions/react-hot-toasts/ToastMultiLine.js","views/extensions/react-hot-toasts/ToastCustomPosition.js","views/extensions/react-hot-toasts/index.js","@core/components/avatar/index.js","@core/components/extensions-header/index.js","assets/images/portrait/small/avatar-s-20.jpg"],"names":["ToastBlank","_jsx","Card","children","CardBody","_jsxs","className","Square","size","Button","color","onClick","toast","ToastError","X","error","ToastEmoji","Smile","icon","ToastThemed","colors","useContext","ThemeColors","Feather","success","style","padding","primary","main","border","concat","iconTheme","ToastCustom","Edit2","t","Avatar","img","avatarImg","dismiss","id","minWidth","ToastSuccess","CheckCircle","ToastPromise","Clock","myPromise","Promise","resolve","reject","setTimeout","Math","random","promise","loading","ToastMultiLine","AlignCenter","ToastCustomPosition","Grid","position","ReactHotToast","Fragment","ExtensionsHeader","title","subTitle","link","Row","Col","xs","sm","lg","forwardRef","props","ref","_classnames","_classnames3","status","badgeUp","content","Tag","tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","_objectWithoutProperties","_excluded","_objectSpread","classnames","_defineProperty","undefined","str","results","split","forEach","e","push","join","getInitials","Badge","pill","src","alt","height","width","defaultProps","href","target","rel"],"mappings":"yMAwBeA,EAjBI,WACjB,OACEC,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACM,IAAM,CAACC,KAAK,KAAKF,UAAU,SAC5BL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,UAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,kDACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QAAS,kBAAMC,YAAM,cAAc,EAACT,SAAC,gBAOvE,E,SCEeU,EAjBI,WACjB,OACEZ,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACa,IAAC,CAACN,KAAK,KAAKF,UAAU,SACvBL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,UAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,wDACrBF,cAACQ,IAAM,CAACC,MAAM,SAASC,QAAS,kBAAMC,IAAMG,MAAM,oBAAoB,EAACZ,SAAC,gBAOlF,E,SCEea,EAjBI,WACjB,OACEf,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACgB,IAAK,CAACT,KAAK,KAAKF,UAAU,SAC3BL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,UAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,sCACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QAAS,kBAAMC,YAAM,YAAa,CAAEM,KAAM,gBAAO,EAACf,SAAC,gBAOrF,E,kBCwBegB,EAjCK,WAElB,IAAQC,EAAWC,qBAAWC,KAAtBF,OAeR,OACEnB,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACsB,IAAO,CAACf,KAAK,KAAKF,UAAU,SAC7BL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,WAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,mDACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QApBZ,WAClB,OAAOC,IAAMY,QAAQ,mCAAoC,CACvDC,MAAO,CACLC,QAAS,OACThB,MAAOU,EAAOO,QAAQC,KACtBC,OAAO,aAADC,OAAeV,EAAOO,QAAQC,OAEtCG,UAAW,CACTJ,QAASP,EAAOO,QAAQC,OAG9B,EASqDzB,SAAC,gBAOxD,E,2BCQe6B,EAvCK,WAuBlB,OACE/B,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACgC,IAAK,CAACzB,KAAK,KAAKF,UAAU,SAC3BL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,WAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,4CACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QA7BZ,WAClB,OAAOC,aACL,SAAAsB,GAAC,OACC7B,eAAA,OAAKC,UAAU,0DAAyDH,SAAA,CACtEE,eAAA,OAAKC,UAAU,4BAA2BH,SAAA,CACxCF,cAACkC,IAAM,CAACC,IAAKC,UAAW/B,UAAU,SAClCD,eAAA,OAAAF,SAAA,CACEF,cAAA,KAAGK,UAAU,OAAMH,SAAC,aACpBF,cAAA,SAAAE,SAAO,oCAGXF,cAACa,IAAC,CAACN,KAAK,KAAKG,QAAS,kBAAMC,IAAM0B,QAAQJ,EAAEK,GAAG,MAC3C,GAER,CACEd,MAAO,CACLe,SAAU,UAIlB,EASqDrC,SAAC,iBAOxD,E,SC1BesC,EAjBM,WACnB,OACExC,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACyC,IAAW,CAAClC,KAAK,KAAKF,UAAU,SACjCL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,YAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,uDACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QAAS,kBAAMC,IAAMY,QAAQ,wBAAwB,EAACrB,SAAC,kBAOzF,E,SCoBewC,EAnCM,WAmBnB,OACE1C,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAAC2C,IAAK,CAACpC,KAAK,KAAKF,UAAU,SAC3BL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,YAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,wDACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QAzBZ,WAClB,IAAMkC,EAAY,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACLC,KAAKC,SAAW,GAClBJ,EAAQ,OAERC,EAAO,MAEX,GAAG,IACL,IAEA,OAAOpC,IAAMwC,QAAQP,EAAW,CAC9BQ,QAAS,UACT7B,QAAS,eACTT,MAAO,uBAEX,EASqDZ,SAAC,kBAOxD,E,SCVemD,EAvBQ,WAOrB,OACErD,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACsD,IAAW,CAAC/C,KAAK,KAAKF,UAAU,SACjCL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,cAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,8CACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QAbZ,WAClB,OAAOC,YACL,yJAEJ,EASqDT,SAAC,oBAOxD,E,SCEeqD,EAvBa,WAO1B,OACEvD,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAQ,CAAAD,SACPE,eAAA,OAAKC,UAAU,oDAAmDH,SAAA,CAChEF,cAACwD,IAAI,CAACjD,KAAK,KAAKF,UAAU,SAC1BL,cAAA,MAAIK,UAAU,iBAAgBH,SAAC,oBAC/BF,cAAA,KAAGK,UAAU,QAAOH,SAAC,qDACrBF,cAACQ,IAAM,CAACC,MAAM,UAAUC,QAbZ,WAClB,OAAOC,IAAMY,QAAQ,wBAAyB,CAC5CkC,SAAU,gBAEd,EASqDvD,SAAC,mBAOxD,E,SCkCewD,UA1CO,WACpB,OACEtD,eAACuD,WAAQ,CAAAzD,SAAA,CACPF,cAAC4D,IAAgB,CACfC,MAAM,kBACNC,SAAS,mCACTC,KAAK,gDAGP3D,eAAC4D,KAAG,CAAC3D,UAAU,eAAcH,SAAA,CAC3BF,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAACD,EAAU,MAEbC,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAACqD,EAAc,MAEjBrD,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAACwC,EAAY,MAEfxC,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAACY,EAAU,MAEbZ,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAAC0C,EAAY,MAEf1C,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAACe,EAAU,MAEbf,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAACkB,EAAW,MAEdlB,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAAC+B,EAAW,MAEd/B,cAACiE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElE,SACxBF,cAACuD,EAAmB,WAK9B,C,gRClDMrB,EAASmC,sBAAW,SAACC,EAAOC,GAAS,IAADC,EAAAC,EAGtCtC,EAiBEmC,EAjBFnC,IACA5B,EAgBE+D,EAhBF/D,KACAU,EAeEqD,EAfFrD,KACAR,EAcE6D,EAdF7D,MACAiE,EAaEJ,EAbFI,OACAC,EAYEL,EAZFK,QACAC,EAWEN,EAXFM,QACKC,EAUHP,EAVFQ,IACAC,EASET,EATFS,SACAC,EAQEV,EARFU,SACA3E,EAOEiE,EAPFjE,UACA4E,EAMEX,EANFW,UACAC,EAKEZ,EALFY,UACAC,EAIEb,EAJFa,WACAC,EAGEd,EAHFc,aACAC,EAEEf,EAFFe,cACGC,EAAIC,YACLjB,EAAKkB,GAYT,OACEpF,eAACyE,EAAGY,wBAAA,CACFpF,UAAWqF,IAAW,UAAQlB,EAAA,GAAAmB,YAAAnB,EAC3BnE,EAAYA,GAASsF,YAAAnB,EAAC,MAAD3C,OACfpB,GAAUA,GAAKkF,YAAAnB,EAAC,UAAD3C,OACXtB,GAASA,GAAIiE,IAE1BD,IAAKA,GACDe,GAAI,IAAApF,SAAA,EAEC,IAARiC,QAAyByD,IAARzD,EAChB/B,eAAA,QACEC,UAAWqF,IAAW,iBAAkB,CACtC,oBAAqBf,IAEvBnD,MAAO6D,EAAcnF,SAAA,CAEpB6E,EA1BW,SAAAc,GAClB,IAAMC,EAAU,GAKhB,OAJkBD,EAAIE,MAAM,KAClBC,SAAQ,SAAAC,GAChBH,EAAQI,KAAKD,EAAE,GACjB,IACOH,EAAQK,KAAK,GACtB,CAmBoBC,CAAYxB,GAAWA,EAElC3D,GAAc,KACd0D,EACC3E,cAACqG,IAAK,CAAC5F,MAAO0E,GAA0B,UAAW9E,UAAU,oBAAoBiG,MAAI,EAAApG,SAClF+E,GAAwB,MAEzB,QAGNjF,cAAA,OACEK,UAAWqF,IAAUC,YAAC,CAAC,EACpBP,EAAeA,IAElBmB,IAAKpE,EACLqE,IAAI,YACJC,OAAQvB,IAAc3E,EAAO2E,EAAY,GACzCwB,MAAO1B,IAAazE,EAAOyE,EAAW,KAGzCN,EACC1E,cAAA,QACEK,UAAWqF,KAAUjB,EAAA,GAAAkB,YAAAlB,EAAA,iBAAA5C,OACD6C,GAAWA,GAAMiB,YAAAlB,EAAC,iBAAD5C,OACjBtB,GAASA,GAAIkE,MAGjC,QAGV,IAEevC,MA+DfA,EAAOyE,aAAe,CACpB7B,IAAK,M,mCC3JP,oBAwBelB,IAlBU,SAAAU,GACvB,OACEtE,cAACgE,KAAG,CAAC3D,UAAU,OAAMH,SACnBE,eAAC6D,IAAG,CAACE,GAAG,KAAK9D,UAAU,QAAOH,SAAA,CAC5BF,cAAA,KAAGK,UAAU,qCAAqC,YAAU,kBAAiBH,SAC1EoE,EAAMT,QAERS,EAAMP,KACL/D,cAAA,KAAG4G,KAAMtC,EAAMP,KAAM8C,OAAO,SAASC,IAAI,sBAAqB5G,SAC3DoE,EAAMR,WAGT9D,cAAA,KAAGK,UAAU,eAAcH,SAAEoE,EAAMR,eAK7C,C,mCCvBA,OAAe,cAA0B,uC","file":"static/js/114.9b638dde.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Square } from 'react-feather'\n\nconst ToastBlank = () => {\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <Square size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Blank</h5>\n          <p className='mb-50'>The most basic variant does not have an icon.</p>\n          <Button color='primary' onClick={() => toast('Blank Toast')}>\n            Blank\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastBlank\n","// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { X } from 'react-feather'\n\nconst ToastError = () => {\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <X size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Error</h5>\n          <p className='mb-50'>Creates a notification with an animated error icon.</p>\n          <Button color='danger' onClick={() => toast.error(\"This didn't work.\")}>\n            Error\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastError\n","// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Smile } from 'react-feather'\n\nconst ToastEmoji = () => {\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <Smile size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Emoji</h5>\n          <p className='mb-50'>Add any emoji instead of an icon.</p>\n          <Button color='primary' onClick={() => toast('Good Job!', { icon: '👏' })}>\n            Emoji\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastEmoji\n","// ** React Imports\nimport { useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Feather } from 'react-feather'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\nconst ToastThemed = () => {\n  // ** Theme Colors\n  const { colors } = useContext(ThemeColors)\n\n  const handleClick = () => {\n    return toast.success('Look at me, I have brand styles.', {\n      style: {\n        padding: '16px',\n        color: colors.primary.main,\n        border: `1px solid ${colors.primary.main}`\n      },\n      iconTheme: {\n        primary: colors.primary.main\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <Feather size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Themed</h5>\n          <p className='mb-50'>Customize the default styles the way you want.</p>\n          <Button color='primary' onClick={handleClick}>\n            Emoji\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastThemed\n","// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Edit2, X } from 'react-feather'\n\n// ** Avatar Image\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst ToastCustom = () => {\n  const handleClick = () => {\n    return toast(\n      t => (\n        <div className='w-100 d-flex align-items-center justify-content-between'>\n          <div className='d-flex align-items-center'>\n            <Avatar img={avatarImg} className='me-1' />\n            <div>\n              <p className='mb-0'>John Doe</p>\n              <small>Sure! 8:30pm works great!</small>\n            </div>\n          </div>\n          <X size='14' onClick={() => toast.dismiss(t.id)} />\n        </div>\n      ),\n      {\n        style: {\n          minWidth: '300px'\n        }\n      }\n    )\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <Edit2 size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Custom</h5>\n          <p className='mb-50'>Make a toast using any custom content .</p>\n          <Button color='primary' onClick={handleClick}>\n            Custom\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastCustom\n","// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { CheckCircle } from 'react-feather'\n\nconst ToastSuccess = () => {\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <CheckCircle size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Success</h5>\n          <p className='mb-50'>Creates a notification with an animated checkmark.</p>\n          <Button color='success' onClick={() => toast.success('Successfully toasted!')}>\n            Success\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastSuccess\n","// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Clock } from 'react-feather'\n\nconst ToastPromise = () => {\n  const handleClick = () => {\n    const myPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() < 0.5) {\n          resolve('foo')\n        } else {\n          reject('fox')\n        }\n      }, 1000)\n    })\n\n    return toast.promise(myPromise, {\n      loading: 'Loading',\n      success: 'Got the data',\n      error: 'Error when fetching'\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <Clock size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Promise</h5>\n          <p className='mb-50'>Update automatically when promise resolves / fails.</p>\n          <Button color='primary' onClick={handleClick}>\n            Promise\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastPromise\n","// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { AlignCenter } from 'react-feather'\n\nconst ToastMultiLine = () => {\n  const handleClick = () => {\n    return toast(\n      \"This toast is super big. I don't think anyone could eat it in one bite. It's larger than you expected. You eat it but it does not seem to get smaller.\"\n    )\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <AlignCenter size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Multiline</h5>\n          <p className='mb-50'>The most basic variant with longer texts.</p>\n          <Button color='primary' onClick={handleClick}>\n            Multiline\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastMultiLine\n","// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Grid } from 'react-feather'\n\nconst ToastCustomPosition = () => {\n  const handleClick = () => {\n    return toast.success('Always at the bottom.', {\n      position: 'bottom-right'\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <div className='d-flex text-center align-items-center flex-column'>\n          <Grid size='32' className='mb-1' />\n          <h5 className='mb-1 fw-bolder'>Custom Position</h5>\n          <p className='mb-50'>You can change the toast's position as you like.</p>\n          <Button color='primary' onClick={handleClick}>\n            Position\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastCustomPosition\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport ToastBlank from './ToastBlank'\nimport ToastError from './ToastError'\nimport ToastEmoji from './ToastEmoji'\nimport ToastThemed from './ToastThemed'\nimport ToastCustom from './ToastCustom'\nimport ToastSuccess from './ToastSuccess'\nimport ToastPromise from './ToastPromise'\nimport ToastMultiLine from './ToastMultiLine'\nimport ToastCustomPosition from './ToastCustomPosition'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\nconst ReactHotToast = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Hot Toast'\n        subTitle='Smoking hot React notifications.'\n        link='https://github.com/timolins/react-hot-toast'\n      />\n\n      <Row className='match-height'>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastBlank />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastMultiLine />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastSuccess />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastError />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastPromise />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastEmoji />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastThemed />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastCustom />\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <ToastCustomPosition />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default ReactHotToast\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-20.40d668f5.jpg\";"],"sourceRoot":""}