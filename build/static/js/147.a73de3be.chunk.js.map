{"version":3,"sources":["views/components/navComponent/NavEnd.js","views/components/navComponent/NavBasic.js","views/components/navComponent/NavBorder.js","views/components/navComponent/NavCenter.js","views/components/navComponent/NavDivider.js","views/components/navComponent/NavVertical.js","views/components/navComponent/NavSquareBorder.js","views/components/navComponent/NavVerticalBorder.js","views/components/navComponent/NavComponentSourceCode.js","views/components/navComponent/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["NavEnd","_jsxs","Nav","className","children","_jsx","NavItem","NavLink","href","active","disabled","NavBasic","NavBorder","NavCenter","NavDivider","vertical","NavVertical","NavSquareBorder","NavVerticalBorder","navBasic","navBorder","navCenter","navEnd","navVertical","navVerticalBorder","navSquareBorder","navDivider","NavComponent","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","title","data","Row","Col","md","sm","Card","code","CardText","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","length","classnames","CardSnippet","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Code","size","CardBody","CardHeader","CardTitle","onClick","toggle","Collapse"],"mappings":"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","file":"static/js/147.a73de3be.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavEnd = () => {\n  return (\n    <Nav className='justify-content-end'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavEnd\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBasic = () => {\n  return (\n    <Nav>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBasic\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBorder = () => {\n  return (\n    <Nav className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBorder\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavCenter = () => {\n  return (\n    <Nav className='justify-content-center'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavCenter\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavDivider = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <li className='dropdown-divider'>\n        <NavLink href='#'>Link</NavLink>\n      </li>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavDivider\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVertical = () => {\n  return (\n    <Nav vertical>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVertical\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavSquareBorder = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavSquareBorder\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVerticalBorder = () => {\n  return (\n    <Nav vertical className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVerticalBorder\n","export const navBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBasic = () => {\n  return (\n    <Nav>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const navBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBorder = () => {\n  return (\n    <Nav className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBorder\n  `}\n    </code>\n  </pre>\n)\n\nexport const navCenter = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavCenter = () => {\n  return (\n    <Nav className='justify-content-center'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavCenter\n  `}\n    </code>\n  </pre>\n)\n\nexport const navEnd = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavEnd = () => {\n  return (\n    <Nav className='justify-content-end'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavEnd\n  `}\n    </code>\n  </pre>\n)\n\nexport const navVertical = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVertical = () => {\n  return (\n    <Nav vertical>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVertical\n  `}\n    </code>\n  </pre>\n)\n\nexport const navVerticalBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVerticalBorder = () => {\n  return (\n    <Nav vertical className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVerticalBorder\n  `}\n    </code>\n  </pre>\n)\n\nexport const navSquareBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavSquareBorder = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavSquareBorder\n  `}\n    </code>\n  </pre>\n)\n\nexport const navDivider = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavDivider = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem className='dropdown-divider'>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavDivider\n  `}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport NavEnd from './NavEnd'\nimport NavBasic from './NavBasic'\nimport NavBorder from './NavBorder'\nimport NavCenter from './NavCenter'\nimport NavDivider from './NavDivider'\nimport NavVertical from './NavVertical'\nimport NavSquareBorder from './NavSquareBorder'\nimport NavVerticalBorder from './NavVerticalBorder'\n\n// ** Source Code\nimport {\n  navEnd,\n  navBasic,\n  navBorder,\n  navCenter,\n  navDivider,\n  navVertical,\n  navSquareBorder,\n  navVerticalBorder\n} from './NavComponentSourceCode'\n\nconst NavComponent = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Navs' data={[{ title: 'Components' }, { title: 'Navs' }]} />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <Card title='Base Nav' code={navBasic}>\n            <CardText>\n              The base nav component provides a strong foundation for building all types of navigation components.\n            </CardText>\n            <NavBasic />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='With Border' code={navBorder}>\n            <CardText>\n              Use Class <code>.wrap-border</code> with your <code>nav</code> tag to wrap your nav with a border\n            </CardText>\n            <NavBorder />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Center Alignment' code={navCenter}>\n            <CardText>\n              Use Class <code>.justify-content-center</code> with your <code>nav</code> tag to align your nav to center.\n            </CardText>\n            <NavCenter />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='End Alignment' code={navEnd}>\n            <CardText>\n              Use Class <code>.justify-content-end</code> with your <code>nav</code> tag to align your nav to End.\n            </CardText>\n            <NavEnd />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Vertical Nav' code={navVertical}>\n            <CardText>\n              Use prop <code>vertical</code> with nav tag to make it vertical.\n            </CardText>\n            <NavVertical />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Vertical Nav With Border' code={navVerticalBorder}>\n            <CardText>\n              To wrap with border, use <code>.wrap-border class</code>.\n            </CardText>\n            <NavVerticalBorder />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Nav With square Border' code={navSquareBorder}>\n            <CardText>\n              To wrap with square border, use <code>.square-border</code> class with <code>.wrap-border</code> class.\n            </CardText>\n            <NavSquareBorder />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Nav With Divider' code={navDivider}>\n            <CardText>\n              To add divider, use <code>.dropdown-divider</code> class to <code>NavItem</code>\n            </CardText>\n            <NavDivider />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default NavComponent\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}