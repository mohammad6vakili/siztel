{"version":3,"sources":["views/extensions/import-export/ExportSelected.js","@core/components/extensions-header/index.js"],"names":["initialData","id","name","username","email","website","ExportSelected","_useState","useState","data","_slicedToArray","_useState3","_useState4","value","setValue","_useState5","_useState6","modal","setModal","_useState7","_useState8","fileName","setFileName","_useState9","_useState10","filteredData","setFilteredData","_useState11","_useState12","dataToExport","setDataToExport","_useState13","_useState14","fileFormat","setFileFormat","_useState15","_useState16","selectedRows","setSelectedRows","toggleModal","renderTableData","map","col","_jsxs","className","classnames","selected","includes","children","_jsx","Input","type","onChange","selectedRowsArr","splice","indexOf","push","_toConsumableArray","handleSelect","checked","Fragment","ExtensionsHeader","title","subTitle","link","Row","Col","sm","Card","CardBody","Button","color","onClick","Label","for","bsSize","e","target","length","filter","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","handleFilter","Table","responsive","label","i","handleSelectAll","Modal","isOpen","toggle","onClosed","ModalHeader","ModalBody","placeholder","ModalFooter","exportArr","item","concat","wb","XLSX","utils","json_to_sheet","wbout","book_new","book_append_sheet","writeFile","handleExport","props","href","rel"],"mappings":"mPA0BMA,EAAc,CAClB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,iBAEX,CACEJ,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,iBAEX,CACEJ,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,eAEX,CACEJ,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,YAEX,CACEJ,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,gBAEX,CACEJ,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,WAEX,CACEJ,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,YAEX,CACEJ,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,gBAEX,CACEJ,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,cAEX,CACEJ,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,gBAgNEC,UA5MQ,WAErB,IAAAC,EAAeC,mBAASR,GAAjBS,EAA6BC,YAAAH,EAAA,GAAzB,GACXI,EAA0BH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA0BP,oBAAS,GAAMQ,EAAAN,YAAAK,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAgCX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAAwCf,mBAAS,IAAGgB,EAAAd,YAAAa,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAwCnB,mBAAS,IAAGoB,EAAAlB,YAAAiB,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAoCvB,mBAAS,QAAOwB,EAAAtB,YAAAqB,EAAA,GAA7CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAAwC3B,mBAAS,IAAG4B,EAAA1B,YAAAyB,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EAAc,WAAH,OAASrB,GAAUD,EAAM,EA0EpCuB,GADQ3B,EAAQY,EAAehB,GACPgC,KAAI,SAAAC,GAChC,OACEC,eAAA,MAEEC,UAAWC,IAAW,CACpBC,SAAUT,EAAaU,SAASL,EAAIzC,MACnC+C,SAAA,CAEHC,cAAA,MAAAD,SACEC,cAAA,OAAKL,UAAU,aAAYI,SACzBC,cAACC,IAAK,CACJjD,GAAIyC,EAAIzC,GACRkD,KAAK,WACLC,SAAU,kBAxCD,SAAAnD,GACnB,IAAMoD,EAAkBhB,EACxB,GAAKgB,EAAgBN,SAAS9C,GAEvB,KAAIoD,EAAgBN,SAAS9C,GAGlC,OAAO,KAFPoD,EAAgBC,OAAOD,EAAgBE,QAAQtD,GAAK,EAGtD,MALEoD,EAAgBG,KAAKvD,GAMvBqC,EAAemB,YAAKJ,GACtB,CA8B4BK,CAAahB,EAAIzC,GAAG,EACpC0D,UAAWtB,EAAaU,SAASL,EAAIzC,UAI3CgD,cAAA,MAAAD,SAAKN,EAAItC,QACT6C,cAAA,MAAAD,SAAKN,EAAIxC,OACT+C,cAAA,MAAAD,SAAKN,EAAIrC,UACT4C,cAAA,MAAAD,SAAKN,EAAIzC,OAlBJyC,EAAIzC,GAqBf,IAEA,OACE0C,eAACiB,WAAQ,CAAAZ,SAAA,CACPC,cAACY,IAAgB,CACfC,MAAM,OACNC,SAAS,8DACTC,KAAK,uCAEPf,cAACgB,KAAG,CAACrB,UAAU,mBAAkBI,SAC/BC,cAACiB,IAAG,CAACC,GAAG,KAAInB,SACVL,eAACyB,IAAI,CAAApB,SAAA,CACHC,cAACoB,IAAQ,CAACzB,UAAU,OAAMI,SACxBL,eAAA,OAAKC,UAAU,2CAA0CI,SAAA,CACvDC,cAACqB,IAAM,CAACC,MAAM,UAAUC,QAAS,kBAAMjC,GAAa,EAACS,SAAC,oBAGtDL,eAAA,OAAKC,UAAU,gDAA+CI,SAAA,CAC5DC,cAACwB,IAAK,CAACC,IAAI,eAAe9B,UAAU,OAAMI,SAAC,WAG3CC,cAACC,IAAK,CAACjD,GAAG,eAAe0E,OAAO,KAAKxB,KAAK,OAAOtC,MAAOA,EAAOuC,SAAU,SAAAwB,GAAC,OArHrE,SAAAA,GACnB,IAAInD,EAAe,GACbZ,EAAQ+D,EAAEC,OAAOhE,MACvBC,EAASD,GACLA,EAAMiE,SACRrD,EAAehB,EAAKsE,QAAO,SAAArC,GACzB,IAAMsC,EACJtC,EAAIxC,KAAK+E,cAAcC,WAAWrE,EAAMoE,gBACxCvC,EAAItC,MAAM6E,cAAcC,WAAWrE,EAAMoE,gBACzCvC,EAAIrC,QAAQ4E,cAAcC,WAAWrE,EAAMoE,gBAC3CvC,EAAIzC,GAAGkF,WAAWF,cAAcC,WAAWrE,EAAMoE,eAE7CG,EACJ1C,EAAIxC,KAAK+E,cAAclC,SAASlC,EAAMoE,gBACtCvC,EAAItC,MAAM6E,cAAclC,SAASlC,EAAMoE,gBACvCvC,EAAIrC,QAAQ4E,cAAclC,SAASlC,EAAMoE,gBACzCvC,EAAIzC,GAAGkF,WAAWF,cAAclC,SAASlC,EAAMoE,eAEjD,OAAID,KACMA,GAAuBI,EAA0BA,EAC/C,KACd,IACAtE,EAASD,GACTa,EAAgBD,GAEpB,CA4F8F4D,CAAaT,EAAE,YAInGjC,eAAC2C,KAAK,CAAC1C,UAAU,6BAA6B2C,YAAU,EAAAvC,SAAA,CACtDC,cAAA,SAAAD,SACEL,eAAA,MAAAK,SAAA,CACEC,cAAA,MAAAD,SACEC,cAAA,OAAKL,UAAU,aAAYI,SACzBC,cAACC,IAAK,CACJC,KAAK,WACLlD,GAAG,aACHuF,MAAM,GACN7B,UAAWtB,EAAayC,OACxB1B,SAAU,kBA1ER,WACtB,IAAIC,EAAkBhB,EACtB,GAAIgB,EAAgByB,OAASrE,EAAKqE,OAEhCzB,EADY5C,EAAKgC,KAAI,SAAAgD,GAAC,OAAIA,EAAExF,EAAE,QAEzB,IAAIoD,EAAgByB,SAAWrE,EAAKqE,OAGzC,OAAO,KAFPzB,EAAkB,EAGpB,CAEAf,EAAgBe,EAClB,CA8DsCqC,EAAiB,QAIvCzC,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAAD,SAAI,YACJC,cAAA,MAAAD,SAAI,cAGRC,cAAA,SAAAD,SAAQR,cAKhBG,eAACgD,IAAK,CACJC,OAAQ3E,EACR4E,OAAQ,kBAAMtD,GAAa,EAC3BK,UAAU,wBACVkD,SAAU,kBAAMxE,EAAY,GAAG,EAAC0B,SAAA,CAEhCC,cAAC8C,IAAW,CAACF,OAAQ,kBAAMtD,GAAa,EAACS,SAAC,oBAC1CL,eAACqD,IAAS,CAAAhD,SAAA,CACRC,cAAA,OAAKL,UAAU,OAAMI,SACnBC,cAACC,IAAK,CACJC,KAAK,OACLtC,MAAOQ,EACP+B,SAAU,SAAAwB,GAAC,OAAItD,EAAYsD,EAAEC,OAAOhE,MAAM,EAC1CoF,YAAY,sBAGhBhD,cAAA,OAAAD,SACEL,eAACO,IAAK,CACJC,KAAK,SACLlD,GAAG,mBACHC,KAAK,eACLW,MAAOoB,EACPmB,SAAU,SAAAwB,GACR1C,EAAc0C,EAAEC,OAAOhE,MACzB,EAAEmC,SAAA,CAEFC,cAAA,UAAAD,SAAQ,SACRC,cAAA,UAAAD,SAAQ,QACRC,cAAA,UAAAD,SAAQ,gBAIdL,eAACuD,IAAW,CAAAlD,SAAA,CACVC,cAACqB,IAAM,CAACC,MAAM,UAAUC,QAAS,kBAxJpB,WACnB,IAAM2B,EAAYtE,EAClBpB,EAAKgC,KAAI,SAAA2D,GACP,OAAI/D,EAAaU,SAASqD,EAAKnG,IACtBkG,EAAU3C,KAAK4C,GAEf,IAEX,IACAtE,EAAe2B,YAAK0C,IACpB,IAAMjG,EAAOmB,EAASyD,OAAM,GAAAuB,OAAMhF,EAAQ,KAAAgF,OAAIpE,GAAU,eAAAoE,OAAoBpE,GACtEqE,EAAKC,IAAKC,MAAMC,cAAc5E,GAC9B6E,EAAQH,IAAKC,MAAMG,WACzBJ,IAAKC,MAAMI,kBAAkBF,EAAOJ,EAAI,QACxCC,IAAKM,UAAUH,EAAOxG,GACtBqC,GACF,CAwI+CuE,EAAc,EAAC9D,SAAC,WAGvDC,cAACqB,IAAM,CAACC,MAAM,cAAcC,QAAS,kBAAMjC,GAAa,EAACS,SAAC,mBAOpE,C,mCC7SA,oBAwBea,IAlBU,SAAAkD,GACvB,OACE9D,cAACgB,KAAG,CAACrB,UAAU,OAAMI,SACnBL,eAACuB,IAAG,CAACC,GAAG,KAAKvB,UAAU,QAAOI,SAAA,CAC5BC,cAAA,KAAGL,UAAU,qCAAqC,YAAU,kBAAiBI,SAC1E+D,EAAMjD,QAERiD,EAAM/C,KACLf,cAAA,KAAG+D,KAAMD,EAAM/C,KAAMa,OAAO,SAASoC,IAAI,sBAAqBjE,SAC3D+D,EAAMhD,WAGTd,cAAA,KAAGL,UAAU,eAAcI,SAAE+D,EAAMhD,eAK7C,C","file":"static/js/111.0121eaa4.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  Modal,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  ModalBody,\n  ModalHeader,\n  ModalFooter\n} from 'reactstrap'\n\n// ** Third Party Components\nimport XLSX from 'xlsx'\nimport classnames from 'classnames'\n\nconst initialData = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    website: 'hildegard.org'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    website: 'anastasia.net'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    website: 'ramiro.info'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    website: 'kale.biz'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    website: 'demarco.info'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    website: 'ola.org'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    website: 'elvis.io'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    website: 'jacynthe.com'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    website: 'conrad.com'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    website: 'ambrose.net'\n  }\n]\n\nconst ExportSelected = () => {\n  // ** States\n  const [data] = useState(initialData)\n  const [value, setValue] = useState('')\n  const [modal, setModal] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [dataToExport, setDataToExport] = useState([])\n  const [fileFormat, setFileFormat] = useState('xlsx')\n  const [selectedRows, setSelectedRows] = useState([])\n\n  const toggleModal = () => setModal(!modal)\n\n  const handleFilter = e => {\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\n\n        const includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition) return includesCondition\n        else return null\n      })\n      setValue(value)\n      setFilteredData(filteredData)\n    }\n  }\n\n  const handleExport = () => {\n    const exportArr = dataToExport\n    data.map(item => {\n      if (selectedRows.includes(item.id)) {\n        return exportArr.push(item)\n      } else {\n        return null\n      }\n    })\n    setDataToExport([...exportArr])\n    const name = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\n    const wb = XLSX.utils.json_to_sheet(dataToExport)\n    const wbout = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wbout, wb, 'test')\n    XLSX.writeFile(wbout, name)\n    toggleModal()\n  }\n\n  const handleSelect = id => {\n    const selectedRowsArr = selectedRows\n    if (!selectedRowsArr.includes(id)) {\n      selectedRowsArr.push(id)\n    } else if (selectedRowsArr.includes(id)) {\n      selectedRowsArr.splice(selectedRowsArr.indexOf(id), 1)\n    } else {\n      return null\n    }\n    setSelectedRows([...selectedRowsArr])\n  }\n\n  const handleSelectAll = () => {\n    let selectedRowsArr = selectedRows\n    if (selectedRowsArr.length < data.length) {\n      const ids = data.map(i => i.id)\n      selectedRowsArr = ids\n    } else if (selectedRowsArr.length === data.length) {\n      selectedRowsArr = []\n    } else {\n      return null\n    }\n\n    setSelectedRows(selectedRowsArr)\n  }\n\n  const array = value ? filteredData : data\n  const renderTableData = array.map(col => {\n    return (\n      <tr\n        key={col.id}\n        className={classnames({\n          selected: selectedRows.includes(col.id)\n        })}\n      >\n        <td>\n          <div className='form-check'>\n            <Input\n              id={col.id}\n              type='checkbox'\n              onChange={() => handleSelect(col.id)}\n              checked={!!selectedRows.includes(col.id)}\n            />\n          </div>\n        </td>\n        <td>{col.email}</td>\n        <td>{col.name}</td>\n        <td>{col.website}</td>\n        <td>{col.id}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/SheetJS/sheetjs'\n      />\n      <Row className='export-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody className='pb-0'>\n              <div className='d-flex flex-wrap justify-content-between'>\n                <Button color='primary' onClick={() => toggleModal()}>\n                  Export Selected\n                </Button>\n                <div className='d-flex align-items-center justify-content-end'>\n                  <Label for='search-input' className='me-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </div>\n            </CardBody>\n            <Table className='table-hover-animation mt-2' responsive>\n              <thead>\n                <tr>\n                  <th>\n                    <div className='form-check'>\n                      <Input\n                        type='checkbox'\n                        id='select-all'\n                        label=''\n                        checked={!!selectedRows.length}\n                        onChange={() => handleSelectAll()}\n                      />\n                    </div>\n                  </th>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Website</th>\n                  <th>Rank</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableData}</tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={modal}\n        toggle={() => toggleModal()}\n        className='modal-dialog-centered'\n        onClosed={() => setFileName('')}\n      >\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\n        <ModalBody>\n          <div className='mb-2'>\n            <Input\n              type='text'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder='Enter File Name'\n            />\n          </div>\n          <div>\n            <Input\n              type='select'\n              id='selectFileFormat'\n              name='customSelect'\n              value={fileFormat}\n              onChange={e => {\n                setFileFormat(e.target.value)\n              }}\n            >\n              <option>xlsx</option>\n              <option>csv</option>\n              <option>txt</option>\n            </Input>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => handleExport()}>\n            Export\n          </Button>\n          <Button color='flat-danger' onClick={() => toggleModal()}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ExportSelected\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}