{"version":3,"sources":["views/apps/calendar/Calendar.js","views/apps/calendar/SidebarLeft.js","views/apps/calendar/AddEventSidebar.js","views/apps/calendar/index.js","@core/components/avatar/index.js","assets/images/pages/calendar-illustration.png"],"names":["Calendar","props","calendarRef","useRef","store","isRtl","dispatch","calendarsColor","calendarApi","setCalendarApi","handleAddEventSidebar","blankEvent","toggleSidebar","selectEvent","updateEvent","useEffect","current","getApi","calendarOptions","events","length","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","eventClassNames","_ref","calendarEvent","event","colorName","_def","extendedProps","calendar","concat","eventClick","_ref2","clickedEvent","customButtons","sidebarToggle","text","_jsx","Menu","className","click","dateClick","info","ev","date","eventDrop","_ref3","droppedEvent","toast","success","eventResize","_ref4","resizedEvent","ref","direction","Card","children","_jsxs","CardBody","FullCalendar","_objectSpread","memo","filters","label","color","SidebarLeft","updateFilter","updateAllFilters","Fragment","Button","block","onClick","Input","id","type","checked","selectedCalendars","onChange","e","target","Label","for","map","filter","classnames","_defineProperty","includes","src","illustration","alt","AddEventSidebar","open","addEvent","removeEvent","refetchEvents","selectedEvent","_useForm","useForm","defaultValues","title","control","setError","setValue","getValues","handleSubmit","errors","formState","_useState","useState","_useState2","_slicedToArray","url","setUrl","_useState3","_useState4","desc","setDesc","_useState5","_useState6","guests","setGuests","_useState7","_useState8","allDay","setAllDay","_useState9","_useState10","location","setLocation","_useState11","Date","_useState12","endPicker","setEndPicker","_useState13","_useState14","startPicker","setStartPicker","_useState15","value","_useState16","calendarLabel","setCalendarLabel","guestsOptions","avatar","img1","img2","img3","img4","img5","img6","handleUpdateEvent","eventToUpdate","display","undefined","description","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","index","propName","setProp","setDates","setExtendedProp","updateEventInCalendar","handleDeleteEvent","eventId","remove","error","EventActions","isObjEmpty","outline","CloseBtn","X","size","Modal","isOpen","toggle","onOpened","onClosed","contentClassName","modalClassName","ModalHeader","close","tag","PerfectScrollbar","options","wheelPropagation","ModalBody","Form","onSubmit","data","obj","handleAddEvent","Controller","name","render","field","placeholder","invalid","Select","theme","selectThemeColors","classNamePrefix","isClearable","components","Option","_objectWithoutProperties","_excluded","Flatpickr","required","enableTime","dateFormat","isMulti","_toConsumableArray","_excluded2","Avatar","img","rows","Business","Holiday","Personal","Family","ETC","CalendarComponent","useDispatch","useSelector","state","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","_useRTL","useRTL","val","fetchEvents","Row","Col","show","forwardRef","_classnames","_classnames3","icon","status","badgeUp","content","Tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","style","str","results","split","forEach","push","join","getInitials","Badge","pill","height","width","defaultProps"],"mappings":"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","file":"static/js/80.e93c1ccb.chunk.js","sourcesContent":["// ** React Import\nimport { useEffect, useRef, memo, Fragment } from 'react'\n\n// ** Full Calendar & it's Plugins\nimport FullCalendar from '@fullcalendar/react'\nimport listPlugin from '@fullcalendar/list'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Menu } from 'react-feather'\nimport { Card, CardBody } from 'reactstrap'\n\nconst Calendar = props => {\n  // ** Refs\n  const calendarRef = useRef(null)\n\n  // ** Props\n  const {\n    store,\n    isRtl,\n    dispatch,\n    calendarsColor,\n    calendarApi,\n    setCalendarApi,\n    handleAddEventSidebar,\n    blankEvent,\n    toggleSidebar,\n    selectEvent,\n    updateEvent\n  } = props\n\n  // ** UseEffect checks for CalendarAPI Update\n  useEffect(() => {\n    if (calendarApi === null) {\n      setCalendarApi(calendarRef.current.getApi())\n    }\n  }, [calendarApi])\n\n  // ** calendarOptions(Props)\n  const calendarOptions = {\n    events: store.events.length ? store.events : [],\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\n    initialView: 'dayGridMonth',\n    headerToolbar: {\n      start: 'sidebarToggle, prev,next, title',\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n    },\n    /*\n      Enable dragging and resizing event\n      ? Docs: https://fullcalendar.io/docs/editable\n    */\n    editable: true,\n\n    /*\n      Enable resizing event from start\n      ? Docs: https://fullcalendar.io/docs/eventResizableFromStart\n    */\n    eventResizableFromStart: true,\n\n    /*\n      Automatically scroll the scroll-containers during event drag-and-drop and date selecting\n      ? Docs: https://fullcalendar.io/docs/dragScroll\n    */\n    dragScroll: true,\n\n    /*\n      Max number of events within a given day\n      ? Docs: https://fullcalendar.io/docs/dayMaxEvents\n    */\n    dayMaxEvents: 2,\n\n    /*\n      Determines if day names and week names are clickable\n      ? Docs: https://fullcalendar.io/docs/navLinks\n    */\n    navLinks: true,\n\n    eventClassNames({ event: calendarEvent }) {\n      // eslint-disable-next-line no-underscore-dangle\n      const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar]\n\n      return [\n        // Background Color\n        `bg-light-${colorName}`\n      ]\n    },\n\n    eventClick({ event: clickedEvent }) {\n      dispatch(selectEvent(clickedEvent))\n      handleAddEventSidebar()\n\n      // * Only grab required field otherwise it goes in infinity loop\n      // ! Always grab all fields rendered by form (even if it get `undefined`) otherwise due to Vue3/Composition API you might get: \"object is not extensible\"\n      // event.value = grabEventDataFromEventApi(clickedEvent)\n\n      // eslint-disable-next-line no-use-before-define\n      // isAddNewEventSidebarActive.value = true\n    },\n\n    customButtons: {\n      sidebarToggle: {\n        text: <Menu className='d-xl-none d-block' />,\n        click() {\n          toggleSidebar(true)\n        }\n      }\n    },\n\n    dateClick(info) {\n      const ev = blankEvent\n      ev.start = info.date\n      ev.end = info.date\n      dispatch(selectEvent(ev))\n      handleAddEventSidebar()\n    },\n\n    /*\n      Handle event drop (Also include dragged event)\n      ? Docs: https://fullcalendar.io/docs/eventDrop\n      ? We can use `eventDragStop` but it doesn't return updated event so we have to use `eventDrop` which returns updated event\n    */\n    eventDrop({ event: droppedEvent }) {\n      dispatch(updateEvent(droppedEvent))\n      toast.success('Event Updated')\n    },\n\n    /*\n      Handle event resize\n      ? Docs: https://fullcalendar.io/docs/eventResize\n    */\n    eventResize({ event: resizedEvent }) {\n      dispatch(updateEvent(resizedEvent))\n      toast.success('Event Updated')\n    },\n\n    ref: calendarRef,\n\n    // Get direction from app state (store)\n    direction: isRtl ? 'rtl' : 'ltr'\n  }\n\n  return (\n    <Card className='shadow-none border-0 mb-0 rounded-0'>\n      <CardBody className='pb-0'>\n        <FullCalendar {...calendarOptions} />{' '}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default memo(Calendar)\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { CardBody, Button, Input, Label } from 'reactstrap'\n\n// ** illustration import\nimport illustration from '@src/assets/images/pages/calendar-illustration.png'\n\n// ** Filters Checkbox Array\nconst filters = [\n  { label: 'Personal', color: 'danger', className: 'form-check-danger mb-1' },\n  { label: 'Business', color: 'primary', className: 'form-check-primary mb-1' },\n  { label: 'Family', color: 'warning', className: 'form-check-warning mb-1' },\n  { label: 'Holiday', color: 'success', className: 'form-check-success mb-1' },\n  { label: 'ETC', color: 'info', className: 'form-check-info' }\n]\n\nconst SidebarLeft = props => {\n  // ** Props\n  const { handleAddEventSidebar, toggleSidebar, updateFilter, updateAllFilters, store, dispatch } = props\n\n  // ** Function to handle Add Event Click\n  const handleAddEventClick = () => {\n    toggleSidebar(false)\n    handleAddEventSidebar()\n  }\n\n  return (\n    <Fragment>\n      <div className='sidebar-wrapper'>\n        <CardBody className='card-body d-flex justify-content-center my-sm-0 mb-3'>\n          <Button color='primary' block onClick={handleAddEventClick}>\n            <span className='align-middle'>Add Event</span>\n          </Button>\n        </CardBody>\n        <CardBody>\n          <h5 className='section-label mb-1'>\n            <span className='align-middle'>Filter</span>\n          </h5>\n          <div className='form-check mb-1'>\n            <Input\n              id='view-all'\n              type='checkbox'\n              label='View All'\n              className='select-all'\n              checked={store.selectedCalendars.length === filters.length}\n              onChange={e => dispatch(updateAllFilters(e.target.checked))}\n            />\n            <Label className='form-check-label' for='view-all'>\n              View All\n            </Label>\n          </div>\n          <div className='calendar-events-filter'>\n            {filters.length &&\n              filters.map(filter => {\n                return (\n                  <div\n                    key={`${filter.label}-key`}\n                    className={classnames('form-check', {\n                      [filter.className]: filter.className\n                    })}\n                  >\n                    <Input\n                      type='checkbox'\n                      key={filter.label}\n                      label={filter.label}\n                      className='input-filter'\n                      id={`${filter.label}-event`}\n                      checked={store.selectedCalendars.includes(filter.label)}\n                      onChange={() => {\n                        dispatch(updateFilter(filter.label))\n                      }}\n                    />\n                    <Label className='form-check-label' for={`${filter.label}-event`}>\n                      {filter.label}\n                    </Label>\n                  </div>\n                )\n              })}\n          </div>\n        </CardBody>\n      </div>\n      <div className='mt-auto'>\n        <img className='img-fluid' src={illustration} alt='illustration' />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default SidebarLeft\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { X } from 'react-feather'\nimport toast from 'react-hot-toast'\nimport Flatpickr from 'react-flatpickr'\nimport Select, { components } from 'react-select' // eslint-disable-line\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, Label, Input, Form } from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors, isObjEmpty } from '@utils'\n\n// ** Avatar Images\nimport img1 from '@src/assets/images/avatars/1-small.png'\nimport img2 from '@src/assets/images/avatars/3-small.png'\nimport img3 from '@src/assets/images/avatars/5-small.png'\nimport img4 from '@src/assets/images/avatars/7-small.png'\nimport img5 from '@src/assets/images/avatars/9-small.png'\nimport img6 from '@src/assets/images/avatars/11-small.png'\n\n// ** Styles Imports\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddEventSidebar = props => {\n  // ** Props\n  const {\n    open,\n    store,\n    dispatch,\n    addEvent,\n    calendarApi,\n    selectEvent,\n    updateEvent,\n    removeEvent,\n    refetchEvents,\n    calendarsColor,\n    handleAddEventSidebar\n  } = props\n\n  // ** Vars & Hooks\n  const selectedEvent = store.selectedEvent,\n    {\n      control,\n      setError,\n      setValue,\n      getValues,\n      handleSubmit,\n      formState: { errors }\n    } = useForm({\n      defaultValues: { title: '' }\n    })\n\n  // ** States\n  const [url, setUrl] = useState('')\n  const [desc, setDesc] = useState('')\n  const [guests, setGuests] = useState({})\n  const [allDay, setAllDay] = useState(false)\n  const [location, setLocation] = useState('')\n  const [endPicker, setEndPicker] = useState(new Date())\n  const [startPicker, setStartPicker] = useState(new Date())\n  const [calendarLabel, setCalendarLabel] = useState([{ value: 'Business', label: 'Business', color: 'primary' }])\n\n  // ** Select Options\n  const options = [\n    { value: 'Business', label: 'Business', color: 'primary' },\n    { value: 'Personal', label: 'Personal', color: 'danger' },\n    { value: 'Family', label: 'Family', color: 'warning' },\n    { value: 'Holiday', label: 'Holiday', color: 'success' },\n    { value: 'ETC', label: 'ETC', color: 'info' }\n  ]\n\n  const guestsOptions = [\n    { value: 'Donna Frank', label: 'Donna Frank', avatar: img1 },\n    { value: 'Jane Foster', label: 'Jane Foster', avatar: img2 },\n    { value: 'Gabrielle Robertson', label: 'Gabrielle Robertson', avatar: img3 },\n    { value: 'Lori Spears', label: 'Lori Spears', avatar: img4 },\n    { value: 'Sandy Vega', label: 'Sandy Vega', avatar: img5 },\n    { value: 'Cheryl May', label: 'Cheryl May', avatar: img6 }\n  ]\n\n  // ** Custom select components\n  const OptionComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <span className={`bullet bullet-${data.color} bullet-sm me-50`}></span>\n        {data.label}\n      </components.Option>\n    )\n  }\n\n  const GuestsComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-1' size='sm' img={data.avatar} />\n          <div>{data.label}</div>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Adds New Event\n  const handleAddEvent = () => {\n    const obj = {\n      title: getValues('title'),\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: calendarLabel[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    }\n    dispatch(addEvent(obj))\n    refetchEvents()\n    handleAddEventSidebar()\n    toast.success('Event Added')\n  }\n\n  // ** Reset Input Values on Close\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}))\n    setValue('title', '')\n    setAllDay(false)\n    setUrl('')\n    setLocation('')\n    setDesc('')\n    setGuests({})\n    setCalendarLabel([{ value: 'Business', label: 'Business', color: 'primary' }])\n    setStartPicker(new Date())\n    setEndPicker(new Date())\n  }\n\n  // ** Set sidebar fields\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return { label: calendar, value: calendar, color: calendarsColor[calendar] }\n        } else {\n          return { value: 'Business', label: 'Business', color: 'primary' }\n        }\n      }\n      setValue('title', selectedEvent.title || getValues('title'))\n      setAllDay(selectedEvent.allDay || allDay)\n      setUrl(selectedEvent.url || url)\n      setLocation(selectedEvent.extendedProps.location || location)\n      setDesc(selectedEvent.extendedProps.description || desc)\n      setGuests(selectedEvent.extendedProps.guests || guests)\n      setStartPicker(new Date(selectedEvent.start))\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end))\n      setCalendarLabel([resolveLabel()])\n    }\n  }\n\n  // ** (UI) updateEventInCalendar\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id)\n\n    // ** Set event properties except date related\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index]\n      existingEvent.setProp(propName, updatedEventData[propName])\n    }\n\n    // ** Set date related props\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\n    existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\n      allDay: updatedEventData.allDay\n    })\n\n    // ** Set event's extendedProps\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index]\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\n    }\n  }\n\n  // ** Updates Event in Store\n  const handleUpdateEvent = () => {\n    if (getValues('title').length) {\n      const eventToUpdate = {\n        id: selectedEvent.id,\n        title: getValues('title'),\n        allDay,\n        start: startPicker,\n        end: endPicker,\n        url,\n        display: allDay === false ? 'block' : undefined,\n        extendedProps: {\n          location,\n          description: desc,\n          guests,\n          calendar: calendarLabel[0].label\n        }\n      }\n\n      const propsToUpdate = ['id', 'title', 'url']\n      const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description']\n      dispatch(updateEvent(eventToUpdate))\n      updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate)\n\n      handleAddEventSidebar()\n      toast.success('Event Updated')\n    } else {\n      setError('title', {\n        type: 'manual'\n      })\n    }\n  }\n\n  // ** (UI) removeEventInCalendar\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove()\n  }\n\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id))\n    removeEventInCalendar(selectedEvent.id)\n    handleAddEventSidebar()\n    toast.error('Event Removed')\n  }\n\n  // ** Event Action buttons\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n      return (\n        <Fragment>\n          <Button className='me-1' type='submit' color='primary'>\n            Add\n          </Button>\n          <Button color='secondary' type='reset' onClick={handleAddEventSidebar} outline>\n            Cancel\n          </Button>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button className='me-1' color='primary' onClick={handleUpdateEvent}>\n            Update\n          </Button>\n          <Button color='danger' onClick={handleDeleteEvent} outline>\n            Delete\n          </Button>\n        </Fragment>\n      )\n    }\n  }\n\n  // ** Close BTN\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleAddEventSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      className='sidebar-lg'\n      toggle={handleAddEventSidebar}\n      onOpened={handleSelectedEvent}\n      onClosed={handleResetInputValues}\n      contentClassName='p-0 overflow-hidden'\n      modalClassName='modal-slide-in event-sidebar'\n    >\n      <ModalHeader className='mb-1' toggle={handleAddEventSidebar} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>\n          {selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add'} Event\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <Form\n            onSubmit={handleSubmit(data => {\n              if (data.title.length) {\n                if (isObjEmpty(errors)) {\n                  if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n                    handleAddEvent()\n                  } else {\n                    handleUpdateEvent()\n                  }\n                  handleAddEventSidebar()\n                }\n              } else {\n                setError('title', {\n                  type: 'manual'\n                })\n              }\n            })}\n          >\n            <div className='mb-1'>\n              <Label className='form-label' for='title'>\n                Title <span className='text-danger'>*</span>\n              </Label>\n              <Controller\n                name='title'\n                control={control}\n                render={({ field }) => (\n                  <Input id='title' placeholder='Title' invalid={errors.title && true} {...field} />\n                )}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='label'>\n                Label\n              </Label>\n              <Select\n                id='label'\n                value={calendarLabel}\n                options={options}\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                isClearable={false}\n                onChange={data => setCalendarLabel([data])}\n                components={{\n                  Option: OptionComponent\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='startDate'>\n                Start Date\n              </Label>\n              <Flatpickr\n                required\n                id='startDate'\n                name='startDate'\n                className='form-control'\n                onChange={date => setStartPicker(date[0])}\n                value={startPicker}\n                options={{\n                  enableTime: allDay === false,\n                  dateFormat: 'Y-m-d H:i'\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='endDate'>\n                End Date\n              </Label>\n              <Flatpickr\n                required\n                id='endDate'\n                // tag={Flatpickr}\n                name='endDate'\n                className='form-control'\n                onChange={date => setEndPicker(date[0])}\n                value={endPicker}\n                options={{\n                  enableTime: allDay === false,\n                  dateFormat: 'Y-m-d H:i'\n                }}\n              />\n            </div>\n\n            <div className='form-switch mb-1'>\n              <Input\n                id='allDay'\n                type='switch'\n                className='me-1'\n                checked={allDay}\n                name='customSwitch'\n                onChange={e => setAllDay(e.target.checked)}\n              />\n              <Label className='form-label' for='allDay'>\n                All Day\n              </Label>\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='eventURL'>\n                Event URL\n              </Label>\n              <Input\n                type='url'\n                id='eventURL'\n                value={url}\n                onChange={e => setUrl(e.target.value)}\n                placeholder='https://www.google.com'\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='guests'>\n                Guests\n              </Label>\n              <Select\n                isMulti\n                id='guests'\n                className='react-select'\n                classNamePrefix='select'\n                isClearable={false}\n                options={guestsOptions}\n                theme={selectThemeColors}\n                value={guests.length ? [...guests] : null}\n                onChange={data => setGuests([...data])}\n                components={{\n                  Option: GuestsComponent\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='location'>\n                Location\n              </Label>\n              <Input id='location' value={location} onChange={e => setLocation(e.target.value)} placeholder='Office' />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='description'>\n                Description\n              </Label>\n              <Input\n                type='textarea'\n                name='text'\n                id='description'\n                rows='3'\n                value={desc}\n                onChange={e => setDesc(e.target.value)}\n                placeholder='Description'\n              />\n            </div>\n            <div className='d-flex mb-1'>\n              <EventActions />\n            </div>\n          </Form>\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default AddEventSidebar\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Row, Col } from 'reactstrap'\n\n// ** Calendar App Component Imports\nimport Calendar from './Calendar'\nimport SidebarLeft from './SidebarLeft'\nimport AddEventSidebar from './AddEventSidebar'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\n\n// ** Styles\nimport '@styles/react/apps/app-calendar.scss'\n\n// ** CalendarColors\nconst calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n}\n\nconst CalendarComponent = () => {\n  // ** Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.calendar)\n\n  // ** states\n  const [calendarApi, setCalendarApi] = useState(null)\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** AddEventSidebar Toggle Function\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\n\n  // ** LeftSidebar Toggle Function\n  const toggleSidebar = val => setLeftSidebarOpen(val)\n\n  // ** Blank Event Object\n  const blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  }\n\n  // ** refetchEvents\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents()\n    }\n  }\n\n  // ** Fetch Events On Mount\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars))\n  }, [])\n\n  return (\n    <Fragment>\n      <div className='app-calendar overflow-hidden border'>\n        <Row className='g-0'>\n          <Col\n            id='app-calendar-sidebar'\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n              show: leftSidebarOpen\n            })}\n          >\n            <SidebarLeft\n              store={store}\n              dispatch={dispatch}\n              updateFilter={updateFilter}\n              toggleSidebar={toggleSidebar}\n              updateAllFilters={updateAllFilters}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <Col className='position-relative'>\n            <Calendar\n              isRtl={isRtl}\n              store={store}\n              dispatch={dispatch}\n              blankEvent={blankEvent}\n              calendarApi={calendarApi}\n              selectEvent={selectEvent}\n              updateEvent={updateEvent}\n              toggleSidebar={toggleSidebar}\n              calendarsColor={calendarsColor}\n              setCalendarApi={setCalendarApi}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <div\n            className={classnames('body-content-overlay', {\n              show: leftSidebarOpen === true\n            })}\n            onClick={() => toggleSidebar(false)}\n          ></div>\n        </Row>\n      </div>\n      <AddEventSidebar\n        store={store}\n        dispatch={dispatch}\n        addEvent={addEvent}\n        open={addSidebarOpen}\n        selectEvent={selectEvent}\n        updateEvent={updateEvent}\n        removeEvent={removeEvent}\n        calendarApi={calendarApi}\n        refetchEvents={refetchEvents}\n        calendarsColor={calendarsColor}\n        handleAddEventSidebar={handleAddEventSidebar}\n      />\n    </Fragment>\n  )\n}\n\nexport default CalendarComponent\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","export default __webpack_public_path__ + \"static/media/calendar-illustration.42be42ce.png\";"],"sourceRoot":""}