{"version":3,"sources":["views/components/badge/BadgeLink.js","views/components/badge/BadgeGlow.js","views/components/badge/BadgeBlock.js","views/components/badge/BadgeIcons.js","views/components/badge/BadgeLight.js","views/components/badge/BadgeContextual.js","views/components/badge/BadgeSourceCode.js","views/components/badge/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgeLink","_jsxs","Badge","color","href","children","_jsx","Link","size","className","BadgeGlow","BadgeBlock","BadgeIcons","Star","BadgeLight","BadgeContextual","badgeContextual","badgeGlow","badgeLight","badgeIcons","badgeLink","badgeBlock","Badges","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","title","data","Row","Col","sm","Card","code","CardText","md","props","Breadcrumb","BreadcrumbItem","tag","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","CardSnippet","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Code","CardBody","CardHeader","CardTitle","onClick","toggle","Collapse"],"mappings":"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","file":"static/js/139.3d526cc8.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-feather'\n\nconst BadgeLink = () => {\n  return (\n    <Badge color='primary' href='#'>\n      <Link size={12} className='me-25' />\n      <span className='align-middle'>Link Badge</span>\n    </Badge>\n  )\n}\nexport default BadgeLink\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgeGlow = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='primary' className='badge-glow'>\n        Primary\n      </Badge>\n      <Badge color='secondary' className='badge-glow'>\n        Secondary\n      </Badge>\n      <Badge color='success' className='badge-glow'>\n        Success\n      </Badge>\n      <Badge color='danger' className='badge-glow'>\n        Danger\n      </Badge>\n      <Badge color='warning' className='badge-glow'>\n        Warning\n      </Badge>\n      <Badge color='info' className='badge-glow'>\n        Info\n      </Badge>\n      <Badge color='dark' className='badge-glow'>\n        Dark\n      </Badge>\n    </div>\n  )\n}\nexport default BadgeGlow\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgeBlock = () => {\n  return (\n    <Badge color='primary' className='d-block'>\n      <span>Block Badge</span>\n    </Badge>\n  )\n}\nexport default BadgeBlock\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Icons Imports\nimport { Star } from 'react-feather'\n\nconst BadgeIcons = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='primary'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle ms-25'>Primary</span>\n      </Badge>\n      <Badge color='secondary'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle ms-25'>Secondary</span>\n      </Badge>\n      <Badge color='success'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle ms-25'>Success</span>\n      </Badge>\n      <Badge color='danger'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle ms-25'>Danger</span>\n      </Badge>\n      <Badge color='warning'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle ms-25'>Warning</span>\n      </Badge>\n      <Badge color='info'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle ms-25'>Info</span>\n      </Badge>\n      <Badge color='dark'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle ms-25'>Dark</span>\n      </Badge>\n    </div>\n  )\n}\nexport default BadgeIcons\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgeLight = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='light-primary'>Primary</Badge>\n      <Badge color='light-secondary'>Secondary</Badge>\n      <Badge color='light-success'>Success</Badge>\n      <Badge color='light-danger'>Danger</Badge>\n      <Badge color='light-warning'>Warning</Badge>\n      <Badge color='light-info'>Info</Badge>\n      <Badge color='light-dark'>Dark</Badge>\n    </div>\n  )\n}\nexport default BadgeLight\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgeContextual = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='primary'>Primary</Badge>\n      <Badge color='secondary'>Secondary</Badge>\n      <Badge color='success'>Success</Badge>\n      <Badge color='danger'>Danger</Badge>\n      <Badge color='warning'>Warning</Badge>\n      <Badge color='info'>Info</Badge>\n      <Badge color='dark'>Dark</Badge>\n    </div>\n  )\n}\nexport default BadgeContextual\n","export const badgeContextual = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgeContextual = () => {\n  return (\n    <React.Fragment>\n      <Badge color='primary'>\n        Primary\n      </Badge>\n      <Badge color='secondary'>\n        Secondary\n      </Badge>\n      <Badge color='success'>\n        Success\n      </Badge>\n      <Badge color='danger'>\n        Danger\n      </Badge>\n      <Badge color='warning'>\n        Warning\n      </Badge>\n      <Badge color='info'>\n        Info\n      </Badge>\n      <Badge color='dark'>\n        Dark\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgeContextual\n`}\n    </code>\n  </pre>\n)\n\nexport const badgeGlow = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgeGlow = () => {\n  return (\n    <React.Fragment>\n      <Badge color='primary' className='badge-glow'>\n        Primary\n      </Badge>\n      <Badge color='secondary' className='badge-glow'>\n        Secondary\n      </Badge>\n      <Badge color='success' className='badge-glow'>\n        Success\n      </Badge>\n      <Badge color='danger' className='badge-glow'>\n        Danger\n      </Badge>\n      <Badge color='warning' className='badge-glow'>\n        Warning\n      </Badge>\n      <Badge color='info' className='badge-glow'>\n        Info\n      </Badge>\n      <Badge color='dark' className='badge-glow'>\n        Dark\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgeGlow\n`}\n    </code>\n  </pre>\n)\n\nexport const badgeLight = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgeLight = () => {\n  return (\n    <React.Fragment>\n      <Badge color='light-primary'>\n        Primary\n      </Badge>\n      <Badge color='light-secondary'>\n        Secondary\n      </Badge>\n      <Badge color='light-success'>\n        Success\n      </Badge>\n      <Badge color='light-danger'>\n        Danger\n      </Badge>\n      <Badge color='light-warning'>\n        Warning\n      </Badge>\n      <Badge color='light-info'>\n        Info\n      </Badge>\n      <Badge color='light-dark'>\n        Dark\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgeLight\n`}\n    </code>\n  </pre>\n)\n\nexport const badgeIcons = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\nimport { Star } from 'react-feather'\n\nconst BadgeIcons = () => {\n  return (\n    <React.Fragment>\n      <Badge color='primary'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle'>Primary</span>\n      </Badge>\n      <Badge color='secondary'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle'>Secondary</span>\n      </Badge>\n      <Badge color='success'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle'>Success</span>\n      </Badge>\n      <Badge color='danger'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle'>Danger</span>\n      </Badge>\n      <Badge color='warning'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle'>Warning</span>\n      </Badge>\n      <Badge color='info'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle'>Info</span>\n      </Badge>\n      <Badge color='dark'>\n        <Star size={12} className='align-middle me-25' />\n        <span className='align-middle'>Dark</span>\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgeIcons\n`}\n    </code>\n  </pre>\n)\n\nexport const badgeLink = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\nimport { Link } from 'react-feather'\n\nconst BadgeLink = () => {\n  return (\n    <Badge color='primary' href='#'>\n      <Link size={12} className='me-25' />\n      <span>Link Badge</span>\n    </Badge>\n  )\n}\nexport default BadgeLink\n`}\n    </code>\n  </pre>\n)\n\nexport const badgeBlock = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgeBlock = () => {\n  return (\n    <Badge color='primary' className='d-block'>\n      <span>Block Badge</span>\n    </Badge>\n  )\n}\nexport default BadgeBlock\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport BadgeLink from './BadgeLink'\nimport BadgeGlow from './BadgeGlow'\nimport BadgeBlock from './BadgeBlock'\nimport BadgeIcons from './BadgeIcons'\nimport BadgeLight from './BadgeLight'\nimport BadgeContextual from './BadgeContextual'\n\n// ** Source Code\nimport { badgeContextual, badgeGlow, badgeLight, badgeIcons, badgeLink, badgeBlock } from './BadgeSourceCode'\n\nconst Badges = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Badges' data={[{ title: 'Components' }, { title: 'Badges' }]} />\n      <Row>\n        <Col sm='12'>\n          <Card title='Contextual Badges' code={badgeContextual}>\n            <CardText className='mb-0'>\n              Use prop <code>color</code> with <code>Badge</code> tag to create badge with different colors.\n            </CardText>\n            <BadgeContextual />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Glow Badges' code={badgeGlow}>\n            <CardText className='mb-0'>\n              Use class <code>badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge\n            </CardText>\n            <BadgeGlow />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Light Badges' code={badgeLight}>\n            <CardText className='mb-0'>\n              Use prop <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create badge with different\n              colors.\n            </CardText>\n            <BadgeLight />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Badges With Icons' code={badgeIcons}>\n            <BadgeIcons />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md='6' sm='12'>\n          <Card title='Link Badge' code={badgeLink}>\n            <CardText>\n              Use <code>href=\"#\"</code> prop to use badge as a link.\n            </CardText>\n            <BadgeLink />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Block Badge' code={badgeBlock}>\n            <CardText>\n              Use <code>.d-block</code> class to make badge display as block.\n            </CardText>\n            <BadgeBlock />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Badges\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}