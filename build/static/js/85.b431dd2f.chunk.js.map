{"version":3,"sources":["views/components/avatar/AvatarSizes.js","views/components/avatar/AvatarIcons.js","views/components/avatar/AvatarGroup.js","views/components/avatar/AvatarColors.js","views/components/avatar/AvatarStatus.js","views/components/avatar/AvatarInitials.js","views/components/avatar/AvatarLightColors.js","views/components/avatar/AvatarGroupTooltip.js","views/components/avatar/AvatarSourceCode.js","views/components/avatar/index.js","@core/components/breadcrumbs/index.js","@core/components/avatar/index.js","@core/components/card-snippet/index.js","@core/components/avatar-group/index.js","assets/images/portrait/small/avatar-s-20.jpg"],"names":["AvatarSizes","_jsxs","className","children","_jsx","Avatar","img","avatarImg","size","AvatarIcons","color","icon","Calendar","GitHub","Inbox","Camera","Award","Star","data","require","default","AvatarGroupComponent","AvatarGroup","AvatarColors","content","AvatarStatus","status","AvatarInitials","initials","AvatarLightColors","title","avatarSizes","avatarInitials","avatarColors","avatarLightColors","avatarIcons","avatarStatus","avatarGroup","avatarGroupTooltip","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","Row","Col","xl","lg","Card","code","CardText","sm","AvatarGroupTooltip","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","_objectSpread","forwardRef","ref","_classnames","_classnames3","badgeUp","Tag","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","_objectWithoutProperties","_excluded","_defineProperty","concat","undefined","style","str","results","split","forEach","e","push","join","getInitials","Badge","pill","src","alt","height","width","defaultProps","CardSnippet","noBody","iconCode","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","IconCode","Code","CardBody","CardHeader","CardTitle","onClick","Collapse","i","ItemTag","UncontrolledTooltip","placement","target","meta","id"],"mappings":"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","file":"static/js/85.b431dd2f.chunk.js","sourcesContent":["// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Avatar Image\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarSizes = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} size='sm' />\n      <Avatar img={avatarImg} />\n      <Avatar img={avatarImg} size='lg' />\n      <Avatar img={avatarImg} size='xl' />\n    </div>\n  )\n}\nexport default AvatarSizes\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\n\nconst AvatarIcons = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' icon={<Calendar size={14} />} />\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\n      <Avatar color='success' icon={<Inbox size={14} />} />\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\n      <Avatar color='light-warning' icon={<Award size={14} />} />\n      <Avatar color='light-info' icon={<Star size={14} />} />\n    </div>\n  )\n}\nexport default AvatarIcons\n","// ** Custom Components\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' content='PI' />\n      <Avatar color='secondary' content='PI' />\n      <Avatar color='success' content='PI' />\n      <Avatar color='danger' content='PI' />\n      <Avatar color='warning' content='PI' />\n      <Avatar color='info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarColors\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { GitHub } from 'react-feather'\n\n// ** Avatar Image\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarStatus = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} status='offline' />\n      <Avatar color='info' content='LD' status='busy' />\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\n      <Avatar color='light-success' content='AB' status='online' />\n    </div>\n  )\n}\nexport default AvatarStatus\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarInitials = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='Peter Ingraham' size='sm' initials />\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\n      <Avatar color='light-success' content='Peter Ingraham' size='lg' initials />\n      <Avatar color='light-danger' content='Peter Ingraham' size='xl' initials />\n    </div>\n  )\n}\nexport default AvatarInitials\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarLightColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='PI' />\n      <Avatar color='light-secondary' content='PI' />\n      <Avatar color='light-success' content='PI' />\n      <Avatar color='light-danger' content='PI' />\n      <Avatar color='light-warning' content='PI' />\n      <Avatar color='light-info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarLightColors\n","// ** Custom Components\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    title: 'Vinnie Mostowy',\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\n  },\n  {\n    title: 'Elicia Rieske',\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\n  },\n  {\n    title: 'Julee Rossignol',\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\n  },\n  {\n    title: 'Darcey Nooner',\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\n  },\n  {\n    title: 'Jenny Looper',\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n","export const avatarSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarSizes = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} size='sm' />\n      <Avatar img={avatarImg} />\n      <Avatar img={avatarImg} size='lg' />\n      <Avatar img={avatarImg} size='xl' />\n    </div>\n  )\n}\nexport default AvatarSizes\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarInitials = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarInitials = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='Peter Ingraham' initials />\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\n      <Avatar color='light-success' content='Peter Ingraham' initials />\n      <Avatar color='light-danger' content='Peter Ingraham' initials />\n    </div>\n  )\n}\nexport default AvatarInitials\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' content='PI' />\n      <Avatar color='secondary' content='PI' />\n      <Avatar color='success' content='PI' />\n      <Avatar color='danger' content='PI' />\n      <Avatar color='warning' content='PI' />\n      <Avatar color='info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarColors\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarLightColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarLightColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='PI' />\n      <Avatar color='light-secondary' content='PI' />\n      <Avatar color='light-success' content='PI' />\n      <Avatar color='light-danger' content='PI' />\n      <Avatar color='light-warning' content='PI' />\n      <Avatar color='light-info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarLightColors\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarIcons = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\n\nconst AvatarIcons = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' icon={<Calendar size={14} />} />\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\n      <Avatar color='success' icon={<Inbox size={14} />} />\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\n      <Avatar color='light-warning' icon={<Award size={14} />} />\n      <Avatar color='light-info' icon={<Star size={14} />} />\n    </div>\n  )\n}\nexport default AvatarIcons\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarStatus = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport { GitHub } from 'react-feather'\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarStatus = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} status='offline' />\n      <Avatar color='info' content='LD' status='busy' />\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\n      <Avatar color='light-success' content='AB' status='online' />\n    </div>\n  )\n}\nexport default AvatarStatus\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarGroup = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarGroupTooltip = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    title: 'Vinnie Mostowy',\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\n  },\n  {\n    title: 'Elicia Rieske',\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\n  },\n  {\n    title: 'Julee Rossignol',\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\n  },\n  {\n    title: 'Darcey Nooner',\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\n  },\n  {\n    title: 'Jenny Looper',\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport AvatarSizes from './AvatarSizes'\nimport AvatarIcons from './AvatarIcons'\nimport AvatarGroup from './AvatarGroup'\nimport AvatarColors from './AvatarColors'\nimport AvatarStatus from './AvatarStatus'\nimport AvatarInitials from './AvatarInitials'\nimport AvatarLightColors from './AvatarLightColors'\nimport AvatarGroupTooltip from './AvatarGroupTooltip'\n\n// ** Source Code\nimport {\n  avatarIcons,\n  avatarSizes,\n  avatarGroup,\n  avatarColors,\n  avatarStatus,\n  avatarInitials,\n  avatarLightColors,\n  avatarGroupTooltip\n} from './AvatarSourceCode'\n\nconst Avatar = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Avatar' data={[{ title: 'Components' }, { title: 'Avatar' }]} />\n      <Row className='match-height'>\n        <Col xl='6' lg='12'>\n          <Card title='Sizes' code={avatarSizes}>\n            <CardText className='mb-0'>\n              Use <code>size=[sm | lg | xl]</code> prop to change avatar's size. You can also use <code>height</code> &{' '}\n              <code>width</code> prop for a custom size\n            </CardText>\n            <AvatarSizes />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Intials' code={avatarInitials}>\n            <CardText className='mb-0'>\n              Use prop <code>initials</code> to show only Initials of content.\n            </CardText>\n            <AvatarInitials />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Colors' code={avatarColors}>\n            <CardText className='mb-0'>\n              Use prop <code>color=[primary | success | danger | info | warning | dark]</code> to change background\n              color of your avatar.\n            </CardText>\n            <AvatarColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Light Colors' code={avatarLightColors}>\n            <CardText className='mb-0'>\n              Use prop{' '}\n              <code>\n                color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\n              </code>{' '}\n              to change background color of your avatar.\n            </CardText>\n            <AvatarLightColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Icons' code={avatarIcons}>\n            <CardText className='mb-0'>\n              Use prop <code>icon</code> to create avatar with icon.\n            </CardText>\n            <AvatarIcons />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Status' code={avatarStatus}>\n            <CardText className='mb-0'>\n              Use prop <code>status=[online | offline | away | busy]</code> to create avatar with status.\n            </CardText>\n            <AvatarStatus />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group' code={avatarGroup}>\n            <CardText>\n              Use <code>&lt;AvatarGroup /&gt;</code> component and pass <code>data</code> prop to create a grouped\n              avatar.\n            </CardText>\n            <CardText>Data prop must be an array of object which contains props to be passed on avatar.</CardText>\n            <AvatarGroup />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group Tooltip' code={avatarGroupTooltip}>\n            <CardText>\n              Add an extra property of <code>title</code> in the data you pass in <code>&lt;AvatarGroup /&gt;</code> to\n              create avatar group with tooltip.\n            </CardText>\n\n            <AvatarGroupTooltip />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Avatar\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from 'reactstrap'\n\n// ** Custom Components Imports\nimport Avatar from '@components/avatar'\n\nconst AvatarGroup = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : 'div'\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      const ItemTag = item.tag ? item.tag : 'div'\n      return (\n        <Fragment key={i}>\n          {item.title ? (\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null}\n          {!item.meta ? (\n            <Avatar\n              tag={ItemTag}\n              className={classnames('pull-up', {\n                [item.className]: item.className\n              })}\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\n              {...item}\n              title={undefined}\n              meta={undefined}\n            />\n          ) : null}\n          {item.meta ? <ItemTag className='d-flex align-items-center ps-1'>{item.meta}</ItemTag> : null}\n        </Fragment>\n      )\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar-group', {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-20.40d668f5.jpg\";"],"sourceRoot":""}