{"version":3,"sources":["views/forms/form-elements/file-uploader/FileUploaderSingle.js","views/forms/form-elements/file-uploader/FileUploaderMultiple.js","views/forms/form-elements/file-uploader/FileUploaderRestrictions.js","views/forms/form-elements/file-uploader/index.js","@core/components/extensions-header/index.js"],"names":["FileUploaderSingle","files","setFiles","useState","getRootProps","getInputProps","useDropzone","multiple","onDrop","acceptedFiles","map","file","Object","assign","renderFilePreview","type","startsWith","_jsx","className","alt","name","src","URL","createObjectURL","height","width","FileText","size","fileList","index","_jsxs","ListGroupItem","children","Math","round","concat","toFixed","Button","color","outline","onClick","filtered","filter","i","handleRemoveFile","X","Card","CardHeader","CardTitle","tag","CardBody","DownloadCloud","href","e","preventDefault","length","Fragment","ListGroup","handleRemoveAllFiles","FileUploaderMultiple","FileUploaderRestrictions","accept","rejectedFiles","toast","error","Uploader","ExtensionsHeader","title","link","subTitle","Row","Col","sm","props","target","rel"],"mappings":"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","file":"static/js/131.a2f828fd.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Third Party Imports\nimport { useDropzone } from 'react-dropzone'\nimport { FileText, X, DownloadCloud } from 'react-feather'\n\nconst FileUploaderSingle = () => {\n  // ** State\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    onDrop: acceptedFiles => {\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n    }\n  })\n\n  const renderFilePreview = file => {\n    if (file.type.startsWith('image')) {\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n    } else {\n      return <FileText size='28' />\n    }\n  }\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  const handleRemoveAllFiles = () => {\n    setFiles([])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Single</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <div className='d-flex align-items-center justify-content-center flex-column'>\n            <DownloadCloud size={64} />\n            <h5>Drop Files here or click to upload</h5>\n            <p className='text-secondary'>\n              Drop files here or click{' '}\n              <a href='/' onClick={e => e.preventDefault()}>\n                browse\n              </a>{' '}\n              thorough your machine\n            </p>\n          </div>\n        </div>\n        {files.length ? (\n          <Fragment>\n            <ListGroup className='my-2'>{fileList}</ListGroup>\n            <div className='d-flex justify-content-end'>\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\n                Remove All\n              </Button>\n              <Button color='primary'>Upload Files</Button>\n            </div>\n          </Fragment>\n        ) : null}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderSingle\n","// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Third Party Imports\nimport { useDropzone } from 'react-dropzone'\nimport { FileText, X, DownloadCloud } from 'react-feather'\n\nconst FileUploaderMultiple = () => {\n  // ** State\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: acceptedFiles => {\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n    }\n  })\n\n  const renderFilePreview = file => {\n    if (file.type.startsWith('image')) {\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n    } else {\n      return <FileText size='28' />\n    }\n  }\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  const handleRemoveAllFiles = () => {\n    setFiles([])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Multiple</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <div className='d-flex align-items-center justify-content-center flex-column'>\n            <DownloadCloud size={64} />\n            <h5>Drop Files here or click to upload</h5>\n            <p className='text-secondary'>\n              Drop files here or click{' '}\n              <a href='/' onClick={e => e.preventDefault()}>\n                browse\n              </a>{' '}\n              thorough your machine\n            </p>\n          </div>\n        </div>\n        {files.length ? (\n          <Fragment>\n            <ListGroup className='my-2'>{fileList}</ListGroup>\n            <div className='d-flex justify-content-end'>\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\n                Remove All\n              </Button>\n              <Button color='primary'>Upload Files</Button>\n            </div>\n          </Fragment>\n        ) : null}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderMultiple\n","// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Third Party Imports\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport { X, DownloadCloud } from 'react-feather'\n\nconst FileUploaderRestrictions = () => {\n  // ** State\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    accept: 'image/*',\n    onDrop: (acceptedFiles, rejectedFiles) => {\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n      }\n    }\n  })\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>\n          <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n        </div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  const handleRemoveAllFiles = () => {\n    setFiles([])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Restrictions</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <div className='d-flex align-items-center justify-content-center flex-column'>\n            <DownloadCloud size={64} />\n            <h5>Drop Files here or click to upload</h5>\n            <p className='text-secondary'>\n              Drop files here or click{' '}\n              <a href='/' onClick={e => e.preventDefault()}>\n                browse\n              </a>{' '}\n              thorough your machine\n            </p>\n          </div>\n        </div>\n        {files.length ? (\n          <Fragment>\n            <ListGroup className='my-2'>{fileList}</ListGroup>\n            <div className='d-flex justify-content-end'>\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\n                Remove All\n              </Button>\n              <Button color='primary'>Upload Files</Button>\n            </div>\n          </Fragment>\n        ) : null}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderRestrictions\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Demo Components\nimport FileUploaderSingle from './FileUploaderSingle'\nimport FileUploaderMultiple from './FileUploaderMultiple'\nimport FileUploaderRestrictions from './FileUploaderRestrictions'\n\n// ** Styles\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\n\nconst Uploader = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Dropzone'\n        link='https://github.com/react-dropzone/react-dropzone'\n        subTitle=\"Simple React hook to create a HTML5-compliant drag'n'drop zone for files.\"\n      />\n\n      <Row>\n        <Col sm='12'>\n          <FileUploaderMultiple />\n        </Col>\n        <Col sm='12'>\n          <FileUploaderSingle />\n        </Col>\n        <Col sm='12'>\n          <FileUploaderRestrictions />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Uploader\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}