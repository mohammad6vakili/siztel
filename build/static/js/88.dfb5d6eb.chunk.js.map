{"version":3,"sources":["views/apps/chat/Chat.js","views/apps/chat/SidebarLeft.js","views/apps/chat/UserProfileSidebar.js","views/apps/chat/index.js","@core/components/avatar/index.js"],"names":["ChatLog","props","handleUser","handleUserSidebarRight","handleSidebar","store","userSidebarLeft","userProfile","selectedUser","chatArea","useRef","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","msg","setMsg","useEffect","Object","keys","length","ReactDOM","findDOMNode","current","scrollTop","Number","MAX_SAFE_INTEGER","ChatWrapper","chat","PerfectScrollbar","_jsxs","className","children","classnames","_jsx","MessageSquare","onClick","window","innerWidth","Menu","size","Avatar","imgHeight","imgWidth","img","contact","avatar","status","obj","fullName","PhoneCall","Video","Search","UncontrolledDropdown","DropdownToggle","color","MoreVertical","DropdownMenu","end","DropdownItem","href","e","preventDefault","ref","options","wheelPropagation","chatLog","formattedChatLog","chatMessageSenderId","senderId","undefined","msgGroup","messages","forEach","index","push","message","time","formattedChatData","map","item","Form","onSubmit","sendMsg","_objectSpread","handleSendMsg","InputGroup","InputGroupText","Mic","Input","value","onChange","target","placeholder","Label","for","Image","type","id","hidden","Button","Send","SidebarLeft","sidebar","handleUserSidebarLeft","chats","contacts","query","setQuery","_useState3","_useState4","about","setAbout","_useState5","_useState6","active","setActive","_useState7","_useState8","setStatus","_useState9","_useState10","filteredChat","setFilteredChat","_useState11","_useState12","filteredContacts","setFilteredContacts","handleUserClick","selectChat","isObjEmpty","show","X","role","rows","defaultValue","label","checked","CheckSquare","name","defaultChecked","Bell","User","Trash","searchFilterFunction","toLowerCase","includes","filteredChatsArr","filter","filteredContactssArr","_toConsumableArray","formatDateToMonthShort","lastMessage","Date","CardText","unseenMsgs","Badge","pill","UserProfileSidebar","user","userSidebarRight","Mail","Clock","Tag","Star","Slash","AppChat","useSelector","state","setUser","setSidebar","setUserSidebarRight","setUserSidebarLeft","getChatContacts","getUserProfile","Fragment","Sidebar","Chat","forwardRef","_classnames","_classnames3","icon","badgeUp","content","tag","initials","badgeText","badgeColor","imgClassName","contentStyles","rest","_objectWithoutProperties","_excluded","_defineProperty","concat","style","str","results","split","join","getInitials","src","alt","height","width","defaultProps"],"mappings":"4XAgPeA,EAlNC,SAAAC,GAEd,IAAQC,EAA8ED,EAA9EC,WAAYC,EAAkEF,EAAlEE,uBAAwBC,EAA0CH,EAA1CG,cAAeC,EAA2BJ,EAA3BI,MAAOC,EAAoBL,EAApBK,gBAC1DC,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,aAGfC,EAAWC,iBAAO,MAClBC,EAAWC,cAGjBC,EAAsBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GASlBI,qBAAU,WACgBC,OAAOC,KAAKb,GAAcc,SAN5BC,IAASC,YAAYf,EAASgB,SACtCC,UAAYC,OAAOC,iBAUnC,GAAG,CAACpB,IAGJ,IA0FMqB,EAAcT,OAAOC,KAAKb,GAAcc,QAAUd,EAAasB,KAAOC,IAAmB,MAE/F,OACEC,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAWE,IAAW,kBAAmB,CAAE,SAAUf,OAAOC,KAAKb,GAAcc,SAAUY,SAAA,CAC5FE,cAAA,OAAKH,UAAU,uBAAsBC,SACnCE,cAACC,IAAa,MAEhBD,cAAA,MAAIH,UAAU,iCAAiCK,QAxBrB,YACzBlB,OAAOC,KAAKb,GAAcc,SAAWhB,GAAmBiC,OAAOC,WAAa,KAC/EpC,GAEJ,EAoBsF8B,SAAC,0BAIlFd,OAAOC,KAAKb,GAAcc,OACzBU,eAAA,OAAKC,UAAWE,IAAW,cAAe,CAAE,SAA2B,OAAjB3B,IAAyB0B,SAAA,CAC7EE,cAAA,OAAKH,UAAU,cAAaC,SAC1BF,eAAA,UAAQC,UAAU,cAAaC,SAAA,CAC7BF,eAAA,OAAKC,UAAU,4BAA2BC,SAAA,CACxCE,cAAA,OAAKH,UAAU,wCAAwCK,QAASlC,EAAc8B,SAC5EE,cAACK,IAAI,CAACC,KAAM,OAEdN,cAACO,IAAM,CACLC,UAAU,KACVC,SAAS,KACTC,IAAKtC,EAAauC,QAAQC,OAC1BC,OAAQzC,EAAauC,QAAQE,OAC7BhB,UAAU,6CACVK,QAAS,kBAhDCY,EAgDuB1C,EAAauC,QA/C5D5C,SACAD,EAAWgD,GAFa,IAAAA,CAgD4C,IAExDd,cAAA,MAAIH,UAAU,OAAMC,SAAE1B,EAAauC,QAAQI,cAE7CnB,eAAA,OAAKC,UAAU,4BAA2BC,SAAA,CACxCE,cAACgB,IAAS,CAACV,KAAM,GAAIT,UAAU,0CAC/BG,cAACiB,IAAK,CAACX,KAAM,GAAIT,UAAU,0CAC3BG,cAACkB,IAAM,CAACZ,KAAM,GAAIT,UAAU,qCAC5BD,eAACuB,KAAoB,CAACtB,UAAU,wBAAuBC,SAAA,CACrDE,cAACoB,IAAc,CAACvB,UAAU,WAAWwB,MAAM,cAAcf,KAAK,KAAIR,SAChEE,cAACsB,IAAY,CAAChB,KAAK,SAErBV,eAAC2B,IAAY,CAACC,KAAG,EAAA1B,SAAA,CACfE,cAACyB,IAAY,CAACC,KAAK,IAAIxB,QAAS,SAAAyB,GAAC,OAAIA,EAAEC,gBAAgB,EAAC9B,SAAC,iBAGzDE,cAACyB,IAAY,CAACC,KAAK,IAAIxB,QAAS,SAAAyB,GAAC,OAAIA,EAAEC,gBAAgB,EAAC9B,SAAC,uBAGzDE,cAACyB,IAAY,CAACC,KAAK,IAAIxB,QAAS,SAAAyB,GAAC,OAAIA,EAAEC,gBAAgB,EAAC9B,SAAC,kBAGzDE,cAACyB,IAAY,CAACC,KAAK,IAAIxB,QAAS,SAAAyB,GAAC,OAAIA,EAAEC,gBAAgB,EAAC9B,SAAC,eAGzDE,cAACyB,IAAY,CAACC,KAAK,IAAIxB,QAAS,SAAAyB,GAAC,OAAIA,EAAEC,gBAAgB,EAAC9B,SAAC,yBASnEE,cAACP,EAAW,CAACoC,IAAKxD,EAAUwB,UAAU,aAAaiC,QAAS,CAAEC,kBAAkB,GAAQjC,SACrF1B,EAAasB,KAAOM,cAAA,OAAKH,UAAU,QAAOC,SAvJ3B,WACxB,IAAIkC,EAAU,GACV5D,EAAasB,OACfsC,EAAU5D,EAAasB,KAAKA,MAG9B,IAAMuC,EAAmB,GACrBC,EAAsBF,EAAQ,GAAKA,EAAQ,GAAGG,cAAWC,EACzDC,EAAW,CACbF,SAAUD,EACVI,SAAU,IAuBZ,OArBAN,EAAQO,SAAQ,SAAC1D,EAAK2D,GAChBN,IAAwBrD,EAAIsD,SAC9BE,EAASC,SAASG,KAAK,CACrB5D,IAAKA,EAAI6D,QACTC,KAAM9D,EAAI8D,QAGZT,EAAsBrD,EAAIsD,SAC1BF,EAAiBQ,KAAKJ,GACtBA,EAAW,CACTF,SAAUtD,EAAIsD,SACdG,SAAU,CACR,CACEzD,IAAKA,EAAI6D,QACTC,KAAM9D,EAAI8D,SAKdH,IAAUR,EAAQ9C,OAAS,GAAG+C,EAAiBQ,KAAKJ,EAC1D,IACOJ,CACT,CAISW,GAAoBC,KAAI,SAACC,EAAMN,GACpC,OACE5C,eAAA,OAEEC,UAAWE,IAAW,OAAQ,CAC5B,YAA+B,KAAlB+C,EAAKX,WACjBrC,SAAA,CAEHE,cAAA,OAAKH,UAAU,cAAaC,SAC1BE,cAACO,IAAM,CACLE,SAAU,GACVD,UAAW,GACXX,UAAU,8BACVa,IAAuB,KAAlBoC,EAAKX,SAAkBhE,EAAYyC,OAASxC,EAAauC,QAAQC,WAI1EZ,cAAA,OAAKH,UAAU,YAAWC,SACvBgD,EAAKR,SAASO,KAAI,SAAAnD,GAAI,OACrBM,cAAA,OAAoBH,UAAU,eAAcC,SAC1CE,cAAA,KAAAF,SAAIJ,EAAKb,OADDa,EAAKb,IAET,QAlBL2D,EAuBX,MAuF4E,OAGtE5C,eAACmD,IAAI,CAAClD,UAAU,gBAAgBmD,SAAU,SAAArB,GAAC,OAzE7B,SAAAA,GACpBA,EAAEC,iBACE/C,EAAIK,SACNX,EAAS0E,YAAOC,wBAAC,CAAC,EAAI9E,GAAY,IAAEsE,QAAS7D,MAC7CC,EAAO,IAEX,CAmEuDqE,CAAcxB,EAAE,EAAC7B,SAAA,CAC9DF,eAACwD,IAAU,CAACvD,UAAU,2CAA0CC,SAAA,CAC9DE,cAACqD,IAAc,CAAAvD,SACbE,cAACsD,IAAG,CAACzD,UAAU,iBAAiBS,KAAM,OAExCN,cAACuD,IAAK,CACJC,MAAO3E,EACP4E,SAAU,SAAA9B,GAAC,OAAI7C,EAAO6C,EAAE+B,OAAOF,MAAM,EACrCG,YAAY,4CAEd3D,cAACqD,IAAc,CAAAvD,SACbF,eAACgE,IAAK,CAAC/D,UAAU,uBAAuBgE,IAAI,aAAY/D,SAAA,CACtDE,cAAC8D,IAAK,CAACjE,UAAU,gCAAgCS,KAAM,KACvDN,cAAA,SAAO+D,KAAK,OAAOC,GAAG,aAAaC,QAAM,YAI/CrE,eAACsE,IAAM,CAACrE,UAAU,OAAOwB,MAAM,UAASvB,SAAA,CACtCE,cAACmE,IAAI,CAAC7D,KAAM,GAAIT,UAAU,cAC1BG,cAAA,QAAMH,UAAU,oBAAmBC,SAAC,kBAIxC,OAGV,E,+DCoFesE,EA7SK,SAAAvG,GAElB,IAAQI,EAA0EJ,EAA1EI,MAAOoG,EAAmExG,EAAnEwG,QAASrG,EAA0DH,EAA1DG,cAAeE,EAA2CL,EAA3CK,gBAAiBoG,EAA0BzG,EAA1ByG,sBAChDC,EAAiCtG,EAAjCsG,MAAOC,EAA0BvG,EAA1BuG,SAAUrG,EAAgBF,EAAhBE,YAGnBI,EAAWC,cAGjBC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BgG,EAAK9F,EAAA,GAAE+F,EAAQ/F,EAAA,GACtBgG,EAA0BjG,mBAAS,IAAGkG,EAAAhG,YAAA+F,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA4BrG,mBAAS,GAAEsG,EAAApG,YAAAmG,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAA4BzG,mBAAS,UAAS0G,EAAAxG,YAAAuG,EAAA,GAAvCtE,EAAMuE,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAAwC5G,mBAAS,IAAG6G,EAAA3G,YAAA0G,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAgDhH,mBAAS,IAAGiH,EAAA/G,YAAA8G,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAGtCG,EAAkB,SAAA9B,GACtBzF,EAASwH,YAAW/B,IACpBkB,EAAUlB,IACM,IAAZK,GACFrG,GAEJ,EAEAe,qBAAU,WACHiH,YAAW/H,EAAMG,gBAChBH,EAAMG,aAAasB,KACrBwF,EAAUjH,EAAMG,aAAasB,KAAKsE,IAElCkB,EAAUjH,EAAMG,aAAauC,QAAQqD,IAG3C,GAAG,IA+FH,OAAO/F,EACL+B,cAAA,OAAKH,UAAU,eAAcC,SAC3BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBF,eAAA,OACEC,UAAWE,IAAW,uBAAwB,CAC5CkG,KAAM/H,IACL4B,SAAA,CAEHF,eAAA,UAAQC,UAAU,sBAAqBC,SAAA,CACrCE,cAAA,OAAKH,UAAU,aAAaK,QAASoE,EAAsBxE,SACzDE,cAACkG,IAAC,CAAC5F,KAAM,OAEXV,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACrCE,cAACO,IAAM,CAACV,UAAU,6BAA6Ba,IAAKvC,EAAYyC,OAAQC,OAAQA,EAAQP,KAAK,OAC7FN,cAAA,MAAIH,UAAU,iBAAgBC,SAAE3B,EAAY4C,WAC5Cf,cAAA,QAAMH,UAAU,YAAWC,SAAE3B,EAAYgI,aAG7CvG,eAACD,IAAgB,CAACE,UAAU,uBAAuBiC,QAAS,CAAEC,kBAAkB,GAAQjC,SAAA,CACtFE,cAAA,MAAIH,UAAU,qBAAoBC,SAAC,UACnCF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBE,cAACuD,IAAK,CACJ6C,KAAK,IACLrC,KAAK,WACLsC,aAAclI,EAAY0G,MAC1BpB,SAAU,SAAA9B,GAAC,OAAImD,EAASnD,EAAE+B,OAAOF,MAAM,EACvC3D,UAAWE,IAAW,gBAAiB,CACrC,cAAe8E,GAASA,EAAM3F,OAAS,QAG3CU,eAAA,SAAOC,UAAU,0BAAyBC,SAAA,CACxCE,cAAA,QAAMH,UAAU,aAAYC,SAtCpC3B,GAAeA,EAAY0G,OAAS1G,EAAY0G,MAAM3F,QAA2B,IAAjB2F,EAAM3F,OACjEf,EAAY0G,MAAM3F,OAElB2F,EAAM3F,SAmCqD,eAG5Dc,cAAA,MAAIH,UAAU,0BAAyBC,SAAC,WACxCF,eAAA,MAAIC,UAAU,4BAA2BC,SAAA,CACvCE,cAAA,MAAIH,UAAU,OAAMC,SAClBF,eAAA,OAAKC,UAAU,gCAA+BC,SAAA,CAC5CE,cAACuD,IAAK,CACJQ,KAAK,QACLuC,MAAM,SACNtC,GAAG,cACHuC,QAAoB,WAAX1F,EACT4C,SAAU,kBAAM4B,EAAU,SAAS,IAErCrF,cAAC4D,IAAK,CAAC/D,UAAU,mBAAmBgE,IAAI,cAAa/D,SAAC,gBAK1DE,cAAA,MAAIH,UAAU,OAAMC,SAClBF,eAAA,OAAKC,UAAU,+BAA8BC,SAAA,CAC3CE,cAACuD,IAAK,CACJQ,KAAK,QACLC,GAAG,YACHsC,MAAM,iBACNC,QAAoB,SAAX1F,EACT4C,SAAU,kBAAM4B,EAAU,OAAO,IAEnCrF,cAAC4D,IAAK,CAAC/D,UAAU,mBAAmBgE,IAAI,YAAW/D,SAAC,cAKxDE,cAAA,MAAIH,UAAU,OAAMC,SAClBF,eAAA,OAAKC,UAAU,gCAA+BC,SAAA,CAC5CE,cAACuD,IAAK,CACJQ,KAAK,QACLuC,MAAM,OACNtC,GAAG,YACHuC,QAAoB,SAAX1F,EACT4C,SAAU,kBAAM4B,EAAU,OAAO,IAEnCrF,cAAC4D,IAAK,CAAC/D,UAAU,mBAAmBgE,IAAI,YAAW/D,SAAC,cAKxDE,cAAA,MAAIH,UAAU,OAAMC,SAClBF,eAAA,OAAKC,UAAU,kCAAiCC,SAAA,CAC9CE,cAACuD,IAAK,CACJQ,KAAK,QACLuC,MAAM,UACNtC,GAAG,eACHuC,QAAoB,YAAX1F,EACT4C,SAAU,kBAAM4B,EAAU,UAAU,IAEtCrF,cAAC4D,IAAK,CAAC/D,UAAU,mBAAmBgE,IAAI,eAAc/D,SAAC,oBAM7DE,cAAA,MAAIH,UAAU,0BAAyBC,SAAC,aACxCF,eAAA,MAAIC,UAAU,gBAAeC,SAAA,CAC3BF,eAAA,MAAIC,UAAU,yDAAwDC,SAAA,CACpEF,eAAA,OAAKC,UAAU,4BAA2BC,SAAA,CACxCE,cAACwG,IAAW,CAAC3G,UAAU,QAAQS,KAAK,OACpCN,cAAA,QAAMH,UAAU,eAAcC,SAAC,6BAEjCE,cAAA,OAAKH,UAAU,cAAaC,SAC1BE,cAACuD,IAAK,CAACQ,KAAK,SAASC,GAAG,eAAeyC,KAAK,eAAeC,gBAAc,SAG7E9G,eAAA,MAAIC,UAAU,yDAAwDC,SAAA,CACpEF,eAAA,OAAKC,UAAU,4BAA2BC,SAAA,CACxCE,cAAC2G,IAAI,CAAC9G,UAAU,QAAQS,KAAK,OAC7BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,oBAEjCE,cAAA,OAAKH,UAAU,cAAaC,SAC1BE,cAACuD,IAAK,CAACQ,KAAK,SAASC,GAAG,gBAAgByC,KAAK,uBAGjD7G,eAAA,MAAIC,UAAU,gDAA+CC,SAAA,CAC3DE,cAAC4G,IAAI,CAAC/G,UAAU,QAAQS,KAAK,OAC7BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,sBAEjCF,eAAA,MAAIC,UAAU,2CAA0CC,SAAA,CACtDE,cAAC6G,IAAK,CAAChH,UAAU,QAAQS,KAAK,OAC9BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,yBAGnCE,cAAA,OAAKH,UAAU,OAAMC,SACnBE,cAACkE,IAAM,CAAC7C,MAAM,UAASvB,SAAC,mBAI9BF,eAAA,OACEC,UAAWE,IAAW,kBAAmB,CACvCkG,MAAkB,IAAZ5B,IACLvE,SAAA,CAEHE,cAAA,OAAKH,UAAU,qBAAqBK,QAASlC,EAAc8B,SACzDE,cAACkG,IAAC,CAAC5F,KAAM,OAEXN,cAAA,OAAKH,UAAU,oBAAmBC,SAChCF,eAAA,OAAKC,UAAU,kCAAiCC,SAAA,CAC9CE,cAAA,OAAKH,UAAU,yBAAyBK,QAASoE,EAAsBxE,SACpEd,OAAOC,KAAKd,GAAae,OACxBc,cAACO,IAAM,CACLV,UAAU,gBACVa,IAAKvC,EAAYyC,OACjBC,OAAQA,EACRL,UAAU,KACVC,SAAS,OAET,OAENb,eAACwD,IAAU,CAACvD,UAAU,+BAA8BC,SAAA,CAClDE,cAACqD,IAAc,CAACxD,UAAU,QAAOC,SAC/BE,cAACkB,IAAM,CAACrB,UAAU,aAAaS,KAAM,OAEvCN,cAACuD,IAAK,CACJC,MAAOiB,EACP5E,UAAU,QACV8D,YAAY,6BACZF,SA7KK,SAAA9B,GACnB+C,EAAS/C,EAAE+B,OAAOF,OAClB,IAAMsD,EAAuB,SAAAnG,GAAO,OAAIA,EAAQI,SAASgG,cAAcC,SAASrF,EAAE+B,OAAOF,MAAMuD,cAAc,EACvGE,EAAmB1C,EAAM2C,OAAOJ,GAChCK,EAAuB3C,EAAS0C,OAAOJ,GAC7CrB,EAAe2B,YAAKH,IACpBpB,EAAmBuB,YAAKD,GAC1B,YA2KQvH,eAACD,IAAgB,CAACE,UAAU,oCAAoCiC,QAAS,CAAEC,kBAAkB,GAAQjC,SAAA,CACnGE,cAAA,MAAIH,UAAU,kBAAiBC,SAAC,UAChCE,cAAA,MAAIH,UAAU,uCAAsCC,SA9PxDyE,GAASA,EAAMrF,OACbuF,EAAMvF,SAAWsG,EAAatG,OAE9Bc,cAAA,MAAIH,UAAU,kBAAiBC,SAC7BE,cAAA,MAAIH,UAAU,OAAMC,SAAC,sBAIR2E,EAAMvF,QAAUsG,EAAatG,OAASsG,EAAejB,GAEtD1B,KAAI,SAAAC,GAClB,IAAMH,EAAO0E,YAAuBvE,EAAKpD,KAAK4H,YAAcxE,EAAKpD,KAAK4H,YAAY3E,KAAO,IAAI4E,MAE7F,OACE3H,eAAA,MAEEM,QAAS,kBAAM4F,EAAgBhD,EAAKkB,GAAG,EACvCnE,UAAWE,IAAW,CACpBkF,OAAQA,IAAWnC,EAAKkB,KACvBlE,SAAA,CAEHE,cAACO,IAAM,CAACG,IAAKoC,EAAKlC,OAAQJ,UAAU,KAAKC,SAAS,KAAKI,OAAQiC,EAAKjC,SACpEjB,eAAA,OAAKC,UAAU,wBAAuBC,SAAA,CACpCE,cAAA,MAAIH,UAAU,OAAMC,SAAEgD,EAAK/B,WAC3Bf,cAACwH,IAAQ,CAAC3H,UAAU,gBAAeC,SAChCgD,EAAKpD,KAAK4H,YAAcxE,EAAKpD,KAAK4H,YAAY5E,QAAU6B,EAAMA,EAAMrF,OAAS,GAAGwD,aAGrF9C,eAAA,OAAKC,UAAU,wBAAuBC,SAAA,CACpCE,cAAA,SAAOH,UAAU,kCAAiCC,SAAE6C,IACnDG,EAAKpD,KAAK+H,YAAc,EACvBzH,cAAC0H,IAAK,CAAC7H,UAAU,YAAYwB,MAAM,SAASsG,MAAI,EAAA7H,SAC7CgD,EAAKpD,KAAK+H,aAEX,UAnBD3E,EAAKkB,GAuBhB,IAGK,OAsNDhE,cAAA,MAAIH,UAAU,kBAAiBC,SAAC,aAChCE,cAAA,MAAIH,UAAU,0CAAyCC,SAjN3D0E,GAAYA,EAAStF,OACnBuF,EAAMvF,SAAW0G,EAAiB1G,OAElCc,cAAA,MAAIH,UAAU,kBAAiBC,SAC7BE,cAAA,MAAIH,UAAU,OAAMC,SAAC,sBAIR2E,EAAMvF,QAAU0G,EAAiB1G,OAAS0G,EAAmBpB,GAC9D3B,KAAI,SAAAC,GAClB,OACElD,eAAA,MAAwBM,QAAS,kBAAM4F,EAAgBhD,EAAKkB,GAAG,EAAClE,SAAA,CAC9DE,cAACO,IAAM,CAACG,IAAKoC,EAAKlC,OAAQJ,UAAU,KAAKC,SAAS,OAClDb,eAAA,OAAKC,UAAU,wBAAuBC,SAAA,CACpCE,cAAA,MAAIH,UAAU,OAAMC,SAAEgD,EAAK/B,WAC3Bf,cAACwH,IAAQ,CAAC3H,UAAU,gBAAeC,SAAEgD,EAAK+B,aAJrC/B,EAAK/B,SAQlB,IAGK,kBAgMP,IACN,E,6CC7Oe6G,EAzEY,SAAA/J,GAEzB,IAAQgK,EAAmDhK,EAAnDgK,KAAM9J,EAA6CF,EAA7CE,uBAAwB+J,EAAqBjK,EAArBiK,iBAEtC,OACElI,eAAA,OAAKC,UAAWE,IAAW,uBAAwB,CAAEkG,MAA2B,IAArB6B,IAA6BhI,SAAA,CACtFF,eAAA,UAAQC,UAAU,sBAAqBC,SAAA,CACrCE,cAAA,QAAMH,UAAU,aAAaK,QAASnC,EAAuB+B,SAC3DE,cAACkG,IAAC,CAAC5F,KAAM,OAEXV,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACrCE,cAACO,IAAM,CACLV,UAAU,6BACVS,KAAK,KACLO,OAAQgH,EAAKhH,OACbH,IAAKmH,EAAKjH,OACVJ,UAAU,KACVC,SAAS,OAEXT,cAAA,MAAIH,UAAU,iBAAgBC,SAAE+H,EAAK9G,WACrCf,cAAA,QAAMH,UAAU,YAAWC,SAAE+H,EAAK1B,aAGtCvG,eAACD,IAAgB,CAACE,UAAU,4BAA4BiC,QAAS,CAAEC,kBAAkB,GAAQjC,SAAA,CAC3FE,cAAA,MAAIH,UAAU,qBAAoBC,SAAC,UACnCE,cAAA,KAAAF,SAAI+H,EAAKhD,QACTjF,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BE,cAAA,MAAIH,UAAU,0BAAyBC,SAAC,yBACxCF,eAAA,MAAIC,UAAU,gBAAeC,SAAA,CAC3BF,eAAA,MAAIC,UAAU,OAAMC,SAAA,CAClBE,cAAC+H,IAAI,CAAClI,UAAU,QAAQS,KAAM,KAC9BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,yBAEjCF,eAAA,MAAIC,UAAU,OAAMC,SAAA,CAClBE,cAACgB,IAAS,CAACnB,UAAU,QAAQS,KAAM,KACnCN,cAAA,QAAMH,UAAU,eAAcC,SAAC,2BAEjCF,eAAA,MAAAE,SAAA,CACEE,cAACgI,IAAK,CAACnI,UAAU,QAAQS,KAAM,KAC/BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,mCAIrCF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BE,cAAA,MAAIH,UAAU,0BAAyBC,SAAC,YACxCF,eAAA,MAAIC,UAAU,gBAAeC,SAAA,CAC3BF,eAAA,MAAIC,UAAU,sBAAqBC,SAAA,CACjCE,cAACiI,IAAG,CAACpI,UAAU,QAAQS,KAAM,KAC7BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,gBAEjCF,eAAA,MAAIC,UAAU,sBAAqBC,SAAA,CACjCE,cAACkI,IAAI,CAACrI,UAAU,QAAQS,KAAM,KAC9BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,0BAEjCF,eAAA,MAAIC,UAAU,sBAAqBC,SAAA,CACjCE,cAAC8D,IAAK,CAACjE,UAAU,QAAQS,KAAM,KAC/BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,qBAEjCF,eAAA,MAAIC,UAAU,sBAAqBC,SAAA,CACjCE,cAAC6G,IAAK,CAAChH,UAAU,QAAQS,KAAM,KAC/BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,uBAEjCF,eAAA,MAAIC,UAAU,iBAAgBC,SAAA,CAC5BE,cAACmI,IAAK,CAACtI,UAAU,QAAQS,KAAM,KAC/BN,cAAA,QAAMH,UAAU,eAAcC,SAAC,gCAO7C,E,eCIesI,UAnEC,WAEd,IAAM7J,EAAWC,cACXP,EAAQoK,aAAY,SAAAC,GAAK,OAAIA,EAAM5I,IAAI,IAG7CjB,EAAwBC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAA7BoJ,EAAIlJ,EAAA,GAAE4J,EAAO5J,EAAA,GACpBgG,EAA8BjG,oBAAS,GAAMkG,EAAAhG,YAAA+F,EAAA,GAAtCN,EAAOO,EAAA,GAAE4D,EAAU5D,EAAA,GAC1BG,EAAgDrG,oBAAS,GAAMsG,EAAApG,YAAAmG,EAAA,GAAxD+C,EAAgB9C,EAAA,GAAEyD,EAAmBzD,EAAA,GAC5CG,EAA8CzG,oBAAS,GAAM0G,EAAAxG,YAAAuG,EAAA,GAAtDjH,EAAekH,EAAA,GAAEsD,EAAkBtD,EAAA,GAGpCpH,EAAgB,WAAH,OAASwK,GAAYnE,EAAQ,EAE1CtG,EAAyB,WAAH,OAAS0K,GAAqBX,EAAiB,EAgB3E,OALA/I,qBAAU,WACRR,EAASoK,eACTpK,EAASqK,cACX,GAAG,CAACrK,IAGFqB,eAACiJ,WAAQ,CAAA/I,SAAA,CACPE,cAAC8I,EAAO,CACN7K,MAAOA,EACPoG,QAASA,EACTrG,cAAeA,EACfE,gBAAiBA,EACjBoG,sBAxBwB,WAAH,OAASoE,GAAoBxK,EAAgB,IA0BpE8B,cAAA,OAAKH,UAAU,gBAAeC,SAC5BE,cAAA,OAAKH,UAAU,kBAAiBC,SAC9BF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BE,cAAA,OACEH,UAAWE,IAAW,uBAAwB,CAC5CkG,MAA2B,IAArB6B,IAAyC,IAAZzD,IAAwC,IAApBnG,IAEzDgC,QA/Be,WACzBsI,GAAW,GACXC,GAAoB,GACpBC,GAAmB,EACrB,IA6BU1I,cAAC+I,EAAI,CACH9K,MAAOA,EACPH,WA5BO,SAAAgD,GAAG,OAAIyH,EAAQzH,EAAI,EA6B1B9C,cAAeA,EACfE,gBAAiBA,EACjBH,uBAAwBA,IAE1BiC,cAAC4H,EAAkB,CACjBC,KAAMA,EACNC,iBAAkBA,EAClB/J,uBAAwBA,aAOtC,C,gRCzEMwC,EAASyI,sBAAW,SAACnL,EAAOgE,GAAS,IAADoH,EAAAC,EAGtCxI,EAiBE7C,EAjBF6C,IACAJ,EAgBEzC,EAhBFyC,KACA6I,EAeEtL,EAfFsL,KACA9H,EAcExD,EAdFwD,MACAR,EAaEhD,EAbFgD,OACAuI,EAYEvL,EAZFuL,QACAC,EAWExL,EAXFwL,QACKpB,EAUHpK,EAVFyL,IACAC,EASE1L,EATF0L,SACA9I,EAQE5C,EARF4C,SACAZ,EAOEhC,EAPFgC,UACA2J,EAME3L,EANF2L,UACAhJ,EAKE3C,EALF2C,UACAiJ,EAIE5L,EAJF4L,WACAC,EAGE7L,EAHF6L,aACAC,EAEE9L,EAFF8L,cACGC,EAAIC,YACLhM,EAAKiM,GAYT,OACElK,eAACqI,EAAG/E,wBAAA,CACFrD,UAAWE,IAAW,UAAQkJ,EAAA,GAAAc,YAAAd,EAC3BpJ,EAAYA,GAASkK,YAAAd,EAAC,MAADe,OACf3I,GAAUA,GAAK0I,YAAAd,EAAC,UAADe,OACX1J,GAASA,GAAI2I,IAE1BpH,IAAKA,GACD+H,GAAI,IAAA9J,SAAA,EAEC,IAARY,QAAyB0B,IAAR1B,EAChBd,eAAA,QACEC,UAAWE,IAAW,iBAAkB,CACtC,oBAAqBqJ,IAEvBa,MAAON,EAAc7J,SAAA,CAEpByJ,EA1BW,SAAAW,GAClB,IAAMC,EAAU,GAKhB,OAJkBD,EAAIE,MAAM,KAClB7H,SAAQ,SAAAZ,GAChBwI,EAAQ1H,KAAKd,EAAE,GACjB,IACOwI,EAAQE,KAAK,GACtB,CAmBoBC,CAAYjB,GAAWA,EAElCF,GAAc,KACdC,EACCpJ,cAAC0H,IAAK,CAACrG,MAAOoI,GAA0B,UAAW5J,UAAU,oBAAoB8H,MAAI,EAAA7H,SAClF0J,GAAwB,MAEzB,QAGNxJ,cAAA,OACEH,UAAWE,IAAUgK,YAAC,CAAC,EACpBL,EAAeA,IAElBa,IAAK7J,EACL8J,IAAI,YACJC,OAAQjK,IAAcF,EAAOE,EAAY,GACzCkK,MAAOjK,IAAaH,EAAOG,EAAW,KAGzCI,EACCb,cAAA,QACEH,UAAWE,KAAUmJ,EAAA,GAAAa,YAAAb,EAAA,iBAAAc,OACDnJ,GAAWA,GAAMkJ,YAAAb,EAAC,iBAADc,OACjB1J,GAASA,GAAI4I,MAGjC,QAGV,IAEe3I,MA+DfA,EAAOoK,aAAe,CACpBrB,IAAK,M","file":"static/js/88.dfb5d6eb.chunk.js","sourcesContent":["// ** React Imports\nimport ReactDOM from 'react-dom'\nimport { useState, useEffect, useRef } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { sendMsg } from './store'\nimport { useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { MessageSquare, Menu, PhoneCall, Video, Search, MoreVertical, Mic, Image, Send } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  InputGroup,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroupText,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst ChatLog = props => {\n  // ** Props & Store\n  const { handleUser, handleUserSidebarRight, handleSidebar, store, userSidebarLeft } = props\n  const { userProfile, selectedUser } = store\n\n  // ** Refs & Dispatch\n  const chatArea = useRef(null)\n  const dispatch = useDispatch()\n\n  // ** State\n  const [msg, setMsg] = useState('')\n\n  // ** Scroll to chat bottom\n  const scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\n  }\n\n  // ** If user chat is not empty scrollToBottom\n  useEffect(() => {\n    const selectedUserLen = Object.keys(selectedUser).length\n\n    if (selectedUserLen) {\n      scrollToBottom()\n    }\n  }, [selectedUser])\n\n  // ** Formats chat data based on sender\n  const formattedChatData = () => {\n    let chatLog = []\n    if (selectedUser.chat) {\n      chatLog = selectedUser.chat.chat\n    }\n\n    const formattedChatLog = []\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    }\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        })\n      } else {\n        chatMessageSenderId = msg.senderId\n        formattedChatLog.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [\n            {\n              msg: msg.message,\n              time: msg.time\n            }\n          ]\n        }\n      }\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\n    })\n    return formattedChatLog\n  }\n\n  // ** Renders user chat\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('chat', {\n            'chat-left': item.senderId !== 11\n          })}\n        >\n          <div className='chat-avatar'>\n            <Avatar\n              imgWidth={36}\n              imgHeight={36}\n              className='box-shadow-1 cursor-pointer'\n              img={item.senderId === 11 ? userProfile.avatar : selectedUser.contact.avatar}\n            />\n          </div>\n\n          <div className='chat-body'>\n            {item.messages.map(chat => (\n              <div key={chat.msg} className='chat-content'>\n                <p>{chat.msg}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  // ** Opens right sidebar & handles its data\n  const handleAvatarClick = obj => {\n    handleUserSidebarRight()\n    handleUser(obj)\n  }\n\n  // ** On mobile screen open left sidebar on Start Conversation Click\n  const handleStartConversation = () => {\n    if (!Object.keys(selectedUser).length && !userSidebarLeft && window.innerWidth < 992) {\n      handleSidebar()\n    }\n  }\n\n  // ** Sends New Msg\n  const handleSendMsg = e => {\n    e.preventDefault()\n    if (msg.length) {\n      dispatch(sendMsg({ ...selectedUser, message: msg }))\n      setMsg('')\n    }\n  }\n\n  // ** ChatWrapper tag based on chat's length\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div'\n\n  return (\n    <div className='chat-app-window'>\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(selectedUser).length })}>\n        <div className='start-chat-icon mb-1'>\n          <MessageSquare />\n        </div>\n        <h4 className='sidebar-toggle start-chat-text' onClick={handleStartConversation}>\n          Start Conversation\n        </h4>\n      </div>\n      {Object.keys(selectedUser).length ? (\n        <div className={classnames('active-chat', { 'd-none': selectedUser === null })}>\n          <div className='chat-navbar'>\n            <header className='chat-header'>\n              <div className='d-flex align-items-center'>\n                <div className='sidebar-toggle d-block d-lg-none me-1' onClick={handleSidebar}>\n                  <Menu size={21} />\n                </div>\n                <Avatar\n                  imgHeight='36'\n                  imgWidth='36'\n                  img={selectedUser.contact.avatar}\n                  status={selectedUser.contact.status}\n                  className='avatar-border user-profile-toggle m-0 me-1'\n                  onClick={() => handleAvatarClick(selectedUser.contact)}\n                />\n                <h6 className='mb-0'>{selectedUser.contact.fullName}</h6>\n              </div>\n              <div className='d-flex align-items-center'>\n                <PhoneCall size={18} className='cursor-pointer d-sm-block d-none me-1' />\n                <Video size={18} className='cursor-pointer d-sm-block d-none me-1' />\n                <Search size={18} className='cursor-pointer d-sm-block d-none' />\n                <UncontrolledDropdown className='more-options-dropdown'>\n                  <DropdownToggle className='btn-icon' color='transparent' size='sm'>\n                    <MoreVertical size='18' />\n                  </DropdownToggle>\n                  <DropdownMenu end>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      View Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Mute Notifications\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Block Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Clear Chat\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Report\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </header>\n          </div>\n\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\n            {selectedUser.chat ? <div className='chats'>{renderChats()}</div> : null}\n          </ChatWrapper>\n\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n            <InputGroup className='input-group-merge me-1 form-send-message'>\n              <InputGroupText>\n                <Mic className='cursor-pointer' size={14} />\n              </InputGroupText>\n              <Input\n                value={msg}\n                onChange={e => setMsg(e.target.value)}\n                placeholder='Type your message or use speech to text'\n              />\n              <InputGroupText>\n                <Label className='attachment-icon mb-0' for='attach-doc'>\n                  <Image className='cursor-pointer text-secondary' size={14} />\n                  <input type='file' id='attach-doc' hidden />\n                </Label>\n              </InputGroupText>\n            </InputGroup>\n            <Button className='send' color='primary'>\n              <Send size={14} className='d-lg-none' />\n              <span className='d-none d-lg-block'>Send</span>\n            </Button>\n          </Form>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ChatLog\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { selectChat } from './store'\nimport { useDispatch } from 'react-redux'\n\n// ** Utils\nimport { formatDateToMonthShort, isObjEmpty } from '@utils'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Search, CheckSquare, Bell, User, Trash } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { CardText, InputGroup, InputGroupText, Badge, Input, Button, Label } from 'reactstrap'\n\nconst SidebarLeft = props => {\n  // ** Props & Store\n  const { store, sidebar, handleSidebar, userSidebarLeft, handleUserSidebarLeft } = props\n  const { chats, contacts, userProfile } = store\n\n  // ** Dispatch\n  const dispatch = useDispatch()\n\n  // ** State\n  const [query, setQuery] = useState('')\n  const [about, setAbout] = useState('')\n  const [active, setActive] = useState(0)\n  const [status, setStatus] = useState('online')\n  const [filteredChat, setFilteredChat] = useState([])\n  const [filteredContacts, setFilteredContacts] = useState([])\n\n  // ** Handles User Chat Click\n  const handleUserClick = id => {\n    dispatch(selectChat(id))\n    setActive(id)\n    if (sidebar === true) {\n      handleSidebar()\n    }\n  }\n\n  useEffect(() => {\n    if (!isObjEmpty(store.selectedUser)) {\n      if (store.selectedUser.chat) {\n        setActive(store.selectedUser.chat.id)\n      } else {\n        setActive(store.selectedUser.contact.id)\n      }\n    }\n  }, [])\n\n  // ** Renders Chat\n  const renderChats = () => {\n    if (chats && chats.length) {\n      if (query.length && !filteredChat.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredChat.length ? filteredChat : chats\n\n        return arrToMap.map(item => {\n          const time = formatDateToMonthShort(item.chat.lastMessage ? item.chat.lastMessage.time : new Date())\n\n          return (\n            <li\n              key={item.id}\n              onClick={() => handleUserClick(item.id)}\n              className={classnames({\n                active: active === item.id\n              })}\n            >\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' status={item.status} />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>\n                  {item.chat.lastMessage ? item.chat.lastMessage.message : chats[chats.length - 1].message}\n                </CardText>\n              </div>\n              <div className='chat-meta text-nowrap'>\n                <small className='float-end mb-25 chat-time ms-25'>{time}</small>\n                {item.chat.unseenMsgs >= 1 ? (\n                  <Badge className='float-end' color='danger' pill>\n                    {item.chat.unseenMsgs}\n                  </Badge>\n                ) : null}\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Renders Contact\n  const renderContacts = () => {\n    if (contacts && contacts.length) {\n      if (query.length && !filteredContacts.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredContacts.length ? filteredContacts : contacts\n        return arrToMap.map(item => {\n          return (\n            <li key={item.fullName} onClick={() => handleUserClick(item.id)}>\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>{item.about}</CardText>\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Handles Filter\n  const handleFilter = e => {\n    setQuery(e.target.value)\n    const searchFilterFunction = contact => contact.fullName.toLowerCase().includes(e.target.value.toLowerCase())\n    const filteredChatsArr = chats.filter(searchFilterFunction)\n    const filteredContactssArr = contacts.filter(searchFilterFunction)\n    setFilteredChat([...filteredChatsArr])\n    setFilteredContacts([...filteredContactssArr])\n  }\n\n  const renderAboutCount = () => {\n    if (userProfile && userProfile.about && userProfile.about.length && about.length === 0) {\n      return userProfile.about.length\n    } else {\n      return about.length\n    }\n  }\n\n  return store ? (\n    <div className='sidebar-left'>\n      <div className='sidebar'>\n        <div\n          className={classnames('chat-profile-sidebar', {\n            show: userSidebarLeft\n          })}\n        >\n          <header className='chat-profile-header'>\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\n              <X size={14} />\n            </div>\n            <div className='header-profile-sidebar'>\n              <Avatar className='box-shadow-1 avatar-border' img={userProfile.avatar} status={status} size='xl' />\n              <h4 className='chat-user-name'>{userProfile.fullName}</h4>\n              <span className='user-post'>{userProfile.role}</span>\n            </div>\n          </header>\n          <PerfectScrollbar className='profile-sidebar-area' options={{ wheelPropagation: false }}>\n            <h6 className='section-label mb-1'>About</h6>\n            <div className='about-user'>\n              <Input\n                rows='5'\n                type='textarea'\n                defaultValue={userProfile.about}\n                onChange={e => setAbout(e.target.value)}\n                className={classnames('char-textarea', {\n                  'text-danger': about && about.length > 120\n                })}\n              />\n              <small className='counter-value float-end'>\n                <span className='char-count'>{renderAboutCount()}</span> / 120\n              </small>\n            </div>\n            <h6 className='section-label mb-1 mt-3'>Status</h6>\n            <ul className='list-unstyled user-status'>\n              <li className='pb-1'>\n                <div className='form-check form-check-success'>\n                  <Input\n                    type='radio'\n                    label='Online'\n                    id='user-online'\n                    checked={status === 'online'}\n                    onChange={() => setStatus('online')}\n                  />\n                  <Label className='form-check-label' for='user-online'>\n                    Online\n                  </Label>\n                </div>\n              </li>\n              <li className='pb-1'>\n                <div className='form-check form-check-danger'>\n                  <Input\n                    type='radio'\n                    id='user-busy'\n                    label='Do Not Disturb'\n                    checked={status === 'busy'}\n                    onChange={() => setStatus('busy')}\n                  />\n                  <Label className='form-check-label' for='user-busy'>\n                    Busy\n                  </Label>\n                </div>\n              </li>\n              <li className='pb-1'>\n                <div className='form-check form-check-warning'>\n                  <Input\n                    type='radio'\n                    label='Away'\n                    id='user-away'\n                    checked={status === 'away'}\n                    onChange={() => setStatus('away')}\n                  />\n                  <Label className='form-check-label' for='user-away'>\n                    Away\n                  </Label>\n                </div>\n              </li>\n              <li className='pb-1'>\n                <div className='form-check form-check-secondary'>\n                  <Input\n                    type='radio'\n                    label='Offline'\n                    id='user-offline'\n                    checked={status === 'offline'}\n                    onChange={() => setStatus('offline')}\n                  />\n                  <Label className='form-check-label' for='user-offline'>\n                    Offline\n                  </Label>\n                </div>\n              </li>\n            </ul>\n            <h6 className='section-label mb-1 mt-2'>Settings</h6>\n            <ul className='list-unstyled'>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <CheckSquare className='me-75' size='18' />\n                  <span className='align-middle'>Two-step Verification</span>\n                </div>\n                <div className='form-switch'>\n                  <Input type='switch' id='verification' name='verification' defaultChecked />\n                </div>\n              </li>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <Bell className='me-75' size='18' />\n                  <span className='align-middle'>Notification</span>\n                </div>\n                <div className='form-switch'>\n                  <Input type='switch' id='notifications' name='notifications' />\n                </div>\n              </li>\n              <li className='d-flex align-items-center cursor-pointer mb-1'>\n                <User className='me-75' size='18' />\n                <span className='align-middle'>Invite Friends</span>\n              </li>\n              <li className='d-flex align-items-center cursor-pointer'>\n                <Trash className='me-75' size='18' />\n                <span className='align-middle'>Delete Account</span>\n              </li>\n            </ul>\n            <div className='mt-3'>\n              <Button color='primary'>Logout</Button>\n            </div>\n          </PerfectScrollbar>\n        </div>\n        <div\n          className={classnames('sidebar-content', {\n            show: sidebar === true\n          })}\n        >\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\n            <X size={14} />\n          </div>\n          <div className='chat-fixed-search'>\n            <div className='d-flex align-items-center w-100'>\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\n                {Object.keys(userProfile).length ? (\n                  <Avatar\n                    className='avatar-border'\n                    img={userProfile.avatar}\n                    status={status}\n                    imgHeight='42'\n                    imgWidth='42'\n                  />\n                ) : null}\n              </div>\n              <InputGroup className='input-group-merge ms-1 w-100'>\n                <InputGroupText className='round'>\n                  <Search className='text-muted' size={14} />\n                </InputGroupText>\n                <Input\n                  value={query}\n                  className='round'\n                  placeholder='Search or start a new chat'\n                  onChange={handleFilter}\n                />\n              </InputGroup>\n            </div>\n          </div>\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\n            <h4 className='chat-list-title'>Chats</h4>\n            <ul className='chat-users-list chat-list media-list'>{renderChats()}</ul>\n            <h4 className='chat-list-title'>Contacts</h4>\n            <ul className='chat-users-list contact-list media-list'>{renderContacts()}</ul>\n          </PerfectScrollbar>\n        </div>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default SidebarLeft\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Reactstrap Imports\nimport { X, Mail, PhoneCall, Clock, Tag, Star, Image, Trash, Slash } from 'react-feather'\n\nconst UserProfileSidebar = props => {\n  // ** Props\n  const { user, handleUserSidebarRight, userSidebarRight } = props\n\n  return (\n    <div className={classnames('user-profile-sidebar', { show: userSidebarRight === true })}>\n      <header className='user-profile-header'>\n        <span className='close-icon' onClick={handleUserSidebarRight}>\n          <X size={14} />\n        </span>\n        <div className='header-profile-sidebar'>\n          <Avatar\n            className='box-shadow-1 avatar-border'\n            size='xl'\n            status={user.status}\n            img={user.avatar}\n            imgHeight='70'\n            imgWidth='70'\n          />\n          <h4 className='chat-user-name'>{user.fullName}</h4>\n          <span className='user-post'>{user.role}</span>\n        </div>\n      </header>\n      <PerfectScrollbar className='user-profile-sidebar-area' options={{ wheelPropagation: false }}>\n        <h6 className='section-label mb-1'>About</h6>\n        <p>{user.about}</p>\n        <div className='personal-info'>\n          <h6 className='section-label mb-1 mt-3'>Personal Information</h6>\n          <ul className='list-unstyled'>\n            <li className='mb-1'>\n              <Mail className='me-75' size={17} />\n              <span className='align-middle'>lucifer@email.com</span>\n            </li>\n            <li className='mb-1'>\n              <PhoneCall className='me-50' size={17} />\n              <span className='align-middle'> +1(123) 456 - 7890</span>\n            </li>\n            <li>\n              <Clock className='me-50' size={17} />\n              <span className='align-middle'> Mon - Fri 10AM - 8PM</span>\n            </li>\n          </ul>\n        </div>\n        <div className='more-options'>\n          <h6 className='section-label mb-1 mt-3'>Options</h6>\n          <ul className='list-unstyled'>\n            <li className='cursor-pointer mb-1'>\n              <Tag className='me-50' size={17} />\n              <span className='align-middle'> Add Tag</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Star className='me-50' size={17} />\n              <span className='align-middle'> Important Contact</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Image className='me-50' size={17} />\n              <span className='align-middle'> Shared Media</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Trash className='me-50' size={17} />\n              <span className='align-middle'> Delete Contact</span>\n            </li>\n            <li className='cursor-pointer'>\n              <Slash className='me-75' size={17} />\n              <span className='align-middle'>Block Contact</span>\n            </li>\n          </ul>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default UserProfileSidebar\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Chat App Component Imports\nimport Chat from './Chat'\nimport Sidebar from './SidebarLeft'\nimport UserProfileSidebar from './UserProfileSidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserProfile, getChatContacts } from './store'\n\nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\n\nconst AppChat = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.chat)\n\n  // ** States\n  const [user, setUser] = useState({})\n  const [sidebar, setSidebar] = useState(false)\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\n\n  // ** Sidebar & overlay toggle functions\n  const handleSidebar = () => setSidebar(!sidebar)\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\n  const handleOverlayClick = () => {\n    setSidebar(false)\n    setUserSidebarRight(false)\n    setUserSidebarLeft(false)\n  }\n\n  // ** Set user function for Right Sidebar\n  const handleUser = obj => setUser(obj)\n\n  // ** Get data on Mount\n  useEffect(() => {\n    dispatch(getChatContacts())\n    dispatch(getUserProfile())\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        sidebar={sidebar}\n        handleSidebar={handleSidebar}\n        userSidebarLeft={userSidebarLeft}\n        handleUserSidebarLeft={handleUserSidebarLeft}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div\n              className={classnames('body-content-overlay', {\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\n              })}\n              onClick={handleOverlayClick}\n            ></div>\n            <Chat\n              store={store}\n              handleUser={handleUser}\n              handleSidebar={handleSidebar}\n              userSidebarLeft={userSidebarLeft}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n            <UserProfileSidebar\n              user={user}\n              userSidebarRight={userSidebarRight}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default AppChat\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n"],"sourceRoot":""}