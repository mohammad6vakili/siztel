{"version":3,"sources":["views/forms/form-elements/input/InputFile.js","views/forms/form-elements/input/InputBasic.js","views/forms/form-elements/input/InputSizes.js","views/forms/form-elements/input/InputStates.js","views/forms/form-elements/input/InputFloating.js","views/forms/form-elements/input/InputHorizontalSize.js","views/forms/form-elements/input/index.js","@core/components/breadcrumbs/index.js"],"names":["InputFile","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","CardBody","Row","Col","md","sm","Label","className","for","Input","type","id","name","multiple","InputBasic","xl","placeholder","disabled","FormText","readOnly","value","InputSizes","CardText","bsSize","InputState","valid","FormFeedback","invalid","InputFloating","htmlFor","size","Fragment","Breadcrumbs","title","data","InputHorizontalSize","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames"],"mappings":"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","file":"static/js/172.ef96332c.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label, Input, Row, Col } from 'reactstrap'\n\nconst InputFile = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Input File</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col md='6' sm='12'>\n            <Label className='form-label' for='inputFile'>\n              Simple File Input\n            </Label>\n            <Input type='file' id='inputFile' name='fileInput' />\n          </Col>\n          <Col md='6' sm='12'>\n            <Label className='form-label' for='exampleMultipleFileBrowser'>\n              Multiple files input\n            </Label>\n            <Input type='file' id='exampleMultipleFileBrowser' name='MultipleFiles' multiple />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default InputFile\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label, Input, FormText, Row, Col } from 'reactstrap'\n\nconst InputBasic = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic Inputs</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Basic Input\n            </Label>\n            <Input type='email' id='basicInput' placeholder='Enter Email' />\n          </Col>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='InputHelp'>\n              Input text with help\n            </Label>{' '}\n            <small className='text-muted'>\n              eg. <i>someone@example.com</i>\n            </small>\n            <Input type='email' id='InputHelp' />\n          </Col>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='disabledInput'>\n              Disabled Input\n            </Label>\n            <Input type='text' id='disabledInput' disabled />\n          </Col>\n          <Col xl='4' md='6' sm='12'>\n            <Label className='form-label' for='helperText'>\n              With Helper Text\n            </Label>\n            <Input type='text' id='helperText' placeholder='Name' />\n            <FormText className='text-muted'>Find helper text here for given textbox.</FormText>\n          </Col>\n          <Col xl='4' md='6' sm='12'>\n            <Label className='form-label' for='readonlyInput'>\n              Readonly input\n            </Label>\n            <Input type='text' id='readonlyInput' readOnly value=\"You can't update me :P\" />\n          </Col>\n          <Col xl='4' md='6' sm='12'>\n            <Label className='form-label' for='StaticInput'>\n              Readonly Static Text\n            </Label>\n            <p className='form-control-static' id='StaticInput'>\n              email@pixinvent.com\n            </p>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default InputBasic\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Input, Label, Row, Col } from 'reactstrap'\n\nconst InputSizes = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Sizing Options</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <CardText>\n          Use <code>bsSize=\"sm / lg\"</code> attribute with Input tag to change size of input.\n        </CardText>\n        <Row>\n          <Col sm='12' className='mb-1'>\n            <Label className='form-label' for='input-large'>\n              Large\n            </Label>\n            <Input type='text' id='input-large' bsSize='lg' placeholder='Large Input' />\n          </Col>\n          <Col sm='12' className='mb-1'>\n            <Label className='form-label' for='input-default'>\n              Default\n            </Label>\n            <Input type='text' id='input-default' placeholder='Default Input' />\n          </Col>\n          <Col sm='12' className='mb-1'>\n            <Label className='form-label' for='input-small'>\n              Small\n            </Label>\n            <Input type='text' id='input-small' bsSize='sm' placeholder='Small Input' />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default InputSizes\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Label, Input, FormFeedback, Row, Col } from 'reactstrap'\n\nconst InputState = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Input Validation State</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <CardText>\n          Use attribute <code>valid/invalid</code> with input tag to indicate input state.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12' className='mb-md-6 mb-1'>\n            <Label className='form-label' for='validState'>\n              Valid State\n            </Label>\n            <Input type='text' id='validState' name='validState' valid />\n            <FormFeedback valid>Sweet! That name is available.</FormFeedback>\n          </Col>\n          <Col md='6' sm='12'>\n            <Label className='form-label' for='invalidState'>\n              Invalid State\n            </Label>\n            <Input type='text' id='invalidState' name='invalidState' invalid />\n            <FormFeedback>Oh no! That name is already taken.</FormFeedback>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default InputState\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Input, Row, Col } from 'reactstrap'\n\nconst InputFloating = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Floating Label Inputs</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <CardText className='mb-3'>\n          For Floating Label Inputs, need to use <code>.form-floating</code> class & add attribute <code>disabled</code>{' '}\n          for disabled Floating Label Input.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <div className='form-floating'>\n              <Input type='text' id='floatingInput' placeholder='Label Placeholder' />\n              <label htmlFor='floatingInput'>Label Placeholder</label>\n            </div>\n          </Col>\n          <Col md='6' sm='12'>\n            <div className='form-floating'>\n              <Input type='text' id='squareInputDisabled' placeholder='Label Placeholder' disabled />\n              <label htmlFor='squareInputDisabled'>Label Placeholder</label>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default InputFloating\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardText, CardBody, Input, Label, Row, Col } from 'reactstrap'\n\nconst InputSizes = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Horizontal form label sizing</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Be sure to use <code>size=\"sm\"</code> or <code>size=\"lg\"</code> with your <code>&lt;Label&gt;</code> or{' '}\n          <code>&lt;legend&gt;</code> to correctly follow the size of input size.\n        </CardText>\n        <Row>\n          <Col sm='12'>\n            <Row className='mb-1'>\n              <Label sm='3' size='lg' className='form-label' for='input-large-horizontal'>\n                Large\n              </Label>\n              <Col sm='9'>\n                <Input type='text' id='input-large-horizontal' bsSize='lg' placeholder='Large Input' />\n              </Col>\n            </Row>\n            <Row className='mb-1'>\n              <Label sm='3' className='form-label' for='input-default-horizontal'>\n                Default\n              </Label>\n              <Col sm='9'>\n                <Input type='text' id='input-default-horizontal' placeholder='Default Input' />\n              </Col>\n            </Row>\n            <Row>\n              <Label sm='3' size='sm' className='form-label' for='input-small-horizontal'>\n                Small\n              </Label>\n              <Col sm='9'>\n                <Input type='text' id='input-small-horizontal' bsSize='sm' placeholder='Small Input' />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default InputSizes\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport InputFile from './InputFile'\nimport InputBasic from './InputBasic'\nimport InputSizes from './InputSizes'\nimport InputState from './InputStates'\nimport InputFloating from './InputFloating'\nimport InputHorizontalSize from './InputHorizontalSize'\n\nconst Input = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Input' data={[{ title: 'Form Elements' }, { title: 'Input' }]} />\n      <Row className='match-height'>\n        <Col sm='12'>\n          <InputBasic />\n        </Col>\n        <Col md='6' sm='12'>\n          <InputSizes />\n        </Col>\n        <Col md='6' sm='12'>\n          <InputHorizontalSize />\n        </Col>\n        <Col sm='12'>\n          <InputFloating />\n        </Col>\n        <Col sm='12'>\n          <InputFile />\n        </Col>\n        <Col sm='12'>\n          <InputState />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Input\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n"],"sourceRoot":""}