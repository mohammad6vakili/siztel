{"version":3,"sources":["views/ui-elements/page-layouts/LayoutEmpty.js","@core/components/breadcrumbs/index.js"],"names":["LayoutEmpty","_jsxs","Fragment","children","_jsx","Breadcrumbs","title","data","Alert","color","className","href","target","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","_objectSpread"],"mappings":"qJAAA,2CAgCeA,UAvBK,WAClB,OACEC,eAACC,WAAQ,CAAAC,SAAA,CACPC,cAACC,IAAW,CAACC,MAAM,eAAeC,KAAM,CAAC,CAAED,MAAO,WAAa,CAAEA,MAAO,mBACxEF,cAACI,IAAK,CAACC,MAAM,UAASN,SACpBF,eAAA,OAAKS,UAAU,aAAYP,SAAA,CACzBC,cAAA,QAAMM,UAAU,UAASP,SAAC,WAC1BF,eAAA,QAAAE,SAAA,CAAM,6FACuF,IAC3FC,cAAA,KACEO,KAAK,8GACLC,OAAO,SAAQT,SAChB,+BAEI,IAAI,8BAOrB,C,+FCmCeU,IA/CK,SAACC,GAEnB,IAAQP,EAAgBO,EAAhBP,KAAMD,EAAUQ,EAAVR,MAqBd,OACEF,cAAA,OAAKM,UAAU,qBAAoBP,SACjCC,cAAA,OAAKM,UAAU,iDAAgDP,SAC7DC,cAAA,OAAKM,UAAU,sBAAqBP,SAClCF,eAAA,OAAKS,UAAU,SAAQP,SAAA,CACpBG,EACCF,cAAA,MAAIM,UAAU,wCAAuCP,SAAEG,IAEvD,GAEFF,cAAA,OAAKM,UAAU,6DAA4DP,SACzEF,eAACc,IAAU,CAAAZ,SAAA,CACTC,cAACY,IAAc,CAACC,IAAI,KAAId,SACtBC,cAACc,IAAI,CAACC,GAAG,IAAGhB,SAAC,gBA/BpBI,EAAKa,KAAI,SAACC,EAAMC,GACrB,IAAMC,EAAUF,EAAKG,KAAON,IAAOhB,WAC7BuB,EAAalB,EAAKmB,OAAS,IAAMJ,EACvC,OACElB,cAACY,IAAc,CACbC,IAAI,KAEJU,QAASF,EACTf,UAAWkB,IAAW,CAAE,gBAAiBH,IAActB,SAEvDC,cAACmB,EAAOM,wBAAA,GAAMR,EAAKG,KAAO,CAAEL,GAAIE,EAAKG,MAAS,CAAC,GAAC,IAAArB,SAC7CkB,EAAKf,UALHgB,EASX,iBA0BJ,C","file":"static/js/186.04185ca6.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Reactstrap Imports\nimport { Alert } from 'reactstrap'\n\nconst LayoutEmpty = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Layout Empty' data={[{ title: 'Layouts' }, { title: 'Layout Empty' }]} />\n      <Alert color='primary'>\n        <div className='alert-body'>\n          <span className='fw-bold'>Info: </span>\n          <span>\n            This layout can be useful for getting started with empty content section. Please check the{' '}\n            <a\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\n              target='_blank'\n            >\n              Layout empty documentation\n            </a>{' '}\n            for more details.\n          </span>\n        </div>\n      </Alert>\n    </Fragment>\n  )\n}\n\nexport default LayoutEmpty\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n"],"sourceRoot":""}