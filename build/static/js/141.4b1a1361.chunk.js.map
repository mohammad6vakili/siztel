{"version":3,"sources":["views/components/autocomplete/AutoCompleteAjax.js","views/components/autocomplete/AutoCompleteBasic.js","views/components/autocomplete/AutoCompleteRender.js","views/components/autocomplete/AutoCompleteSections.js","views/components/autocomplete/AutoCompleteLimit.js","views/components/autocomplete/AutoCompleteSuggestions.js","views/components/autocomplete/AutoCompleteSourceCode.js","views/components/autocomplete/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["AutoCompleteAjax","suggestions","setSuggestions","useState","useEffect","axios","get","then","response","data","autoComplete","length","_jsx","AutoComplete","className","filterKey","suggestionLimit","placeholder","AutoCompleteBasic","title","AutoCompleteRender","name","img","img1","img2","img3","img4","img6","img5","customRender","suggestion","i","filteredData","activeSuggestion","onSuggestionItemClick","onSuggestionItemHover","_jsxs","onMouseEnter","indexOf","classnames","active","onClick","e","children","src","alt","height","width","AutoCompleteSections","groupTitle","grouped","filterHeaderKey","AutoCompleteSearchLimit","AutoCompleteDefaultSuggestions","defaultSuggestions","basicExample","sectionExample","ajaxExample","customRenderExample","defaultSuggestionsExample","searchLimitExample","Prism","highlightAll","Fragment","BreadCrumbs","Row","Col","xl","lg","Card","code","AutoCompleteSuggestions","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","CardSnippet","noBody","iconCode","isOpen","setIsOpen","IconCode","Code","size","CardBody","CardHeader","CardTitle","toggle","Collapse"],"mappings":"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","file":"static/js/141.4b1a1361.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteAjax = () => {\n  // ** State\n  const [suggestions, setSuggestions] = useState([])\n\n  useEffect(() => {\n    axios.get('/api/autocomplete/data').then(response => setSuggestions(response.data.autoComplete))\n  }, [])\n\n  return suggestions.length ? (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder='Search for any of the top 250 IMDB movies'\n    />\n  ) : null\n}\nexport default AutoCompleteAjax\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteBasic = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder=\"Type 'a'\"\n      suggestions={suggestions}\n      className='form-control'\n    />\n  )\n}\nexport default AutoCompleteBasic\n","// ** React Imports\nimport { useState } from 'react'\nimport classnames from 'classnames'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\n// ** Images\nimport img1 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\n\nconst AutoCompleteRender = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      name: 'Jake Shelton',\n      img: img1\n    },\n    {\n      name: 'Edith Baldwin',\n      img: img2\n    },\n    {\n      name: 'Jennifer Wolfe',\n      img: img3\n    },\n    {\n      name: 'Emily Washington',\n      img: img4\n    },\n    {\n      name: 'Heather Green',\n      img: img6\n    },\n    {\n      name: 'Brian Moore',\n      img: img5\n    }\n  ])\n\n  return (\n    <AutoComplete\n      filterKey='name'\n      placeholder=\"Type 'a'\"\n      className='form-control'\n      suggestions={suggestions}\n      customRender={(suggestion, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => (\n        <li\n          key={i}\n          onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\n          className={classnames('suggestion-item', {\n            active: filteredData.indexOf(suggestion) === activeSuggestion\n          })}\n          onClick={e => {\n            onSuggestionItemClick(null, e)\n          }}\n        >\n          <img src={suggestion.img} alt={suggestion.name} height='32' width='32' className='me-1' />\n          <span>{suggestion.name}</span>\n        </li>\n      )}\n    />\n  )\n}\nexport default AutoCompleteRender\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSections = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      groupTitle: '1970s',\n      data: [\n        {\n          title: 'C'\n        }\n      ]\n    },\n    {\n      groupTitle: '1980s',\n      data: [\n        {\n          title: 'C++'\n        },\n        {\n          title: 'Perl'\n        }\n      ]\n    },\n    {\n      groupTitle: '1990s',\n      data: [\n        {\n          title: 'Haskell'\n        },\n        {\n          title: 'Python'\n        },\n        {\n          title: 'Java'\n        },\n        {\n          title: 'Javascript'\n        },\n        {\n          title: 'PHP'\n        },\n        {\n          title: 'Ruby'\n        }\n      ]\n    },\n    {\n      groupTitle: '2000s',\n      data: [\n        {\n          title: 'C#'\n        },\n        {\n          title: 'Scala'\n        },\n        {\n          title: 'Clojure'\n        },\n        {\n          title: 'Go'\n        }\n      ]\n    },\n    {\n      groupTitle: '2010s',\n      data: [\n        {\n          title: 'Elm'\n        }\n      ]\n    }\n  ])\n\n  return (\n    <AutoComplete\n      grouped={true}\n      filterKey='title'\n      placeholder=\"Type 'c'\"\n      className='form-control'\n      suggestions={suggestions}\n      filterHeaderKey='groupTitle'\n    />\n  )\n}\nexport default AutoCompleteSections\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSearchLimit = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={2}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteSearchLimit\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteDefaultSuggestions = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder=\"Type 'a'\"\n      className='form-control'\n      suggestions={suggestions}\n      defaultSuggestions={true}\n    />\n  )\n}\nexport default AutoCompleteDefaultSuggestions\n","export const basicExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteBasic = () => {\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteBasic\n`}\n    </code>\n  </pre>\n)\n\nexport const sectionExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSections = () => {\n  const [suggestions] = useState([\n    {\n      groupTitle: '1970s',\n      data: [\n        {\n          title: 'C'\n        }\n      ]\n    },\n    {\n      groupTitle: '1980s',\n      data: [\n        {\n          title: 'C++'\n        },\n        {\n          title: 'Perl'\n        }\n      ]\n    },\n    {\n      groupTitle: '1990s',\n      data: [\n        {\n          title: 'Haskell'\n        },\n        {\n          title: 'Python'\n        },\n        {\n          title: 'Java'\n        },\n        {\n          title: 'Javascript'\n        },\n        {\n          title: 'PHP'\n        },\n        {\n          title: 'Ruby'\n        }\n      ]\n    },\n    {\n      groupTitle: '2000s',\n      data: [\n        {\n          title: 'C#'\n        },\n        {\n          title: 'Scala'\n        },\n        {\n          title: 'Clojure'\n        },\n        {\n          title: 'Go'\n        }\n      ]\n    },\n    {\n      groupTitle: '2010s',\n      data: [\n        {\n          title: 'Elm'\n        }\n      ]\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      filterHeaderKey='groupTitle'\n      grouped={true}\n      placeholder=\"Type 'c'\"\n    />\n  )\n}\nexport default AutoCompleteSections\n`}\n    </code>\n  </pre>\n)\n\nexport const ajaxExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteAjax = () => {\n  const [suggestions, setSuggestions] = useState([])\n\n  useEffect(() => {\n    axios\n      .get('/api/autocomplete/data')\n      .then(response => setSuggestions(response.data.autoComplete))\n  }, [])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder='Search for any of the top 250 IMDB movies'\n    />\n  )\n}\nexport default AutoCompleteAjax\n`}\n    </code>\n  </pre>\n)\n\nexport const customRenderExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport classnames from 'classnames'\nimport AutoComplete from '@components/autocomplete'\nimport img1 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\n\nconst AutoCompleteRender = () => {\n  const [suggestions] = useState([\n    {\n      name: 'Jake Shelton',\n      img: img1\n    },\n    {\n      name: 'Edith Baldwin',\n      img: img2\n    },\n    {\n      name: 'Jennifer Wolfe',\n      img: img3\n    },\n    {\n      name: 'Emily Washington',\n      img: img4\n    },\n    {\n      name: 'Heather Green',\n      img: img6\n    },\n    {\n      name: 'Brian Moore',\n      img: img5\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='name'\n      placeholder=\"Type 'a'\"\n      customRender={(\n        suggestion,\n        i,\n        filteredData,\n        activeSuggestion,\n        onSuggestionItemClick,\n        onSuggestionItemHover\n      ) => (\n        <li\n          className={classnames('suggestion-item', {\n            active: filteredData.indexOf(suggestion) === activeSuggestion\n          })}\n          key={i}\n          onMouseEnter={() =>\n            onSuggestionItemHover(filteredData.indexOf(suggestion))\n          }\n          onClick={e => {\n            onSuggestionItemClick(null, e)\n          }}\n        >\n          <img\n            src={suggestion.img}\n            alt={suggestion.name}\n            height='32'\n            width='32'\n            className='me-1'\n          />\n          <span>{suggestion.name}</span>\n        </li>\n      )}\n    />\n  )\n}\nexport default AutoCompleteRender\n`}\n    </code>\n  </pre>\n)\n\nexport const defaultSuggestionsExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteDefaultSuggestions = () => {\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      defaultSuggestions={true}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteDefaultSuggestions\n`}\n    </code>\n  </pre>\n)\n\nexport const searchLimitExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSearchLimit = () => {\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={2}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteSearchLimit\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport AutoCompleteAjax from './AutoCompleteAjax'\nimport AutoCompleteBasic from './AutoCompleteBasic'\nimport AutoCompleteRender from './AutoCompleteRender'\nimport AutoCompleteSections from './AutoCompleteSections'\nimport AutoCompleteSearchLimit from './AutoCompleteLimit'\nimport AutoCompleteSuggestions from './AutoCompleteSuggestions'\n\n// ** Source Code\nimport {\n  ajaxExample,\n  basicExample,\n  sectionExample,\n  searchLimitExample,\n  customRenderExample,\n  defaultSuggestionsExample\n} from './AutoCompleteSourceCode'\n\nconst AutoComplete = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Auto Complete' data={[{ title: 'Components' }, { title: 'Auto Complete' }]} />\n      <Row>\n        <Col xl='6' lg='12'>\n          <Card title='Basic' code={basicExample}>\n            <AutoCompleteBasic />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Sections' code={sectionExample}>\n            <AutoCompleteSections />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Ajax' code={ajaxExample}>\n            <AutoCompleteAjax />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Custom Render' code={customRenderExample}>\n            <AutoCompleteRender />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Default Suggestions' code={defaultSuggestionsExample}>\n            <AutoCompleteSuggestions />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Search Limit' code={searchLimitExample}>\n            <AutoCompleteSearchLimit />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default AutoComplete\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}