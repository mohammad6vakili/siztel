{"version":3,"sources":["views/components/badgePills/BadgePillGlow.js","views/components/badgePills/BadgeBlock.js","views/components/badgePills/BadgePillLink.js","views/components/badgePills/BadgePillLight.js","views/components/badgePills/BadgeNotification.js","views/components/badgePills/BadgePillContextual.js","views/components/badgePills/BadgePillSourceCode.js","views/components/badgePills/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgePillGlow","_jsxs","className","children","_jsx","Badge","color","pill","BadgePillBlock","BadgePillLink","href","Link","size","BadgePillLight","BadgePillNotification","Bell","BadgePillContextual","badgePillLight","badgePillGlow","badgePillContextual","badgePillNotification","badgePillLink","badgePillBlock","BadgePill","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","title","data","Row","Col","sm","Card","code","CardText","BadgeGlow","BadgeNotification","md","props","Breadcrumb","BreadcrumbItem","tag","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","CardSnippet","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Code","CardBody","CardHeader","CardTitle","onClick","toggle","Collapse"],"mappings":"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","file":"static/js/140.5a52a30a.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillGlow = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='primary' pill className='badge-glow'>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill className='badge-glow'>\n        Secondary\n      </Badge>\n      <Badge color='success' pill className='badge-glow'>\n        Success\n      </Badge>\n      <Badge color='danger' pill className='badge-glow'>\n        Danger\n      </Badge>\n      <Badge color='warning' pill className='badge-glow'>\n        Warning\n      </Badge>\n      <Badge color='info' pill className='badge-glow'>\n        Info\n      </Badge>\n      <Badge color='dark' pill className='badge-glow'>\n        Dark\n      </Badge>\n    </div>\n  )\n}\nexport default BadgePillGlow\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillBlock = () => {\n  return (\n    <Badge pill color='danger' className='d-block'>\n      <span>Block Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillBlock\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-feather'\n\nconst BadgePillLink = () => {\n  return (\n    <Badge color='primary' pill href='#'>\n      <Link size={12} />\n      <span className='align-middle ms-50'>Link Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillLink\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillLight = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='light-primary' pill>\n        Primary\n      </Badge>\n      <Badge color='light-secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='light-success' pill>\n        Success\n      </Badge>\n      <Badge color='light-danger' pill>\n        Danger\n      </Badge>\n      <Badge color='light-warning' pill>\n        Warning\n      </Badge>\n      <Badge color='light-info' pill>\n        Info\n      </Badge>\n    </div>\n  )\n}\nexport default BadgePillLight\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Icons Imports\nimport { Bell } from 'react-feather'\n\nconst BadgePillNotification = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <div className='position-relative'>\n        <Badge pill color='primary' className='badge-up'>\n          4\n        </Badge>\n        <Bell className='text-primary' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='danger' className='badge-up'>\n          5\n        </Badge>\n        <Bell className='text-danger' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='info' className='badge-up'>\n          6\n        </Badge>\n        <Bell className='text-info' size={22} />\n      </div>\n    </div>\n  )\n}\nexport default BadgePillNotification\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillContextual = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='primary' pill>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='success' pill>\n        Success\n      </Badge>\n      <Badge color='danger' pill>\n        Danger\n      </Badge>\n      <Badge color='warning' pill>\n        Warning\n      </Badge>\n      <Badge color='info' pill>\n        Info\n      </Badge>\n      <Badge color='dark' pill>\n        Dark\n      </Badge>\n    </div>\n  )\n}\nexport default BadgePillContextual\n","export const badgePillLight = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillLight = () => {\n  return (\n    <React.Fragment>\n      <Badge color='light-primary' pill>\n        Primary\n      </Badge>\n      <Badge color='light-secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='light-success' pill>\n        Success\n      </Badge>\n      <Badge color='light-danger' pill>\n      Danger\n      </Badge>\n      <Badge color='light-warning' pill>\n        Warning\n      </Badge>\n      <Badge color='light-info' pill>\n        Info\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgePillLight\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillGlow = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillGlow = () => {\n  return (\n    <React.Fragment>\n      <Badge color='primary' pill className='badge-glow'>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill className='badge-glow'>\n        Secondary\n      </Badge>\n      <Badge color='success' pill className='badge-glow'>\n        Success\n      </Badge>\n      <Badge color='danger' pill className='badge-glow'>\n        Danger\n      </Badge>\n      <Badge color='warning' pill className='badge-glow'>\n        Warning\n      </Badge>\n      <Badge color='info' pill className='badge-glow'>\n        Info\n      </Badge>\n      <Badge color='dark' pill className='badge-glow mb-1'>\n        Dark\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgePillGlow\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillContextual = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillContextual = () => {\n  return (\n    <React.Fragment>\n      <Badge color='primary' pill>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='success' pill>\n        Success\n      </Badge>\n      <Badge color='danger' pill>\n        Danger\n      </Badge>\n      <Badge color='warning' pill>\n        Warning\n      </Badge>\n      <Badge color='info' pill>\n        Info\n      </Badge>\n      <Badge color='dark' pill>\n        Dark\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgePillContextual\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillNotification = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\nimport { Bell } from 'react-feather'\n\nconst BadgePillNotification = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <div className='position-relative'>\n        <Badge pill color='primary' className='badge-up'>\n          4\n        </Badge>\n        <Bell className='text-primary' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='danger' className='badge-up'>\n          5\n        </Badge>\n        <Bell className='text-danger' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='info' className='badge-up'>\n          6\n        </Badge>\n        <Bell className='text-info' size={22} />\n      </div>\n    </div>\n  )\n}\nexport default BadgePillNotification\n\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillLink = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\nimport { Link } from 'react-feather'\n\nconst BadgePillLink = () => {\n  return (\n    <Badge color='primary' pill href='#'>\n      <Link size={12} />\n      <span className='align-middle ms-50'>Link Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillLink\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillBlock = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillBlock = () => {\n  return (\n    <Badge pill color='primary' className='d-block'>\n      <span>Block Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillBlock\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport BadgeGlow from './BadgePillGlow'\nimport BadgePillBlock from './BadgeBlock'\nimport BadgePillLink from './BadgePillLink'\nimport BadgePillLight from './BadgePillLight'\nimport BadgeNotification from './BadgeNotification'\nimport BadgePillContextual from './BadgePillContextual'\n\n// ** Source Code\nimport {\n  badgePillGlow,\n  badgePillLink,\n  badgePillBlock,\n  badgePillLight,\n  badgePillContextual,\n  badgePillNotification\n} from './BadgePillSourceCode'\n\nconst BadgePill = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Pill Badges' data={[{ title: 'Components' }, { title: 'Pill Badges' }]} />\n      <Row>\n        <Col sm='12'>\n          <Card title='Contextual' code={badgePillContextual}>\n            <CardText className='mb-0'>\n              Use prop <code>pill</code> with <code>Badge</code> tag to create badge pill.\n            </CardText>\n            <BadgePillContextual />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Glow' code={badgePillGlow}>\n            <CardText className='mb-0'>\n              Use class <code>.badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge.\n            </CardText>\n            <BadgeGlow />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Light' code={badgePillLight}>\n            <CardText className='mb-0'>\n              Use prop <code>pill</code> and <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create\n              a light badge pill.\n            </CardText>\n            <BadgePillLight />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Notifications' code={badgePillNotification}>\n            <CardText className='mb-0'>\n              Use <code>.badge-up</code> to set pill badge to higher than other text. So that it can work with\n              notifications also.\n            </CardText>\n            <BadgeNotification />\n          </Card>\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <Card title='Link' code={badgePillLink}>\n            <CardText>\n              Use <code>href=\"#\"</code> prop to use badge as a link.\n            </CardText>\n            <BadgePillLink />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Block' code={badgePillBlock}>\n            <CardText>\n              Use <code>.d-block</code> class to make badge display as block.\n            </CardText>\n            <BadgePillBlock />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default BadgePill\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}