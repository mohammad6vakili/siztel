{"version":3,"sources":["views/apps/email/MailCard.js","views/apps/email/MailDetails.js","views/apps/email/ComposePopup.js","views/apps/email/Mails.js","views/apps/email/Sidebar.js","views/apps/email/index.js","@core/components/avatar/index.js"],"names":["MailCard","props","mail","dispatch","selectMail","labelColors","updateMails","selectedMails","handleMailClick","handleMailReadUpdate","formatDateToMonthShort","_jsxs","onClick","id","className","classnames","isRead","children","_jsx","Avatar","img","from","avatar","Input","type","concat","name","onChange","e","stopPropagation","checked","includes","Label","for","emailIds","dataToUpdate","isStarred","Star","size","favorite","subject","attachments","length","Paperclip","arr","map","label","renderLabels","labels","time","htmlToString","message","MailDetails","openMail","setOpenMail","paginateMail","handleMailToTrash","handleFolderUpdate","handleLabelsUpdate","showReplies","setShowReplies","useState","renderMessage","obj","Card","CardHeader","imgHeight","imgWidth","UncontrolledDropdown","DropdownToggle","tag","caret","email","DropdownMenu","Table","borderless","to","formatDate","MoreVertical","end","DropdownItem","CornerUpLeft","CornerUpRight","Trash2","CardBody","dangerouslySetInnerHTML","__html","CardFooter","item","index","href","preventDefault","src","thumbnail","alt","fileName","width","handleGoBack","handleFolderClick","folder","show","undefined","Fragment","ChevronLeft","Folder","Edit2","Info","Trash","Tag","handleReadClick","Mail","hasPreviousMail","dir","emailId","hasNextMail","ChevronRight","PerfectScrollbar","options","wheelPropagation","Row","Col","sm","Badge","color","pill","replies","renderReplies","ComposePopup","composeOpen","toggleCompose","ccOpen","setCCOpen","bccOpen","setBCCOpen","selectOptions","value","img1","img2","img3","img4","img5","img6","SelectComponent","_ref","data","components","Option","toggleCC","toggleBCC","togglePopUp","Modal","scrollable","fade","keyboard","backdrop","container","isOpen","contentClassName","toggle","modalClassName","Minus","Maximize2","X","ModalBody","Form","onSubmit","Select","isMulti","isClearable","theme","selectThemeColors","classNamePrefix","placeholder","Editor","toolbarClassName","wrapperClassName","editorClassName","toolbar","inline","inDropdown","UncontrolledButtonDropdown","direction","Button","hidden","divider","Mails","query","store","setQuery","selectAllMail","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","personal","company","important","private","ids","arguments","bool","then","Menu","InputGroup","InputGroupText","Search","target","renderMails","currentMail","ComposePopUp","Sidebar","sidebarOpen","getMails","params","useParams","handleFolder","handleLabel","handleActiveItem","block","handleComposeClick","ListGroup","ListGroupItem","Link","action","active","Object","keys","emailsMeta","inbox","Send","draft","spam","EmailApp","setComposeOpen","useDispatch","useSelector","state","useEffect","q","forwardRef","ref","icon","status","badgeUp","content","initials","badgeText","badgeColor","imgClassName","contentStyles","rest","style","str","results","split","forEach","push","join","getInitials","height","defaultProps"],"mappings":"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","file":"static/js/88.f6090d5f.chunk.js","sourcesContent":["// ** Custom Components & Plugins\nimport classnames from 'classnames'\nimport { Star, Paperclip } from 'react-feather'\n\n// ** Custom Component Import\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { htmlToString } from '@utils'\n\n// ** Reactstrap Imports\nimport { Input, Label } from 'reactstrap'\n\nconst MailCard = props => {\n  // ** Props\n  const {\n    mail,\n    dispatch,\n    selectMail,\n    labelColors,\n    updateMails,\n    selectedMails,\n    handleMailClick,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** Function to render labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <span key={label} className={`bullet bullet-${labelColors[label]} bullet-sm mx-50`}></span>\n      ))\n    }\n  }\n\n  // ** Function to handle read & mail click\n  const onMailClick = () => {\n    handleMailClick(mail.id)\n    handleMailReadUpdate([mail.id], true)\n  }\n\n  return (\n    <li onClick={() => onMailClick(mail.id)} className={classnames('d-flex user-mail', { 'mail-read': mail.isRead })}>\n      <div className='mail-left pe-50'>\n        <Avatar img={mail.from.avatar} />\n        <div className='user-action'>\n          {/* <Input\n            label=''\n            type='checkbox'\n            checked={selectedMails.includes(mail.id)}\n            id={`${mail.from.name}-${mail.id}`}\n            onChange={e => e.stopPropagation()}\n            onClick={e => {\n              dispatch(selectMail(mail.id))\n              e.stopPropagation()\n            }}\n          /> */}\n          <div className='form-check'>\n            <Input\n              type='checkbox'\n              id={`${mail.from.name}-${mail.id}`}\n              onChange={e => e.stopPropagation()}\n              checked={selectedMails.includes(mail.id)}\n              onClick={e => {\n                dispatch(selectMail(mail.id))\n                e.stopPropagation()\n              }}\n            />\n            <Label onClick={e => e.stopPropagation()} for={`${mail.from.name}-${mail.id}`}></Label>\n          </div>\n          <div\n            className='email-favorite'\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(updateMails({ emailIds: [mail.id], dataToUpdate: { isStarred: !mail.isStarred } }))\n            }}\n          >\n            <Star\n              size={14}\n              className={classnames({\n                favorite: mail.isStarred\n              })}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='mail-body'>\n        <div className='mail-details'>\n          <div className='mail-items'>\n            <h5 className='mb-25'>{mail.from.name}</h5>\n            <span className='text-truncate'>{mail.subject}</span>\n          </div>\n          <div className='mail-meta-item'>\n            {mail.attachments && mail.attachments.length ? <Paperclip size={14} /> : null}\n            {renderLabels(mail.labels)}\n            <span className='mail-date'>{formatDateToMonthShort(mail.time)}</span>\n          </div>\n        </div>\n        <div className='mail-message'>\n          <p className='text-truncate mb-0'>{htmlToString(mail.message)}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default MailCard\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Utils\nimport { formatDate } from '@utils'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\nimport {\n  Star,\n  Tag,\n  Mail,\n  Info,\n  Trash,\n  Edit2,\n  Folder,\n  Trash2,\n  Paperclip,\n  ChevronLeft,\n  ChevronRight,\n  MoreVertical,\n  CornerUpLeft,\n  CornerUpRight\n} from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Badge,\n  Card,\n  Table,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst MailDetails = props => {\n  // ** Props\n  const {\n    mail,\n    openMail,\n    dispatch,\n    labelColors,\n    setOpenMail,\n    updateMails,\n    paginateMail,\n    handleMailToTrash,\n    handleFolderUpdate,\n    handleLabelsUpdate,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** States\n  const [showReplies, setShowReplies] = useState(false)\n\n  // ** Renders Labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <Badge key={label} color={`light-${labelColors[label]}`} className='me-50 text-capitalize' pill>\n          {label}\n        </Badge>\n      ))\n    }\n  }\n\n  // ** Renders Attachments\n  const renderAttachments = arr => {\n    return arr.map((item, index) => {\n      return (\n        <a\n          key={item.fileName}\n          href='/'\n          onClick={e => e.preventDefault()}\n          className={classnames({\n            'mb-50': index + 1 !== arr.length\n          })}\n        >\n          <img src={item.thumbnail} alt={item.fileName} width='16' className='me-50' />\n          <span className='text-muted fw-bolder align-text-top'>{item.fileName}</span>\n          <span className='text-muted font-small-2 ms-25'>{`(${item.size})`}</span>\n        </a>\n      )\n    })\n  }\n\n  // ** Renders Messages\n  const renderMessage = obj => {\n    return (\n      <Card>\n        <CardHeader className='email-detail-head'>\n          <div className='user-details d-flex justify-content-between align-items-center flex-wrap'>\n            <Avatar img={obj.from.avatar} className='me-75' imgHeight='48' imgWidth='48' />\n            <div className='mail-items'>\n              <h5 className='mb-0'>{obj.from.name}</h5>\n              <UncontrolledDropdown className='email-info-dropup'>\n                <DropdownToggle className='font-small-3 text-muted cursor-pointer' tag='span' caret>\n                  <span className='me-25'>{obj.from.email}</span>\n                </DropdownToggle>\n                <DropdownMenu>\n                  <Table className='font-small-3' size='sm' borderless>\n                    <tbody>\n                      <tr>\n                        <td className='text-end text-muted align-top'>From:</td>\n                        <td>{obj.from.email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-end text-muted align-top'>To:</td>\n                        <td>{obj.to[0].email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-end text-muted align-top'>Date:</td>\n                        <td>\n                          {formatDateToMonthShort(obj.time)}, {formatDateToMonthShort(obj.time, false)}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n          <div className='mail-meta-item d-flex align-items-center'>\n            <small className='mail-date-time text-muted'>{formatDate(obj.time)}</small>\n            <UncontrolledDropdown className='ms-50'>\n              <DropdownToggle className='cursor-pointer' tag='span'>\n                <MoreVertical size={14} />\n              </DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpLeft className='me-50' size={14} />\n                  Reply\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpRight className='me-50' size={14} />\n                  Forward\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <Trash2 className='me-50' size={14} />\n                  Delete\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        </CardHeader>\n        <CardBody className='mail-message-wrapper pt-2'>\n          <div className='mail-message' dangerouslySetInnerHTML={{ __html: obj.message }}></div>\n        </CardBody>\n        {obj.attachments && obj.attachments.length ? (\n          <CardFooter>\n            <div className='mail-attachments'>\n              <div className='d-flex align-items-center mb-1'>\n                <Paperclip size={16} />\n                <h5 className='fw-bolder text-body mb-0 ms-50'>{obj.attachments.length} Attachment</h5>\n              </div>\n              <div className='d-flex flex-column'>{renderAttachments(obj.attachments)}</div>\n            </div>\n          </CardFooter>\n        ) : null}\n      </Card>\n    )\n  }\n\n  // ** Renders Replies\n  const renderReplies = arr => {\n    if (arr.length && showReplies === true) {\n      return arr.map((obj, index) => (\n        <Row key={index}>\n          <Col sm='12'>{renderMessage(obj)}</Col>\n        </Row>\n      ))\n    }\n  }\n\n  // ** Handle show replies, go back, folder & read click functions\n  const handleShowReplies = e => {\n    e.preventDefault()\n    setShowReplies(true)\n  }\n\n  const handleGoBack = () => {\n    setOpenMail(false)\n  }\n\n  const handleFolderClick = (e, folder, id) => {\n    handleFolderUpdate(e, folder, [id])\n    handleGoBack()\n  }\n\n  const handleReadClick = () => {\n    handleMailReadUpdate([mail.id], false)\n    handleGoBack()\n  }\n\n  return (\n    <div\n      className={classnames('email-app-details', {\n        show: openMail\n      })}\n    >\n      {mail !== null && mail !== undefined ? (\n        <Fragment>\n          <div className='email-detail-header'>\n            <div className='email-header-left d-flex align-items-center'>\n              <span className='go-back me-1' onClick={handleGoBack}>\n                <ChevronLeft size={20} />\n              </span>\n              <h4 className='email-subject mb-0'>{mail.subject}</h4>\n            </div>\n            <div className='email-header-right ms-2 ps-1'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item me-1'>\n                  <span\n                    className='action-icon favorite'\n                    onClick={() => {\n                      dispatch(updateMails({ emailIds: [mail.id], dataToUpdate: { isStarred: !mail.isStarred } }))\n                    }}\n                  >\n                    <Star\n                      size={18}\n                      className={classnames({\n                        'text-warning fill-current': mail.isStarred\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'draft', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='me-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'spam', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='me-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'trash', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='me-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm me-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm me-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm me-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm me-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <span className='action-icon' onClick={handleReadClick}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <span\n                    className='action-icon'\n                    onClick={() => {\n                      handleMailToTrash([mail.id])\n                      handleGoBack()\n                    }}\n                  >\n                    <Trash size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item email-prev'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasPreviousMail\n                    })}\n                    onClick={() => {\n                      return mail.hasPreviousMail ? dispatch(paginateMail({ dir: 'next', emailId: mail.id })) : null\n                    }}\n                  >\n                    <ChevronLeft\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasPreviousMail\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item email-next'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasNextMail\n                    })}\n                    onClick={() => {\n                      return mail.hasNextMail ? dispatch(paginateMail({ dir: 'previous', emailId: mail.id })) : null\n                    }}\n                  >\n                    <ChevronRight\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasNextMail\n                      })}\n                    />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <PerfectScrollbar className='email-scroll-area' options={{ wheelPropagation: false }}>\n            <Row>\n              <Col sm='12'>\n                <div className='email-label'>{renderLabels(mail.labels)}</div>\n              </Col>\n            </Row>\n            {mail.replies && mail.replies.length ? (\n              <Fragment>\n                {showReplies === false ? (\n                  <Row className='mb-1'>\n                    <Col sm='12'>\n                      <a className='fw-bold' href='/' onClick={handleShowReplies}>\n                        View {mail.replies.length} Earlier Messages\n                      </a>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                {renderReplies(mail.replies)}\n              </Fragment>\n            ) : null}\n            <Row>\n              <Col sm='12'>{renderMessage(mail)}</Col>\n            </Row>\n            <Row>\n              <Col sm='12'>\n                <Card>\n                  <CardBody>\n                    <h5 className='mb-0'>\n                      Click here to{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Reply\n                      </a>{' '}\n                      or{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Forward\n                      </a>\n                    </h5>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </PerfectScrollbar>\n        </Fragment>\n      ) : null}\n    </div>\n  )\n}\n\nexport default MailDetails\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport Select, { components } from 'react-select'\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Form,\n  Label,\n  Input,\n  Modal,\n  Button,\n  ModalBody,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** User Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst ComposePopup = props => {\n  // ** Props & Custom Hooks\n  const { composeOpen, toggleCompose } = props\n\n  // ** States\n  const [ccOpen, setCCOpen] = useState(false)\n  const [bccOpen, setBCCOpen] = useState(false)\n\n  // ** User Select Options & Components\n  const selectOptions = [\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\n    { value: 'ross', label: 'Ross Geller', img: img3 },\n    { value: 'monica', label: 'Monica Geller', img: img4 },\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\n  ]\n\n  const SelectComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-50' size='sm' img={data.img} />\n          {data.label}\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** CC Toggle Function\n  const toggleCC = e => {\n    e.preventDefault()\n    setCCOpen(!ccOpen)\n  }\n\n  // ** BCC Toggle Function\n  const toggleBCC = e => {\n    e.preventDefault()\n    setBCCOpen(!bccOpen)\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleCompose()\n  }\n\n  return (\n    <Modal\n      scrollable\n      fade={false}\n      keyboard={false}\n      backdrop={false}\n      id='compose-mail'\n      container='.content-body'\n      className='modal-lg'\n      isOpen={composeOpen}\n      contentClassName='p-0'\n      toggle={toggleCompose}\n      modalClassName='modal-sticky'\n    >\n      <div className='modal-header'>\n        <h5 className='modal-title'>Compose Mail</h5>\n        <div className='modal-actions'>\n          <a href='/' className='text-body me-75' onClick={togglePopUp}>\n            <Minus size={14} />\n          </a>\n          <a href='/' className='text-body me-75' onClick={e => e.preventDefault()}>\n            <Maximize2 size={14} />\n          </a>\n          <a href='/' className='text-body' onClick={togglePopUp}>\n            <X size={14} />\n          </a>\n        </div>\n      </div>\n      <ModalBody className='flex-grow-1 p-0'>\n        <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n          <div className='compose-mail-form-field'>\n            <Label for='email-to' className='form-label'>\n              To:\n            </Label>\n            <div className='flex-grow-1'>\n              <Select\n                isMulti\n                id='email-to'\n                isClearable={false}\n                theme={selectThemeColors}\n                options={selectOptions}\n                className='react-select select-borderless'\n                classNamePrefix='select'\n                components={{ Option: SelectComponent }}\n              />\n            </div>\n            <div>\n              <a href='/' className='toggle-cc text-body me-1' onClick={toggleCC}>\n                Cc\n              </a>\n              <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                Bcc\n              </a>\n            </div>\n          </div>\n          {ccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-cc' className='form-label'>\n                Cc:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-cc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          {bccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-bcc' className='form-label'>\n                Bcc:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-bcc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          <div className='compose-mail-form-field'>\n            <Label for='email-subject' className='form-label'>\n              Subject:\n            </Label>\n            <Input id='email-subject' placeholder='Subject' />\n          </div>\n          <div id='message-editor'>\n            <Editor\n              placeholder='Message'\n              toolbarClassName='rounded-0'\n              wrapperClassName='toolbar-bottom'\n              editorClassName='rounded-0 border-0'\n              toolbar={{\n                options: ['inline', 'textAlign'],\n                inline: {\n                  inDropdown: false,\n                  options: ['bold', 'italic', 'underline', 'strikethrough']\n                }\n              }}\n            />\n          </div>\n          <div className='compose-footer-wrapper'>\n            <div className='btn-wrapper d-flex align-items-center'>\n              <UncontrolledButtonDropdown direction='up' className='me-1'>\n                <Button color='primary' onClick={toggleCompose}>\n                  Send\n                </Button>\n                <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n                <DropdownMenu end>\n                  <DropdownItem href='/' tag='a' onClick={togglePopUp}>\n                    Schedule Send\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n              <div className='email-attachement'>\n                <Label className='mb-0' for='attach-email-item'>\n                  <Paperclip className='cursor-pointer ms-50' size={18} />\n                  <input type='file' name='attach-email-item' id='attach-email-item' hidden />\n                </Label>\n              </div>\n            </div>\n            <div className='footer-action d-flex align-items-center'>\n              <UncontrolledDropdown className='me-50' direction='up'>\n                <DropdownToggle tag='span'>\n                  <MoreVertical className='cursor-pointer' size={18} />\n                </DropdownToggle>\n                <DropdownMenu end>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Add Label\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Plain text mode\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Print\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Check Spelling\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <Trash className='cursor-pointer' size={18} onClick={toggleCompose} />\n            </div>\n          </div>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ComposePopup\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Mail Components Imports\nimport MailCard from './MailCard'\nimport MailDetails from './MailDetails'\nimport ComposePopUp from './ComposePopup'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Menu, Search, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Input,\n  Label,\n  InputGroup,\n  DropdownMenu,\n  DropdownItem,\n  InputGroupText,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Mails = props => {\n  // ** Props\n  const {\n    query,\n    store,\n    openMail,\n    setQuery,\n    dispatch,\n    selectMail,\n    composeOpen,\n    updateMails,\n    setOpenMail,\n    paginateMail,\n    selectAllMail,\n    toggleCompose,\n    setSidebarOpen,\n    updateMailLabel,\n    resetSelectedMail,\n    selectCurrentMail\n  } = props\n\n  const { mails, selectedMails } = store\n\n  // ** States\n\n  // ** Variables\n  const labelColors = {\n    personal: 'success',\n    company: 'primary',\n    important: 'warning',\n    private: 'danger'\n  }\n\n  // ** Handles Update Functions\n  const handleMailClick = id => {\n    dispatch(selectCurrentMail(id))\n    setOpenMail(true)\n  }\n\n  // ** Handles SelectAll\n  const handleSelectAll = e => {\n    dispatch(selectAllMail(e.target.checked))\n  }\n\n  /*eslint-disable */\n\n  // ** Handles Folder Update\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMails({ emailIds: ids, dataToUpdate: { folder } }))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Label Update\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMailLabel({ emailIds: ids, label }))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Mail Read Update\n  const handleMailReadUpdate = (arr, bool) => {\n    dispatch(updateMails({ emailIds: arr, dataToUpdate: { isRead: bool } })).then(() => dispatch(resetSelectedMail()))\n    dispatch(selectAllMail(false))\n  }\n\n  // ** Handles Move to Trash\n  const handleMailToTrash = ids => {\n    dispatch(updateMails({ emailIds: ids, dataToUpdate: { folder: 'trash' } }))\n    dispatch(resetSelectedMail())\n  }\n  /*eslint-enable */\n\n  // ** Renders Mail\n  const renderMails = () => {\n    if (mails.length) {\n      return mails.map((mail, index) => {\n        return (\n          <MailCard\n            mail={mail}\n            key={index}\n            dispatch={dispatch}\n            selectMail={selectMail}\n            updateMails={updateMails}\n            labelColors={labelColors}\n            selectedMails={selectedMails}\n            handleMailClick={handleMailClick}\n            handleMailReadUpdate={handleMailReadUpdate}\n            formatDateToMonthShort={formatDateToMonthShort}\n          />\n        )\n      })\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='email-app-list'>\n        <div className='app-fixed-search d-flex align-items-center'>\n          <div className='sidebar-toggle d-block d-lg-none ms-1' onClick={() => setSidebarOpen(true)}>\n            <Menu size='21' />\n          </div>\n          <div className='d-flex align-content-center justify-content-between w-100'>\n            <InputGroup className='input-group-merge'>\n              <InputGroupText>\n                <Search className='text-muted' size={14} />\n              </InputGroupText>\n              <Input\n                id='email-search'\n                placeholder='Search email'\n                value={query}\n                onChange={e => setQuery(e.target.value)}\n              />\n            </InputGroup>\n          </div>\n        </div>\n        <div className='app-action'>\n          <div className='action-left form-check'>\n            <Input\n              type='checkbox'\n              id='select-all'\n              onChange={handleSelectAll}\n              checked={selectedMails.length && selectedMails.length === mails.length}\n            />\n            <Label className='form-check-label fw-bolder ps-25 mb-0' for='select-all'>\n              Select All\n            </Label>\n          </div>\n          {selectedMails.length ? (\n            <div className='action-right'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'draft')}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='me-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'spam')}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='me-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'trash')}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='me-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm me-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm me-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm me-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm me-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <span className='action-icon' onClick={() => handleMailReadUpdate(selectedMails, false)}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item'>\n                  <span className='action-icon' onClick={() => handleMailToTrash(selectedMails)}>\n                    <Trash size={18} />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          ) : null}\n        </div>\n\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\n          {mails.length ? (\n            <ul className='email-media-list'>{renderMails()}</ul>\n          ) : (\n            <div className='no-results d-block'>\n              <h5>No Items Found</h5>\n            </div>\n          )}\n        </PerfectScrollbar>\n      </div>\n      <MailDetails\n        openMail={openMail}\n        dispatch={dispatch}\n        mail={store.currentMail}\n        labelColors={labelColors}\n        setOpenMail={setOpenMail}\n        updateMails={updateMails}\n        paginateMail={paginateMail}\n        updateMailLabel={updateMailLabel}\n        handleMailToTrash={handleMailToTrash}\n        handleFolderUpdate={handleFolderUpdate}\n        handleLabelsUpdate={handleLabelsUpdate}\n        handleMailReadUpdate={handleMailReadUpdate}\n        formatDateToMonthShort={formatDateToMonthShort}\n      />\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\n    </Fragment>\n  )\n}\n\nexport default Mails\n","// ** React Imports\nimport { Link, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Mail, Send, Edit2, Star, Info, Trash } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Button, ListGroup, ListGroupItem, Badge } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const { store, sidebarOpen, toggleCompose, dispatch, getMails, resetSelectedMail, setSidebarOpen, setOpenMail } =\n    props\n\n  // ** Vars\n  const params = useParams()\n\n  // ** Functions To Handle Folder, Label & Compose\n  const handleFolder = folder => {\n    setOpenMail(false)\n    dispatch(getMails({ ...store.params, folder }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleLabel = label => {\n    setOpenMail(false)\n    dispatch(getMails({ ...store.params, label }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleComposeClick = () => {\n    toggleCompose()\n    setSidebarOpen(false)\n  }\n\n  // ** Functions To Active List Item\n  const handleActiveItem = value => {\n    if ((params.folder && params.folder === value) || (params.label && params.label === value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div\n      className={classnames('sidebar-left', {\n        show: sidebarOpen\n      })}\n    >\n      <div className='sidebar'>\n        <div className='sidebar-content email-app-sidebar'>\n          <div className='email-app-menu'>\n            <div className='form-group-compose text-center compose-btn'>\n              <Button className='compose-email' color='primary' block onClick={handleComposeClick}>\n                Compose\n              </Button>\n            </div>\n            <PerfectScrollbar className='sidebar-menu-list' options={{ wheelPropagation: false }}>\n              <ListGroup tag='div' className='list-group-messages'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/inbox'\n                  onClick={() => handleFolder('inbox')}\n                  action\n                  active={!Object.keys(params).length || handleActiveItem('inbox')}\n                >\n                  <Mail size={18} className='me-75' />\n                  <span className='align-middle'>Inbox</span>\n                  {store.emailsMeta.inbox ? (\n                    <Badge className='float-end' color='light-primary' pill>\n                      {store.emailsMeta.inbox}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/sent'\n                  onClick={() => handleFolder('sent')}\n                  action\n                  active={handleActiveItem('sent')}\n                >\n                  <Send size={18} className='me-75' />\n                  <span className='align-middle'>Sent</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/draft'\n                  onClick={() => handleFolder('draft')}\n                  action\n                  active={handleActiveItem('draft')}\n                >\n                  <Edit2 size={18} className='me-75' />\n                  <span className='align-middle'>Draft</span>\n                  {store.emailsMeta.draft ? (\n                    <Badge className='float-end' color='light-warning' pill>\n                      {store.emailsMeta.draft}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/starred'\n                  onClick={() => handleFolder('starred')}\n                  action\n                  active={handleActiveItem('starred')}\n                >\n                  <Star size={18} className='me-75' />\n                  <span className='align-middle'>Starred</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/spam'\n                  onClick={() => handleFolder('spam')}\n                  action\n                  active={handleActiveItem('spam')}\n                >\n                  <Info size={18} className='me-75' />\n                  <span className='align-middle'>Spam</span>\n                  {store.emailsMeta.spam ? (\n                    <Badge className='float-end' color='light-danger' pill>\n                      {store.emailsMeta.spam}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/trash'\n                  onClick={() => handleFolder('trash')}\n                  action\n                  active={handleActiveItem('trash')}\n                >\n                  <Trash size={18} className='me-75' />\n                  <span className='align-middle'>Trash</span>\n                </ListGroupItem>\n              </ListGroup>\n              <h6 className='section-label mt-3 mb-1 px-2'>Labels</h6>\n              <ListGroup tag='div' className='list-group-labels'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/personal'\n                  onClick={() => handleLabel('personal')}\n                  active={handleActiveItem('personal')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-success me-1'></span>\n                  Personal\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/company'\n                  onClick={() => handleLabel('company')}\n                  active={handleActiveItem('company')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-primary me-1'></span>\n                  Company\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/important'\n                  onClick={() => handleLabel('important')}\n                  active={handleActiveItem('important')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-warning me-1'></span>\n                  Important\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/private'\n                  onClick={() => handleLabel('private')}\n                  active={handleActiveItem('private')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-danger me-1'></span>\n                  Private\n                </ListGroupItem>\n              </ListGroup>\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","// ** React Imports\nimport { useParams } from 'react-router-dom'\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Email App Component Imports\nimport Mails from './Mails'\nimport Sidebar from './Sidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getMails,\n  selectMail,\n  updateMails,\n  paginateMail,\n  selectAllMail,\n  updateMailLabel,\n  resetSelectedMail,\n  selectCurrentMail\n} from './store'\n\n// ** Styles\nimport '@styles/react/apps/app-email.scss'\n\nconst EmailApp = () => {\n  // ** States\n  const [query, setQuery] = useState('')\n  const [openMail, setOpenMail] = useState(false)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [composeOpen, setComposeOpen] = useState(false)\n\n  // ** Toggle Compose Function\n  const toggleCompose = () => setComposeOpen(!composeOpen)\n\n  // ** Store Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.email)\n\n  // ** Vars\n  const params = useParams()\n\n  // ** UseEffect: GET initial data on Mount\n  useEffect(() => {\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\n  }, [query, params.folder, params.label])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        dispatch={dispatch}\n        getMails={getMails}\n        setOpenMail={setOpenMail}\n        sidebarOpen={sidebarOpen}\n        toggleCompose={toggleCompose}\n        setSidebarOpen={setSidebarOpen}\n        resetSelectedMail={resetSelectedMail}\n      />\n      <div className='content-right'>\n        <div className='content-body'>\n          <div\n            className={classnames('body-content-overlay', {\n              show: sidebarOpen\n            })}\n            onClick={() => setSidebarOpen(false)}\n          ></div>\n          <Mails\n            store={store}\n            query={query}\n            setQuery={setQuery}\n            dispatch={dispatch}\n            getMails={getMails}\n            openMail={openMail}\n            selectMail={selectMail}\n            setOpenMail={setOpenMail}\n            updateMails={updateMails}\n            composeOpen={composeOpen}\n            paginateMail={paginateMail}\n            selectAllMail={selectAllMail}\n            toggleCompose={toggleCompose}\n            setSidebarOpen={setSidebarOpen}\n            updateMailLabel={updateMailLabel}\n            selectCurrentMail={selectCurrentMail}\n            resetSelectedMail={resetSelectedMail}\n          />\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EmailApp\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n"],"sourceRoot":""}