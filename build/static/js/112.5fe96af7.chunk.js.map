{"version":3,"sources":["views/pages/pricing/PricingFaqs.js","views/pages/pricing/PricingTrial.js","views/pages/pricing/PricingHeader.js","views/pages/pricing/index.js","assets/images/illustration/pricing-Illustration.svg","views/pages/pricing/PricingCards.js"],"names":["PricingFaqs","_ref","data","_jsxs","className","children","_jsx","Row","Col","sm","lg","size","offset","UncontrolledAccordion","map","r","index","AccordionItem","AccordionHeader","tag","targetId","String","question","AccordionBody","accordionId","ans","PricingTrial","Button","color","src","trialSvg","alt","style","transform","PricingHeader","duration","setDuration","Input","id","type","checked","onChange","e","target","Pricing","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","faq","setFaq","_useState5","_useState6","useEffect","axios","get","then","res","dataArr","faqArr","Object","entries","forEach","_ref2","key","val","push","concat","Fragment","PricingCards","bordered","fullWidth","cols","colsProps","md","xs","_objectSpread","classnames","item","monthlyPrice","yearlyPlan","perMonth","yearlyPrice","totalAnnual","imgClasses","title","Card","_defineProperty","border","popular","toLowerCase","CardBody","Badge","pill","img","CardText","subtitle","ListGroup","planBenefits","benefit","i","ListGroupItem","block","outline"],"mappings":"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","file":"static/js/112.5fe96af7.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Row, Col, AccordionBody, AccordionItem, AccordionHeader, UncontrolledAccordion } from 'reactstrap'\n\nconst PricingFaqs = ({ data }) => {\n  return (\n    <div className='pricing-faq'>\n      <h3 className='text-center'>FAQ's</h3>\n      <p className='text-center mb-0'>Let us help answer the most common questions.</p>\n      <Row className='mt-75 mb-2'>\n        <Col className='mx-auto' sm='12' lg={{ size: 10, offset: 2 }}>\n          <UncontrolledAccordion className='accordion-margin mt-2'>\n            {data.map((r, index) => {\n              return (\n                <AccordionItem key={index + 1}>\n                  <AccordionHeader tag='h2' targetId={String(index + 1)}>\n                    {r.question}\n                  </AccordionHeader>\n                  <AccordionBody accordionId={String(index + 1)}>{r.ans}</AccordionBody>\n                </AccordionItem>\n              )\n            })}\n          </UncontrolledAccordion>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PricingFaqs\n","// ** Reactstrap Imports\nimport { Row, Col, Button } from 'reactstrap'\n\n// ** Images\nimport trialSvg from '@src/assets/images/illustration/pricing-Illustration.svg'\n\nconst PricingTrial = () => {\n  return (\n    <div className='pricing-free-trial'>\n      <Row>\n        <Col className='mx-auto' lg={{ size: 10, offset: 3 }} sm='12'>\n          <div className='pricing-trial-content d-flex justify-content-between'>\n            <div className='text-center text-md-start mt-3'>\n              <h3 className='text-primary'>Still not convinced? Start with a 14-day FREE trial!</h3>\n              <h5>You will get full access to with all the features for 14 days.</h5>\n              <div className='mt-2 mt-lg-3'>\n                <Button color='primary'>Start 14-day FREE trial</Button>\n              </div>\n            </div>\n            <img\n              className='pricing-trial-img img-fluid'\n              src={trialSvg}\n              alt='trial svg'\n              style={{\n                transform: 'scaleX(1)'\n              }}\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PricingTrial\n","// ** Reactstrap Imports\nimport { Input } from 'reactstrap'\n\nconst PricingHeader = ({ duration, setDuration }) => {\n  const onChange = e => {\n    if (e.target.checked) {\n      setDuration('yearly')\n    } else {\n      setDuration('monthly')\n    }\n  }\n\n  return (\n    <div className='text-center'>\n      <h1 className='mt-5'>Pricing Plans</h1>\n      <p className='mb-2 pb-75'>\n        All plans include 40+ advanced tools and features to boost your product. Choose the best plan to fit your needs.\n      </p>\n      <div className='d-flex align-items-center justify-content-center mb-5 pb-50'>\n        <h6 className='me-50 mb-0'>Monthly</h6>\n        <div className='form-switch'>\n          <Input id='plan-switch' type='switch' checked={duration === 'yearly'} onChange={onChange} />\n        </div>\n        <h6 className='ms-50 mb-0'>Annually</h6>\n      </div>\n    </div>\n  )\n}\n\nexport default PricingHeader\n","// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Demo Components\nimport PricingFaqs from './PricingFaqs'\nimport PricingCards from './PricingCards'\nimport PricingTrial from './PricingTrial'\nimport PricingHeader from './PricingHeader'\n\n// ** Styles\nimport '@styles/base/pages/page-pricing.scss'\n\nconst Pricing = () => {\n  // ** States\n  const [data, setData] = useState(null),\n    [faq, setFaq] = useState(null),\n    [duration, setDuration] = useState('monthly')\n\n  useEffect(() => {\n    axios.get('/pricing/data').then(res => {\n      const dataArr = [],\n        faqArr = []\n\n      Object.entries(res.data).forEach(([key, val]) => {\n        if (key !== 'qandA') {\n          dataArr.push(val)\n          setData([...dataArr])\n        } else {\n          faqArr.push(val)\n          setFaq(faqArr[0])\n        }\n      })\n    })\n  }, [])\n\n  return (\n    <div id='pricing-table'>\n      <PricingHeader duration={duration} setDuration={setDuration} />\n      {data !== null && faq !== null ? (\n        <Fragment>\n          <PricingCards data={data} duration={duration} />\n          <PricingTrial />\n          <PricingFaqs data={faq} />\n        </Fragment>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Pricing\n","export default __webpack_public_path__ + \"static/media/pricing-Illustration.b00baee8.svg\";","// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, CardText, Badge, ListGroup, ListGroupItem, Button } from 'reactstrap'\n\nconst PricingCards = ({ data, duration, bordered, fullWidth, cols }) => {\n  const colsProps = cols ? cols : { md: 4, xs: 12 }\n\n  const renderPricingCards = () => {\n    return data.map((item, index) => {\n      const monthlyPrice = duration === 'yearly' ? item.yearlyPlan.perMonth : item.monthlyPrice,\n        yearlyPrice = duration === 'yearly' ? item.yearlyPlan.totalAnnual : item.monthlyPrice,\n        imgClasses = item.title === 'Basic' ? 'mb-2 mt-5' : item.title === 'Standard' ? 'mb-1' : 'mb-2'\n\n      return (\n        <Col key={index} {...colsProps}>\n          <Card\n            className={classnames('text-center', {\n              border: bordered,\n              'shadow-none': bordered,\n              popular: item.popular === true,\n              'border-primary': bordered && item.popular === true,\n              [`${item.title.toLowerCase()}-pricing`]: item.title\n            })}\n          >\n            <CardBody>\n              {item.popular === true ? (\n                <div className='pricing-badge text-end'>\n                  <Badge color='light-primary' pill>\n                    Popular\n                  </Badge>\n                </div>\n              ) : null}\n              <img className={imgClasses} src={item.img} alt='pricing svg' />\n              <h3>{item.title}</h3>\n              <CardText>{item.subtitle}</CardText>\n              <div className='annual-plan'>\n                <div className='plan-price mt-2'>\n                  <sup className='font-medium-1 fw-bold text-primary me-25'>$</sup>\n                  <span className={`pricing-${item.title.toLowerCase()}-value fw-bolder text-primary`}>\n                    {monthlyPrice}\n                  </span>\n                  <span className='pricing-duration text-body font-medium-1 fw-bold ms-25'>/month</span>\n                </div>\n                {item.title !== 'Basic' && duration === 'yearly' ? (\n                  <small className='annual-pricing text-muted'>USD {yearlyPrice} / year</small>\n                ) : null}\n              </div>\n              <ListGroup tag='ul' className='list-group-circle text-start mb-2'>\n                {item.planBenefits.map((benefit, i) => (\n                  <ListGroupItem key={i} tag='li'>\n                    {benefit}\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n              <Button block outline={item.title !== 'Standard'} color={item.title === 'Basic' ? 'success' : 'primary'}>\n                {item.title === 'Basic' ? 'Your current plan' : 'Upgrade'}\n              </Button>\n            </CardBody>\n          </Card>\n        </Col>\n      )\n    })\n  }\n\n  const defaultCols = {\n    sm: { offset: 2, size: 10 },\n    lg: { offset: 2, size: 10 }\n  }\n\n  return (\n    <Row className='pricing-card'>\n      <Col {...(!fullWidth ? defaultCols : {})} className={classnames({ 'mx-auto': !fullWidth })}>\n        <Row>{renderPricingCards()}</Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PricingCards\n"],"sourceRoot":""}