{"version":3,"sources":["views/ui-elements/cards/statistics/StatsCard.js","@core/components/widgets/stats/StatsWithLineChart.js","@core/components/widgets/stats/ChartOptions.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","@core/components/widgets/stats/StatsWithAreaChart.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/OrdersReceived.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js","views/ui-elements/cards/statistics/RevenueGenerated.js","views/ui-elements/cards/statistics/SubscribersGained.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/avatar/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["StatsCard","_ref","cols","data","title","subtitle","color","icon","_jsx","TrendingUp","size","User","Box","DollarSign","_jsxs","Card","className","children","CardHeader","CardTitle","tag","CardText","CardBody","Row","map","item","index","colMargin","Object","keys","margin","Col","_objectSpread","classnames","_defineProperty","concat","length","Avatar","StatsWithLineChart","stats","statTitle","series","options","type","height","rest","_objectWithoutProperties","_excluded","Chart","defaultProps","chart","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","Newsletter","warning","_useState","useState","_useState2","_slicedToArray","setData","useEffect","axios","get","then","res","id","Mail","SiteTraffic","Monitor","ActiveUsers","success","UserCheck","StatsWithAreaChart","props","QuarterlySales","danger","ShoppingCart","analyticsData","sales","OrdersReceived","kFormatter","Package","orders","TinyChartStats","OrdersBarChart","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","ProfitLineChart","info","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize","RevenueGenerated","CreditCard","revenue","SubscribersGained","Users","subscribers","StatsVertical","StatisticsCards","context","useContext","ThemeColors","Fragment","Breadcrumbs","lg","xs","main","sm","md","xl","Eye","MessageSquare","ShoppingBag","Heart","Award","Truck","StatsHorizontal","Cpu","Server","Activity","AlertOctagon","QuaterlySales","BreadCrumbs","Breadcrumb","BreadcrumbItem","Link","to","Wrapper","link","isLastItem","active","forwardRef","ref","_classnames","_classnames3","img","status","badgeUp","content","Tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","undefined","str","results","split","forEach","e","push","join","getInitials","Badge","pill","src","alt","renderStats","statsMargin"],"mappings":"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","file":"static/js/113.3b73f52a.chunk.js","sourcesContent":["// ** Third Party Components\nimport classnames from 'classnames'\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst StatsCard = ({ cols }) => {\n  const data = [\n    {\n      title: '230k',\n      subtitle: 'Sales',\n      color: 'light-primary',\n      icon: <TrendingUp size={24} />\n    },\n    {\n      title: '8.549k',\n      subtitle: 'Customers',\n      color: 'light-info',\n      icon: <User size={24} />\n    },\n    {\n      title: '1.423k',\n      subtitle: 'Products',\n      color: 'light-danger',\n      icon: <Box size={24} />\n    },\n    {\n      title: '$9745',\n      subtitle: 'Revenue',\n      color: 'light-success',\n      icon: <DollarSign size={24} />\n    }\n  ]\n\n  const renderData = () => {\n    return data.map((item, index) => {\n      const colMargin = Object.keys(cols)\n      const margin = index === 2 ? 'sm' : colMargin[0]\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h4 className='fw-bolder mb-0'>{item.title}</h4>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText>\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='fw-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  color: 'primary',\n  options: areaChartOptions\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Package } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  options: PropTypes.object.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Users } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(data.analyticsData.subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='fw-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Custom Components\nimport StatsCard from './StatsCard'\nimport Newsletter from './Newsletter'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport RevenueGenerated from './RevenueGenerated'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SubscribersGained from './SubscribersGained'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport {\n  Eye,\n  Cpu,\n  Heart,\n  Award,\n  Truck,\n  Server,\n  Activity,\n  ShoppingBag,\n  AlertOctagon,\n  MessageSquare\n} from 'react-feather'\n\nconst StatisticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Statistics Cards' data={[{ title: 'Cards' }, { title: 'Statistics Cards' }]} />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n"],"sourceRoot":""}