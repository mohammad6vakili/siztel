{"version":3,"sources":["views/pages/authentication/LoginBasic.js","@core/components/input-password-toggle/index.js"],"names":["LoginBasic","_jsx","className","children","Card","_jsxs","CardBody","Link","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","CardTitle","tag","CardText","Form","onSubmit","Label","for","Input","type","placeholder","autoFocus","InputPasswordToggle","Button","color","block","Facebook","size","Twitter","Mail","GitHub","forwardRef","props","ref","_classnames","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","inputVisibility","setInputVisibility","Fragment","InputGroup","classnames","_defineProperty","_objectSpread","InputGroupText","Eye","EyeOff","renderIcon","defaultProps"],"mappings":"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","file":"static/js/133.2d242bc3.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Icons Imports\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\n\nconst LoginBasic = () => {\n  return (\n    <div className='auth-wrapper auth-basic px-2'>\n      <div className='auth-inner my-2'>\n        <Card className='mb-0'>\n          <CardBody>\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n              <svg viewBox='0 0 139 95' version='1.1' height='28'>\n                <defs>\n                  <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                    <stop stopColor='#000000' offset='0%'></stop>\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\n                  </linearGradient>\n                  <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                    <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\n                  </linearGradient>\n                </defs>\n                <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n                  <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                    <g id='Group' transform='translate(400.000000, 178.000000)'>\n                      <path\n                        d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                        id='Path'\n                        className='text-primary'\n                        style={{ fill: 'currentColor' }}\n                      ></path>\n                      <path\n                        d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                        id='Path'\n                        fill='url(#linearGradient-1)'\n                        opacity='0.2'\n                      ></path>\n                      <polygon\n                        id='Path-2'\n                        fill='#000000'\n                        opacity='0.049999997'\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                      ></polygon>\n                      <polygon\n                        id='Path-2'\n                        fill='#000000'\n                        opacity='0.099999994'\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                      ></polygon>\n                      <polygon\n                        id='Path-3'\n                        fill='url(#linearGradient-2)'\n                        opacity='0.099999994'\n                        points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                      ></polygon>\n                    </g>\n                  </g>\n                </g>\n              </svg>\n              <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\n            </Link>\n            <CardTitle tag='h4' className='mb-1'>\n              Welcome to Vuexy! ðŸ‘‹\n            </CardTitle>\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n            <Form className='auth-login-form mt-2' onSubmit={e => e.preventDefault()}>\n              <div className='mb-1'>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input type='email' id='login-email' placeholder='john@example.com' autoFocus />\n              </div>\n              <div className='mb-1'>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/pages/forgot-password-basic'>\n                    <small>Forgot Password?</small>\n                  </Link>\n                </div>\n                <InputPasswordToggle className='input-group-merge' id='login-password' />\n              </div>\n              <div className='form-check mb-1'>\n                <Input type='checkbox' id='remember-me' />\n                <Label className='form-check-label' for='remember-me'>\n                  Remember Me\n                </Label>\n              </div>\n              <Button color='primary' block>\n                Sign in\n              </Button>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='me-25'>New on our platform?</span>\n              <Link to='/pages/register-basic'>\n                <span>Create an account</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button color='facebook'>\n                <Facebook size={14} />\n              </Button>\n              <Button color='twitter'>\n                <Twitter size={14} />\n              </Button>\n              <Button color='google'>\n                <Mail size={14} />\n              </Button>\n              <Button className='me-0' color='github'>\n                <GitHub size={14} />\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginBasic\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from \"react\";\n\n// ** Third Party Components\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Eye, EyeOff } from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from \"reactstrap\";\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props;\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible);\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14;\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />;\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />;\n    }\n  };\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className=\"form-label\" for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          \"is-invalid\": invalid,\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? \"password\" : \"text\"}\n          placeholder={placeholder ? placeholder : \"Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·\"}\n          className={classnames({\n            [inputClassName]: inputClassName,\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor,\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText\n          className=\"cursor-pointer\"\n          onClick={() => setInputVisibility(!inputVisibility)}\n        >\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  );\n});\n\nexport default InputPasswordToggle;\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props[\"htmlFor\"] === \"undefined\") {\n      throw new Error(\"htmlFor prop is required when label prop is present\");\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props[\"label\"] === \"undefined\") {\n      throw new Error(\"label prop is required when htmlFor prop is present\");\n    }\n  },\n};\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false,\n};\n"],"sourceRoot":""}