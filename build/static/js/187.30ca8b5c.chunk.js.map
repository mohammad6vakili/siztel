{"version":3,"sources":["views/extensions/react-player/MediaPlayerVideo.js","views/extensions/react-player/MediaPlayerAudio.js","views/extensions/react-player/MediaPlayerControlled.js","views/extensions/react-player/index.js","@core/components/extensions-header/index.js"],"names":["MediaPlayerVideo","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","CardBody","ReactPlayer","width","controls","className","url","pad","string","concat","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","MediaPlayerAudio","audioRef","useRef","urlLink","setUrl","useState","played","setPlayed","loaded","setLoaded","muted","setMuted","volume","setVolume","duration","setDuration","seeking","setSeeking","playing","setPlaying","useEffect","Prism","highlightAll","load","Duration","_ref","dateTime","Math","round","preDuration","preElapsed","preRemaining","Row","Col","xs","ref","height","onPlay","handlePlay","onPause","handlePause","onSeek","e","console","log","onProgress","state","onDuration","Table","borderless","Button","variant","outline","onClick","handleStop","handlePlayPause","type","min","max","step","value","onMouseDown","handleSeekMouseDown","onChange","parseFloat","target","onMouseUp","current","seekTo","Input","id","checked","handleToggleMuted","Progress","toFixed","props","MediaPlayerControlledVideo","videoRef","loop","setLoop","setControls","playbackRate","setPlaybackRate","handlePlaybackRate","onEnded","handleEnded","config","youtube","embedOptions","color","handleFullscreen","screenfull","request","findDOMNode","active","handleToggleControls","handleToggleLoop","Fragment","ExtensionsHeader","title","subTitle","link","sm","MediaPlayerControlled","href","rel"],"mappings":"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","file":"static/js/187.30ca8b5c.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\n// ** Third Party Components\nimport ReactPlayer from 'react-player'\n\nconst MediaPlayerVideo = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ReactPlayer\n          width='100%'\n          controls={true}\n          className='react-player-video'\n          url='http://youtube.com/watch?v=FCPdIvXo2rU'\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerVideo\n","// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, Input } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\nimport ReactPlayer from 'react-player'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerAudio = () => {\n  // ** Ref\n  const audioRef = useRef(null)\n\n  // ** Vars\n  const urlLink = 'https://soundcloud.com/2ghost/we-will-rock-you'\n\n  // ** States\n  const [url, setUrl] = useState(urlLink)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [muted, setMuted] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [duration, setDuration] = useState(0)\n  const [seeking, setSeeking] = useState(null)\n  const [playing, setPlaying] = useState(false)\n\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    audioRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleDuration = duration => setDuration(duration)\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card className='overflow-hidden'>\n      <CardHeader>\n        <CardTitle tag='h4'>Audio</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={audioRef}\n              url={url}\n              className='react-player-audio'\n              width='500px'\n              height='290px'\n              playing={playing}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onSeek={e => console.log('onSeek', e)}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n            />\n          </Col>\n          <Col xs={12}>\n            <Table borderless className='mt-2'>\n              <tbody>\n                <tr>\n                  <td className='text-end'>Controls</td>\n                  <td>\n                    <Button variant='primary' outline onClick={handleStop} className='my-25 me-50'>\n                      Stop\n                    </Button>\n                    <Button variant='primary' outline onClick={handlePlayPause} className='my-25'>\n                      {playing ? 'Pause' : 'Play'}\n                    </Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Seek</td>\n                  <td>\n                    <input\n                      type='range'\n                      min={0}\n                      max={0.999999}\n                      step='any'\n                      value={played}\n                      onMouseDown={handleSeekMouseDown}\n                      onChange={handleSeekChange}\n                      onMouseUp={handleSeekMouseUp}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Volume</td>\n                  <td>\n                    <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Muted</td>\n                  <td>\n                    <div className='form-check'>\n                      <Input type='checkbox' id='audioMuted' checked={muted} onChange={handleToggleMuted} />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Played</td>\n                  <td>\n                    <Progress value={played} max={1} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Loaded</td>\n                  <td>\n                    <Progress value={loaded} max={1} />\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </Col>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerAudio\n","// ** React Imports\nimport { findDOMNode } from 'react-dom'\nimport { useState, useEffect, useRef } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, Input } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\nimport screenfull from 'screenfull'\nimport ReactPlayer from 'react-player'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerControlledVideo = () => {\n  // ** Ref\n  const videoRef = useRef(null)\n\n  // ** Vars\n  const urlLink = 'http://youtube.com/watch?v=FCPdIvXo2rU'\n\n  // ** States\n  const [url, setUrl] = useState(urlLink)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [loop, setLoop] = useState(false)\n  const [muted, setMuted] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [duration, setDuration] = useState(0)\n  const [seeking, setSeeking] = useState(null)\n  const [playing, setPlaying] = useState(false)\n  const [controls, setControls] = useState(false)\n  const [playbackRate, setPlaybackRate] = useState(1.0)\n\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleToggleControls = () => {\n    setControls(!controls)\n    setUrl(null)\n  }\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n  const handleToggleLoop = () => setLoop(!loop)\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlaybackRate = e => setPlaybackRate(parseFloat(e.target.value))\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    videoRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleEnded = () => setPlaying(loop)\n  const handleDuration = duration => setDuration(duration)\n  const handleFullscreen = () => {\n    screenfull.request(findDOMNode(videoRef.current))\n  }\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={videoRef}\n              url={url}\n              className='react-player-video'\n              width='100%'\n              playing={playing}\n              controls={controls}\n              loop={loop}\n              playbackRate={playbackRate}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onEnded={handleEnded}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n              config={{\n                youtube: {\n                  embedOptions: {\n                    'allow-same-origin': true\n                  }\n                }\n              }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n      <Table borderless>\n        <tbody>\n          <tr>\n            <td className='text-end'>Controls</td>\n            <td>\n              <Button color='primary' outline onClick={handleStop} className='my-25 me-50'>\n                Stop\n              </Button>\n              <Button color='primary' outline onClick={handlePlayPause} className='my-25 me-50'>\n                {playing ? 'Pause' : 'Play'}\n              </Button>\n              <Button color='primary' outline onClick={handleFullscreen} className='my-25'>\n                Fullscreen\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Speed</td>\n            <td>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1}\n                className='my-25 me-50'\n                active={playbackRate === 1}\n              >\n                1x\n              </Button>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1.5}\n                className='my-25 me-50'\n                active={playbackRate === 1.5}\n              >\n                1.5x\n              </Button>\n              <Button color='primary' outline onClick={handlePlaybackRate} value={2} active={playbackRate === 2}>\n                2x\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Seek</td>\n            <td>\n              <input\n                type='range'\n                min={0}\n                max={0.999999}\n                step='any'\n                value={played}\n                onMouseDown={handleSeekMouseDown}\n                onChange={handleSeekChange}\n                onMouseUp={handleSeekMouseUp}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Volume</td>\n            <td>\n              <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Controls</td>\n            <td>\n              <div className='form-check'>\n                <Input type='checkbox' id='videoControls' checked={controls} onChange={handleToggleControls} />\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Muted</td>\n            <td>\n              <div className='form-check'>\n                <Input type='checkbox' id='videoMuted' checked={muted} onChange={handleToggleMuted} />\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Loop</td>\n            <td>\n              <div className='form-check'>\n                <Input type='checkbox' id='videoLoop' checked={loop} onChange={handleToggleLoop} />\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Played</td>\n            <td>\n              <Progress value={played} max={1} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Loaded</td>\n            <td>\n              <Progress value={loaded} max={1} />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerControlledVideo\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport MediaPlayerVideo from './MediaPlayerVideo'\nimport MediaPlayerAudio from './MediaPlayerAudio'\nimport MediaPlayerControlled from './MediaPlayerControlled'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\nconst ReactPlayer = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Player'\n        subTitle='React Media Player'\n        link='https://github.com/CookPete/react-player'\n      />\n      <Row>\n        <Col sm='12'>\n          <MediaPlayerVideo />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerControlled />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerAudio />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default ReactPlayer\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}