{"version":3,"sources":["views/extensions/import-export/Import.js","@core/components/extensions-header/index.js"],"names":["Import","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","value","setValue","_useState5","_useState6","tableData","setTableData","_useState7","_useState8","filteredData","setFilteredData","_useDropzone","useDropzone","multiple","onDrop","result","reader","FileReader","onload","fileData","wb","XLSX","read","type","SheetNames","forEach","sheetName","arr","getTableData","utils","sheet_to_row_object_array","Sheets","length","endsWith","readAsBinaryString","toast","error","_jsxs","className","children","_jsx","style","minWidth","getRootProps","getInputProps","headArr","map","col","index","_toConsumableArray","Object","keys","dataArr","Fragment","ExtensionsHeader","title","subTitle","link","Row","Col","sm","Card","CardBody","_objectSpread","DownloadCloud","size","href","onClick","e","preventDefault","CardHeader","CardTitle","tag","Label","for","Input","id","bsSize","onChange","data","target","filter","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","handleFilter","Table","responsive","head","renderTd","props","rel"],"mappings":"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","file":"static/js/84.53908d91.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport XLSX from 'xlsx'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport { X, DownloadCloud } from 'react-feather'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\n\nconst Import = () => {\n  // ** States\n  const [name, setName] = useState('')\n  const [value, setValue] = useState('')\n  const [tableData, setTableData] = useState([])\n  const [filteredData, setFilteredData] = useState([])\n\n  const getTableData = (arr, name) => {\n    setTableData(arr)\n    setName(name)\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    onDrop: result => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const fileData = reader.result\n        const wb = XLSX.read(fileData, { type: 'binary' })\n\n        wb.SheetNames.forEach(function (sheetName) {\n          const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\n          getTableData(rowObj, result[0].name)\n        })\n      }\n      if (result.length && result[0].name.endsWith('xlsx')) {\n        reader.readAsBinaryString(result[0])\n      } else {\n        toast.error(\n          () => (\n            <p className='mb-0'>\n              You can only upload <span className='fw-bolder'>.xlsx</span>, <span className='fw-bolder'>.xls</span> &{' '}\n              <span className='fw-bolder'>.csv</span> Files!.\n            </p>\n          ),\n          {\n            style: {\n              minWidth: '380px'\n            }\n          }\n        )\n      }\n    }\n  })\n\n  const handleFilter = e => {\n    const data = tableData\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const keys = Object.keys(col)\n\n        const startsWithCondition = keys.filter(key => {\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase())\n        })\n\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()))\n\n        if (startsWithCondition.length) return col[startsWithCondition]\n        else if (!startsWithCondition && includesCondition.length) return col[includesCondition]\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    } else {\n      return null\n    }\n  }\n  /*eslint-disable */\n  const headArr = tableData.length\n    ? tableData.map((col, index) => {\n        if (index === 0) return [...Object.keys(col)]\n        else return null\n      })\n    : []\n  /*eslint-enable */\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null\n\n  const renderTableBody = () => {\n    if (dataArr !== null && dataArr.length) {\n      return dataArr.map((col, index) => {\n        const keys = Object.keys(col)\n        const renderTd = keys.map((key, index) => <td key={index}>{col[key]}</td>)\n        return <tr key={index}>{renderTd}</tr>\n      })\n    } else {\n      return null\n    }\n  }\n\n  const renderTableHead = () => {\n    if (headArr.length) {\n      return headArr[0].map((head, index) => {\n        return <th key={index}>{head}</th>\n      })\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/SheetJS/sheetjs'\n      />\n      <Row className='import-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody>\n              <Row>\n                <Col sm='12'>\n                  <div {...getRootProps({ className: 'dropzone' })}>\n                    <input {...getInputProps()} />\n                    <div className='d-flex align-items-center justify-content-center flex-column'>\n                      <DownloadCloud size={64} />\n                      <h5>Drop Files here or click to upload</h5>\n                      <p className='text-secondary'>\n                        Drop files here or click{' '}\n                        <a href='/' onClick={e => e.preventDefault()}>\n                          browse\n                        </a>{' '}\n                        thorough your machine\n                      </p>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        {tableData.length ? (\n          <Col sm='12'>\n            <Card>\n              <CardHeader className='justify-content-between flex-wrap'>\n                <CardTitle tag='h4'>{name}</CardTitle>\n                <div className='d-flex align-items-center justify-content-end'>\n                  <Label for='search-input' className='me-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' type='text' bsSize='sm' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </CardHeader>\n              <Table className='table-hover-animation' responsive>\n                <thead>\n                  <tr>{renderTableHead()}</tr>\n                </thead>\n                <tbody>{renderTableBody()}</tbody>\n              </Table>\n            </Card>\n          </Col>\n        ) : null}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Import\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}