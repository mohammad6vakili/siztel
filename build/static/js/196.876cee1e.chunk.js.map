{"version":3,"sources":["views/tables/data-tables/basic/TableExpandable.js","views/tables/data-tables/basic/TableZeroConfig.js","views/tables/data-tables/basic/AddNewModal.js","views/tables/data-tables/basic/TableWithButtons.js","views/tables/data-tables/basic/TableMultilingual.js","views/tables/data-tables/basic/TableColumnReorder.js","views/tables/data-tables/basic/index.js"],"names":["DataTableWithButtons","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","className","DataTable","noHeader","pagination","data","expandableRows","columns","expandOnRowClicked","sortIcon","ChevronDown","size","paginationComponent","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","paginationDefaultPage","expandableRowsComponent","ExpandableTable","paginationRowsPerPageOptions","DataTablesBasic","basicColumns","AddNewModal","_ref","open","handleModal","Date","Picker","setPicker","CloseBtn","X","onClick","Modal","isOpen","toggle","modalClassName","contentClassName","ModalHeader","close","ModalBody","Label","for","InputGroup","InputGroupText","User","Input","id","placeholder","Briefcase","Mail","type","Calendar","Flatpickr","value","onChange","date","DollarSign","Button","color","outline","BootstrapCheckbox","forwardRef","props","ref","_objectSpread","modal","setModal","_useState3","_useState4","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","filteredData","setFilteredData","downloadCSV","array","link","document","createElement","csv","result","keys","Object","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","match","concat","setAttribute","encodeURI","click","Fragment","UncontrolledButtonDropdown","DropdownToggle","caret","Share","DropdownMenu","DropdownItem","Printer","FileText","Grid","File","Copy","Plus","Row","Col","md","sm","bsSize","e","target","updatedData","status","title","length","filter","startsWith","full_name","toLowerCase","post","email","age","salary","start_date","includes","selectableRows","paginationPerPage","Math","ceil","selectableRowsComponent","t","useTranslation","Previous","Next","selectableRowsNoSelectAll","multiLingColumns","CardFooter","CardText","DataTablesReOrder","reOrderColumns","Tables","Breadcrumbs","TableZeroConfig","TableWithButtons","TableExpandable","TableMultilingual"],"mappings":"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","file":"static/js/196.876cee1e.chunk.js","sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Table columns & Expandable Data\nimport ExpandableTable, { data, columns } from '../data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\n\nconst DataTableWithButtons = () => {\n  // ** State\n  const [currentPage, setCurrentPage] = useState(0)\n\n  // ** Function to handle filter\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={''}\n      nextLabel={''}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={10}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      nextLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakLinkClassName='page-link'\n      previousLinkClassName='page-link'\n      nextClassName='page-item next-item'\n      previousClassName='page-item prev-item'\n      containerClassName={'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1'}\n    />\n  )\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Expandable Row</CardTitle>\n      </CardHeader>\n      <div className='react-dataTable'>\n        <DataTable\n          noHeader\n          pagination\n          data={data}\n          expandableRows\n          columns={columns}\n          expandOnRowClicked\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          paginationDefaultPage={currentPage + 1}\n          expandableRowsComponent={ExpandableTable}\n          paginationRowsPerPageOptions={[10, 25, 50, 100]}\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default DataTableWithButtons\n","// ** Table Columns\nimport { data, basicColumns } from '../data'\n\n// ** Third Party Components\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\n\nconst DataTablesBasic = () => {\n  return (\n    <Card className='overflow-hidden'>\n      <CardHeader>\n        <CardTitle tag='h4'>Zero Configuration</CardTitle>\n      </CardHeader>\n      <div className='react-dataTable'>\n        <DataTable\n          noHeader\n          pagination\n          data={data}\n          columns={basicColumns}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationRowsPerPageOptions={[10, 25, 50, 100]}\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default DataTablesBasic\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { User, Briefcase, Mail, Calendar, DollarSign, X } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Modal, Input, Label, Button, ModalHeader, ModalBody, InputGroup, InputGroupText } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = ({ open, handleModal }) => {\n  // ** State\n  const [Picker, setPicker] = useState(new Date())\n\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleModal}\n      className='sidebar-sm'\n      modalClassName='modal-slide-in'\n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-1' toggle={handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>New Record</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n        <div className='mb-1'>\n          <Label className='form-label' for='full-name'>\n            Full Name\n          </Label>\n          <InputGroup>\n            <InputGroupText>\n              <User size={15} />\n            </InputGroupText>\n            <Input id='full-name' placeholder='Bruce Wayne' />\n          </InputGroup>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='post'>\n            Post\n          </Label>\n          <InputGroup>\n            <InputGroupText>\n              <Briefcase size={15} />\n            </InputGroupText>\n            <Input id='post' placeholder='Web Developer' />\n          </InputGroup>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='email'>\n            Email\n          </Label>\n          <InputGroup>\n            <InputGroupText>\n              <Mail size={15} />\n            </InputGroupText>\n            <Input type='email' id='email' placeholder='brucewayne@email.com' />\n          </InputGroup>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='joining-date'>\n            Joining Date\n          </Label>\n          <InputGroup>\n            <InputGroupText>\n              <Calendar size={15} />\n            </InputGroupText>\n            <Flatpickr className='form-control' id='joining-date' value={Picker} onChange={date => setPicker(date)} />\n          </InputGroup>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='salary'>\n            Salary\n          </Label>\n          <InputGroup>\n            <InputGroupText>\n              <DollarSign size={15} />\n            </InputGroupText>\n            <Input type='number' id='salary' />\n          </InputGroup>\n        </div>\n        <Button className='me-1' color='primary' onClick={handleModal}>\n          Submit\n        </Button>\n        <Button color='secondary' onClick={handleModal} outline>\n          Cancel\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Table Data & Columns\nimport { data, columns } from '../data'\n\n// ** Add New Modal Component\nimport AddNewModal from './AddNewModal'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className='form-check'>\n    <Input type='checkbox' ref={ref} {...props} />\n  </div>\n))\n\nconst DataTableWithButtons = () => {\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => setModal(!modal)\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    const status = {\n      1: { title: 'Current', color: 'light-primary' },\n      2: { title: 'Professional', color: 'light-success' },\n      3: { title: 'Rejected', color: 'light-danger' },\n      4: { title: 'Resigned', color: 'light-warning' },\n      5: { title: 'Applied', color: 'light-info' }\n    }\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n          item.post.toLowerCase().includes(value.toLowerCase()) ||\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\n          item.age.toLowerCase().includes(value.toLowerCase()) ||\n          item.salary.toLowerCase().includes(value.toLowerCase()) ||\n          item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(data.length / 7) || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      nextLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakLinkClassName='page-link'\n      previousLinkClassName='page-link'\n      nextClassName='page-item next-item'\n      previousClassName='page-item prev-item'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\n    />\n  )\n\n  // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = ','\n    const lineDelimiter = '\\n'\n    const keys = Object.keys(data[0])\n\n    result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach(item => {\n      let ctr = 0\n      keys.forEach(key => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = 'export.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>DataTable with Buttons</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='secondary' caret outline>\n                <Share size={15} />\n                <span className='align-middle ms-50'>Export</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem className='w-100'>\n                  <Printer size={15} />\n                  <span className='align-middle ms-50'>Print</span>\n                </DropdownItem>\n                <DropdownItem className='w-100' onClick={() => downloadCSV(data)}>\n                  <FileText size={15} />\n                  <span className='align-middle ms-50'>CSV</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Grid size={15} />\n                  <span className='align-middle ms-50'>Excel</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <File size={15} />\n                  <span className='align-middle ms-50'>PDF</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Copy size={15} />\n                  <span className='align-middle ms-50'>Copy</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <Button className='ms-2' color='primary' onClick={handleModal}>\n              <Plus size={15} />\n              <span className='align-middle ms-50'>Add Record</span>\n            </Button>\n          </div>\n        </CardHeader>\n        <Row className='justify-content-end mx-0'>\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n            <Label className='me-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter mb-50'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            pagination\n            selectableRows\n            columns={columns}\n            paginationPerPage={7}\n            className='react-dataTable'\n            sortIcon={<ChevronDown size={10} />}\n            paginationDefaultPage={currentPage + 1}\n            paginationComponent={CustomPagination}\n            data={searchValue.length ? filteredData : data}\n            selectableRowsComponent={BootstrapCheckbox}\n          />\n        </div>\n      </Card>\n      <AddNewModal open={modal} handleModal={handleModal} />\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Table Columns\nimport { data, multiLingColumns } from '../data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport { useTranslation } from 'react-i18next'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardFooter, CardText, Input, Label, Row, Col } from 'reactstrap'\n\nconst DataTableWithButtons = () => {\n  // ** State\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  // ** Function to handle pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    const status = {\n      1: { title: 'Current', color: 'light-primary' },\n      2: { title: 'Professional', color: 'light-success' },\n      3: { title: 'Rejected', color: 'light-danger' },\n      4: { title: 'Resigned', color: 'light-warning' },\n      5: { title: 'Applied', color: 'light-info' }\n    }\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n          item.post.toLowerCase().includes(value.toLowerCase()) ||\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\n          item.age.toLowerCase().includes(value.toLowerCase()) ||\n          item.salary.toLowerCase().includes(value.toLowerCase()) ||\n          item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>{t('Prev')}</span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>{t('Next')}</span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(data.length / 7) || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pe-1 mt-1'}\n    />\n  )\n\n  return (\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>Multilingual</CardTitle>\n      </CardHeader>\n      <Row className='justify-content-end mx-0'>\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n          <Label className='me-1' for='search-input-1'>\n            {t('Search')}\n          </Label>\n          <Input\n            className='dataTable-filter mb-50'\n            type='text'\n            bsSize='sm'\n            id='search-input-1'\n            value={searchValue}\n            onChange={handleFilter}\n          />\n        </Col>\n      </Row>\n      <div className='react-dataTable'>\n        <DataTable\n          noHeader\n          pagination\n          selectableRowsNoSelectAll\n          columns={multiLingColumns}\n          className='react-dataTable'\n          paginationPerPage={7}\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n        />\n      </div>\n      <CardFooter>\n        <CardText className='mb-0'>\n          <span className='fw-bold'>Note:</span> <span>Use Intl Dropdown in Navbar to change table language</span>\n        </CardText>\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default DataTableWithButtons\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Table Columns\nimport { data, reOrderColumns } from '../data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\n\nconst DataTablesReOrder = () => {\n  // ** States\n  const [currentPage, setCurrentPage] = useState(0)\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      nextLabel=''\n      breakLabel='...'\n      previousLabel=''\n      pageRangeDisplayed={2}\n      forcePage={currentPage}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      nextLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakLinkClassName='page-link'\n      previousLinkClassName='page-link'\n      nextClassName='page-item next-item'\n      previousClassName='page-item prev-item'\n      pageCount={Math.ceil(data.length / 7) || 1}\n      onPageChange={page => handlePagination(page)}\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\n    />\n  )\n\n  return (\n    <Card className='overflow-hidden'>\n      <CardHeader>\n        <CardTitle tag='h4'>Column ReOrder</CardTitle>\n      </CardHeader>\n      <div className='react-dataTable'>\n        <DataTable\n          noHeader\n          pagination\n          data={data}\n          columns={reOrderColumns}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          paginationDefaultPage={currentPage + 1}\n          paginationRowsPerPageOptions={[10, 25, 50, 100]}\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default DataTablesReOrder\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Third Party Components\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport TableExpandable from './TableExpandable'\nimport TableZeroConfig from './TableZeroConfig'\nimport TableWithButtons from './TableWithButtons'\nimport TableMultilingual from './TableMultilingual'\nimport DataTablesReOrder from './TableColumnReorder'\n\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst Tables = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Datatables Basic' data={[{ title: 'Datatables' }, { title: 'Datatables Basic' }]} />\n      <Row>\n        <Col sm='12'>\n          <TableZeroConfig />\n        </Col>\n        <Col sm='12'>\n          <DataTablesReOrder />\n        </Col>\n        <Col sm='12'>\n          <TableWithButtons />\n        </Col>\n        <Col sm='12'>\n          <TableExpandable />\n        </Col>\n        <Col sm='12'>\n          <TableMultilingual />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Tables\n"],"sourceRoot":""}