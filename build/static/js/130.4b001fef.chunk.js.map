{"version":3,"sources":["views/pages/authentication/LoginCover.js","@core/components/input-password-toggle/index.js"],"names":["LoginCover","skin","useSkin","illustration","source","require","concat","default","_jsx","className","children","_jsxs","Row","Link","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Form","onSubmit","Label","for","Input","type","placeholder","autoFocus","InputPasswordToggle","Button","color","block","Facebook","size","Twitter","Mail","GitHub","forwardRef","props","ref","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","inputVisibility","setInputVisibility","useState","Fragment","InputGroup","classnames","InputGroupText","renderIcon","Eye","EyeOff","defaultProps"],"mappings":"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","file":"static/js/130.4b001fef.chunk.js","sourcesContent":["import { useSkin } from '@hooks/useSkin'\nimport { Link } from 'react-router-dom'\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { Row, Col, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\nimport '@styles/react/pages/page-authentication.scss'\n\nconst LoginCover = () => {\n  const { skin } = useSkin()\n\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='fw-bold mb-1'>\n              Welcome to Vuexy! ðŸ‘‹\n            </CardTitle>\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n            <Form className='auth-login-form mt-2' onSubmit={e => e.preventDefault()}>\n              <div className='mb-1'>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input type='email' id='login-email' placeholder='john@example.com' autoFocus />\n              </div>\n              <div className='mb-1'>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/pages/forgot-password-cover'>\n                    <small>Forgot Password?</small>\n                  </Link>\n                </div>\n                <InputPasswordToggle className='input-group-merge' id='login-password' />\n              </div>\n              <div className='form-check mb-1'>\n                <Input type='checkbox' id='remember-me' />\n                <Label className='form-check-label' for='remember-me'>\n                  Remember Me\n                </Label>\n              </div>\n              <Button color='primary' block>\n                Sign in\n              </Button>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='me-25'>New on our platform?</span>\n              <Link to='/pages/register-cover'>\n                <span>Create an account</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button color='facebook'>\n                <Facebook size={14} />\n              </Button>\n              <Button color='twitter'>\n                <Twitter size={14} />\n              </Button>\n              <Button color='google'>\n                <Mail size={14} />\n              </Button>\n              <Button className='me-0' color='github'>\n                <GitHub size={14} />\n              </Button>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default LoginCover\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from \"react\";\n\n// ** Third Party Components\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Eye, EyeOff } from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from \"reactstrap\";\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props;\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible);\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14;\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />;\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />;\n    }\n  };\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className=\"form-label\" for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          \"is-invalid\": invalid,\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? \"password\" : \"text\"}\n          placeholder={placeholder ? placeholder : \"Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·\"}\n          className={classnames({\n            [inputClassName]: inputClassName,\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor,\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText\n          className=\"cursor-pointer\"\n          onClick={() => setInputVisibility(!inputVisibility)}\n        >\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  );\n});\n\nexport default InputPasswordToggle;\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props[\"htmlFor\"] === \"undefined\") {\n      throw new Error(\"htmlFor prop is required when label prop is present\");\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props[\"label\"] === \"undefined\") {\n      throw new Error(\"label prop is required when htmlFor prop is present\");\n    }\n  },\n};\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false,\n};\n"],"sourceRoot":""}