{"version":3,"sources":["assets/images/svg/transparent.svg","views/components/toasts/ToastTranslucent.js","views/components/toasts/ToastHeaderIcons.js","views/components/toasts/ToastSourceCode.js","views/components/toasts/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["close","_jsx","type","className","ToastTranslucent","_jsxs","Row","children","Col","md","sm","Toast","ToastHeader","ToastBody","style","background","concat","transparentBg","logo","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","opacity","points","ToastHeaderIcons","icon","Spinner","size","color","toastTranslucent","toastHeaderIcons","Toasts","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","title","data","Card","code","CardText","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","CardSnippet","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Code","CardBody","CardHeader","CardTitle","onClick","toggle","Collapse"],"mappings":"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","file":"static/js/155.780b9fa5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/transparent.b24c6f1c.svg\";","// ** Reactstrap Imports\nimport { Toast, ToastBody, ToastHeader, Row, Col } from 'reactstrap'\n\n// ** Images\nimport transparentBg from '@src/assets/images/svg/transparent.svg'\n\nconst close = <button type='button' className='ms-1 btn-close'></button>\n\nconst ToastTranslucent = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-primary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a primary background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-secondary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a secondary background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-success my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a success background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-danger my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a danger background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-warning my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a warning background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-info my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on an info background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-dark my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on an dark background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div\n          className='p-3 my-2 rounded'\n          style={{\n            background: `url(${transparentBg})`\n          }}\n        >\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a transparent background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastTranslucent\n","// ** Reactstrap Imports\nimport { Toast, ToastBody, ToastHeader, Spinner, Row, Col } from 'reactstrap'\n\nconst logo = (\n  <svg viewBox='0 0 139 95' version='1.1' height='14'>\n    <defs>\n      <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n        <stop stopColor='#000000' offset='0%'></stop>\n        <stop stopColor='#FFFFFF' offset='100%'></stop>\n      </linearGradient>\n      <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n        <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n        <stop stopColor='#FFFFFF' offset='100%'></stop>\n      </linearGradient>\n    </defs>\n    <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n      <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n        <g id='Group' transform='translate(400.000000, 178.000000)'>\n          <path\n            d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n            id='Path'\n            className='text-primary'\n            style={{ fill: 'currentColor' }}\n          ></path>\n          <path\n            d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n            id='Path'\n            fill='url(#linearGradient-1)'\n            opacity='0.2'\n          ></path>\n          <polygon\n            id='Path-2'\n            fill='#000000'\n            opacity='0.049999997'\n            points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n          ></polygon>\n          <polygon\n            id='Path-2'\n            fill='#000000'\n            opacity='0.099999994'\n            points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n          ></polygon>\n          <polygon\n            id='Path-3'\n            fill='url(#linearGradient-2)'\n            opacity='0.099999994'\n            points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n          ></polygon>\n        </g>\n      </g>\n    </g>\n  </svg>\n)\n\nconst close = <button type='button' className='ms-1 btn-close'></button>\n\nconst ToastHeaderIcons = () => {\n  return (\n    <Row className='demo-vertical-spacing'>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='primary'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a primary icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='success'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a success icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='info'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a info icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='danger'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a danger icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='warning'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a warning icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='dark'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a dark icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon={<Spinner size='sm' color='primary' />}>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a spinner — check it out!</ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon={logo}>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a logo — check it out!</ToastBody>\n        </Toast>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastHeaderIcons\n","export const toastTranslucent = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n\nimport { Toast, ToastBody, ToastHeader, Row, Col } from 'reactstrap'\nimport transparentBg from '@src/assets/images/svg/transparent.svg'\n\nconst close = (\n  <button type='button' className='ms-1 btn-close'>\n    <span>×</span>\n  </button>\n)\n\nconst ToastTranslucent = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-primary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a primary background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-secondary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a secondary background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-success my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a success background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-danger my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a danger background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-warning my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a warning background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-info my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on an info background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-dark my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on an dark background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div\n          className='p-3 my-2 rounded'\n          style={{\n            background: \"url(transparentBg)\"\n          }}\n        >\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a transparent background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastTranslucent\n`}\n    </code>\n  </pre>\n);\n\nexport const toastHeaderIcons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n\nimport { Toast, ToastBody, ToastHeader, Spinner, Row, Col } from 'reactstrap'\nimport logo from '@src/assets/image/logo.png'\n\nconst close = (\n  <button type='button' className='ms-1 btn-close'>\n    <span>×</span>\n  </button>\n)\n\n\nconst ToastHeaderIcons = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='primary'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a primary icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='success'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a success icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='info'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a info icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='danger'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a danger icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='warning'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a warning icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='dark'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a dark icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon={<Spinner size='sm' color='primary' />}>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a spinner — check it out!</ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n        <ToastHeader close={close} icon={logo}>Vuexy</ToastHeader>\n          <ToastBody>This is a toast with a logo — check it out!</ToastBody>\n        </Toast>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastHeaderIcons\n`}\n    </code>\n  </pre>\n);\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport ToastTranslucent from './ToastTranslucent'\nimport ToastHeaderIcons from './ToastHeaderIcons'\n\n// ** Source Code\nimport { toastHeaderIcons, toastTranslucent } from './ToastSourceCode'\n\nconst Toasts = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Toasts' data={[{ title: 'Components' }, { title: 'Toasts' }]} />\n      <Row className='match-height'>\n        <Col sm='12'>\n          <Card title='Toast Translucent' code={toastTranslucent}>\n            <CardText>\n              Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers\n              that support the backdrop-filter CSS property, we’ll also attempt to blur the elements under a toast.\n            </CardText>\n            <ToastTranslucent />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icons' code={toastHeaderIcons}>\n            <CardText>\n              Use <code>icon</code> attribute with <code>ToastHeader</code> tag to add an icon.\n            </CardText>\n            <ToastHeaderIcons />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Toasts\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}