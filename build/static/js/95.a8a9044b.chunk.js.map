{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBase.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/pages/knowledge-base/KnowledgeBaseHeader.js"],"names":["KnowledgeBase","data","setData","useState","searchTerm","setSearchTerm","useEffect","axios","get","then","res","Content","_ref","item","_jsx","Col","className","md","sm","children","Card","_jsxs","Link","to","concat","category","CardImg","src","img","alt","top","CardBody","title","desc","id","Fragment","Breadcrumbs","KnowledgeBaseHeader","Row","map","titleCondition","toLowerCase","includes","descCondition","length","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","index","Wrapper","link","isLastItem","active","classnames","FaqFilter","handleFilter","style","backgroundImage","require","default","CardText","Form","onSubmit","e","preventDefault","InputGroup","InputGroupText","Search","size","Input","value","onChange","target","placeholder"],"mappings":"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","file":"static/js/95.a8a9044b.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, CardImg } from 'reactstrap'\n\n// ** Styles\nimport '@styles/base/pages/page-knowledge-base.scss'\n\nconst KnowledgeBase = () => {\n  // ** States\n  const [data, setData] = useState(null),\n    [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    axios.get('/faq/data/knowledge_base').then(res => setData(res.data))\n  }, [])\n\n  const Content = ({ item }) => (\n    <Col className='kb-search-content' key={item.id} md='4' sm='6'>\n      <Card>\n        <Link to={`/pages/knowledge-base/${item.category}`}>\n          <CardImg src={item.img} alt='knowledge-base-image' top />\n          <CardBody className='text-center'>\n            <h4>{item.title}</h4>\n            <p className='text-body mt-1 mb-0'>{item.desc}</p>\n          </CardBody>\n        </Link>\n      </Card>\n    </Col>\n  )\n\n  const renderContent = () => {\n    return data.map(item => {\n      const titleCondition = item.title.toLowerCase().includes(searchTerm.toLowerCase()),\n        descCondition = item.desc.toLowerCase().includes(searchTerm.toLowerCase())\n\n      if (searchTerm.length < 1) {\n        return <Content key={item.id} item={item} />\n      } else if (titleCondition || descCondition) {\n        return <Content key={item.id} item={item} />\n      } else {\n        return null\n      }\n    })\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Knowledge Base' data={[{ title: 'Pages' }, { title: 'Knowledge Base' }]} />\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      {data !== null ? (\n        <div id='knowledge-base-content'>\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\n        </div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default KnowledgeBase\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","// ** Icons Imports\nimport { Search } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\n\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\n  const onChange = e => {\n    if (handleFilter) {\n      handleFilter(e)\n    } else {\n      setSearchTerm(e.target.value)\n    }\n  }\n\n  return (\n    <div id='knowledge-base-search'>\n      <Card\n        className='knowledge-base-bg'\n        style={{\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\n        }}\n      >\n        <CardBody className='text-center'>\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\n          <CardText className='mb-2'>\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\n          </CardText>\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\n            <InputGroup className='input-group-merge'>\n              <InputGroupText>\n                <Search size={14} />\n              </InputGroupText>\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\n            </InputGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nexport default FaqFilter\n"],"sourceRoot":""}