{"version":3,"sources":["views/forms/form-elements/switch/SwitchIcons.js","views/forms/form-elements/switch/SwitchColors.js","views/forms/form-elements/switch/SwitchBasic.js","views/forms/form-elements/switch/index.js","@core/components/breadcrumbs/index.js"],"names":["CustomLabel","_ref","htmlFor","_jsxs","Label","className","children","_jsx","Check","size","X","SwitchIcons","Card","CardHeader","CardTitle","tag","CardBody","CardText","for","Input","type","defaultChecked","id","name","SwitchColors","SwitchBasic","disabled","Switch","Fragment","Breadcrumbs","title","data","Row","Col","sm","SwitchReactstrap","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames"],"mappings":"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","file":"static/js/175.49e8c04d.chunk.js","sourcesContent":["// ** Icons Imports\nimport { Check, X } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Input, Label } from 'reactstrap'\n\nconst CustomLabel = ({ htmlFor }) => {\n  return (\n    <Label className='form-check-label' htmlFor={htmlFor}>\n      <span className='switch-icon-left'>\n        <Check size={14} />\n      </span>\n      <span className='switch-icon-right'>\n        <X size={14} />\n      </span>\n    </Label>\n  )\n}\n\nconst SwitchIcons = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Icons</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          Use class <code>.switch-icon-left &amp; .switch-icon-right</code> inside of <code>label</code> prop to create\n          a switch with icon.\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <div className='d-flex flex-column'>\n            <Label for='icon-primary' className='form-check-label mb-50'>\n              Primary\n            </Label>\n            <div className='form-switch form-check-primary'>\n              <Input type='switch' defaultChecked id='icon-primary' name='icon-primary' />\n              <CustomLabel htmlFor='icon-primary' />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='icon-secondary' className='form-check-label mb-50'>\n              Secondary\n            </Label>\n            <div className='form-switch form-check-secondary'>\n              <Input type='switch' defaultChecked id='icon-secondary' name='icon-secondary' />\n              <CustomLabel htmlFor='icon-secondary' />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='icon-success' className='form-check-label mb-50'>\n              Success\n            </Label>\n            <div className='form-switch form-check-success'>\n              <Input type='switch' defaultChecked id='icon-success' name='icon-success' />\n              <CustomLabel htmlFor='icon-success' />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='icon-danger' className='form-check-label mb-50'>\n              Danger\n            </Label>\n            <div className='form-switch form-check-danger'>\n              <Input type='switch' defaultChecked id='icon-danger' name='icon-danger' />\n              <CustomLabel htmlFor='icon-danger' />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='icon-warning' className='form-check-label mb-50'>\n              Warning\n            </Label>\n            <div className='form-switch form-check-warning'>\n              <Input type='switch' defaultChecked id='icon-warning' name='icon-warning' />\n              <CustomLabel htmlFor='icon-warning' />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='icon-info' className='form-check-label mb-50'>\n              Info\n            </Label>\n            <div className='form-switch form-check-info'>\n              <Input type='switch' defaultChecked id='icon-info' name='icon-info' />\n              <CustomLabel htmlFor='icon-info' />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='icon-dark' className='form-check-label mb-50'>\n              Dark\n            </Label>\n            <div className='form-switch form-check-dark'>\n              <Input type='switch' defaultChecked id='icon-dark' name='icon-dark' />\n              <CustomLabel htmlFor='icon-dark' />\n            </div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SwitchIcons\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Label, Input } from 'reactstrap'\n\nconst SwitchColors = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Colors</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          Use class <code>.form-check-colorName</code> to change switch's color\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <div className='d-flex flex-column'>\n            <Label for='switch-primary' className='form-check-label mb-50'>\n              Primary\n            </Label>\n            <div className='form-switch form-check-primary'>\n              <Input type='switch' id='switch-primary' name='primary' defaultChecked />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='switch-secondary' className='form-check-label mb-50'>\n              Secondary\n            </Label>\n            <div className='form-switch form-check-secondary'>\n              <Input type='switch' id='switch-secondary' name='secondary' defaultChecked />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='switch-success' className='form-check-label mb-50'>\n              Success\n            </Label>\n            <div className='form-switch form-check-success'>\n              <Input type='switch' id='switch-success' name='success' defaultChecked />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='switch-danger' className='form-check-label mb-50'>\n              Danger\n            </Label>\n            <div className='form-switch form-check-danger'>\n              <Input type='switch' id='switch-danger' name='danger' defaultChecked />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='switch-warning' className='form-check-label mb-50'>\n              Warning\n            </Label>\n            <div className='form-switch form-check-warning'>\n              <Input type='switch' id='switch-warning' name='warning' defaultChecked />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='switch-info' className='form-check-label mb-50'>\n              Info\n            </Label>\n            <div className='form-switch form-check-info'>\n              <Input type='switch' id='switch-info' name='info' defaultChecked />\n            </div>\n          </div>\n          <div className='d-flex flex-column'>\n            <Label for='switch-dark' className='form-check-label mb-50'>\n              Dark\n            </Label>\n            <div className='form-switch form-check-dark'>\n              <Input type='switch' id='switch-dark' name='dark' defaultChecked />\n            </div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SwitchColors\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Input, Label } from 'reactstrap'\n\nconst SwitchBasic = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <div className='form-check form-switch'>\n            <Input type='switch' name='customSwitch' id='exampleCustomSwitch' />\n            <Label for='exampleCustomSwitch' className='form-check-label'>\n              Toggle this switch element\n            </Label>\n          </div>\n          <div className='form-check form-switch'>\n            <Input disabled type='switch' name='customSwitchDisabled' id='exampleCustomSwitchDisabled' />\n            <Label for='exampleCustomSwitchDisabled' className='form-check-label'>\n              Disabled switch element\n            </Label>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SwitchBasic\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport SwitchIcons from './SwitchIcons'\nimport SwitchColors from './SwitchColors'\nimport SwitchReactstrap from './SwitchBasic'\n\nconst Switch = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Switch' data={[{ title: 'Form Elements' }, { title: 'Switch' }]} />\n      <Row>\n        <Col sm='12'>\n          <SwitchReactstrap />\n        </Col>\n        <Col sm='12'>\n          <SwitchColors />\n        </Col>\n        <Col sm='12'>\n          <SwitchIcons />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Switch\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n"],"sourceRoot":""}