{"version":3,"sources":["hooks/use_cdr.js","views/admin/cdr/root/datatable/columns.js","views/admin/cdr/root/components/filterbar.jsx","views/admin/cdr/root/index.jsx","@core/components/breadcrumbs/index.js","components/progress_loading/index.js"],"names":["useCdr","httpService","useHttp","loadings","setLoadings","useState","getCdr","createCdr","updateCdr","filters","setFilters","RunIDs","Tenants","Accounts","Category","listData","setListData","async","postData","length","without_filter","push","response","post","id","method","params","data","result","err","columns","name","minWidth","selector","row","CGRID","RunID","OrderID","OriginHost","Source","OriginID","ToR","RequestType","Tenant","Account","Subject","Destination","SetupTime","cell","moment","format","AnswerTime","Usage","CostSource","Cost","ExtraInfo","Filterbar","_ref","open","setOpen","_jsxs","Card","children","CardHeader","style","cursor","onClick","className","_jsx","CardTitle","transform","transition","IoIosArrowDown","Collapse","isOpen","CardBody","Row","Col","xs","sm","md","Label","for","Input","value","onChange","e","target","CustomButton","marginRight","color","CdrRoot","useNavigate","skin","useSkin","getAllTpIdsLoading","useSelector","state","app","selectedTpId","useEffect","Fragment","Breadcrumbs","title","width","height","ProgressLoading","DataTable","noDataComponent","margin","noHeader","background","theme","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","active","classnames"],"mappings":"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","file":"static/js/90.0e9d6d2d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport useHttp from \"./use_http\";\n\nconst useCdr = () => {\n  const { httpService } = useHttp();\n  const [loadings, setLoadings] = useState({\n    getCdr: false,\n    createCdr: false,\n    updateCdr: false,\n  });\n\n  const [filters, setFilters] = useState({\n    RunIDs: \"\",\n    Tenants: \"cgrates.org\",\n    Accounts: \"\",\n    Category: \"\",\n  });\n\n  const [listData, setListData] = useState([]);\n\n  const getCdr = async (without_filter) => {\n    let postData = {\n      RunIDs: [],\n      Tenants: [],\n      Accounts: [],\n      Category: [],\n    };\n    if (filters.RunIDs.length > 0 && !without_filter) {\n      postData.RunIDs.push(filters.RunIDs);\n    }\n    if (filters.Tenants.length > 0 && !without_filter) {\n      postData.Tenants.push(filters.Tenants);\n    }\n    if (filters.Accounts.length > 0 && !without_filter) {\n      postData.Accounts.push(filters.Accounts);\n    }\n    if (filters.Category.length > 0 && !without_filter) {\n      postData.Category.push(filters.Category);\n    }\n    try {\n      setLoadings({ ...loadings, getCdr: true });\n      const response = await httpService.post(\"\", {\n        id: \"11111\",\n        method: \"APIerSv2.GetCDRs\",\n        params: [postData],\n      });\n      setLoadings({ ...loadings, getCdr: false });\n      if (response.data.result) {\n        setListData(response.data.result);\n      } else {\n        setListData([]);\n      }\n    } catch ({ err, response }) {\n      setLoadings({ ...loadings, getCdr: false });\n    }\n  };\n\n  const exports = { getCdr, listData, filters, setFilters, loadings };\n  return exports;\n};\nexport default useCdr;\n","import moment from \"moment\";\n\nexport const columns = [\n  {\n    name: \"CGRID\",\n    minWidth: \"350px\",\n    selector: (row) => row.CGRID,\n  },\n  {\n    name: \"RunID\",\n    minWidth: \"120px\",\n    selector: (row) => row.RunID,\n  },\n  {\n    name: \"OrderID\",\n    minWidth: \"80px\",\n    selector: (row) => row.OrderID,\n  },\n  {\n    name: \"OriginHost\",\n    minWidth: \"120px\",\n    selector: (row) => row.OriginHost,\n  },\n  {\n    name: \"Source\",\n    minWidth: \"80px\",\n    selector: (row) => row.Source,\n  },\n  {\n    name: \"OriginID\",\n    minWidth: \"320px\",\n    selector: (row) => row.OriginID,\n  },\n  {\n    name: \"ToR\",\n    minWidth: \"120px\",\n    selector: (row) => row.ToR,\n  },\n  {\n    name: \"RequestType\",\n    minWidth: \"120px\",\n    selector: (row) => row.RequestType,\n  },\n  {\n    name: \"Tenant\",\n    minWidth: \"120px\",\n    selector: (row) => row.Tenant,\n  },\n  {\n    name: \"Category\",\n    minWidth: \"100px\",\n    selector: (row) => row.Category,\n  },\n  {\n    name: \"Account\",\n    minWidth: \"170px\",\n    selector: (row) => row.Account,\n  },\n  {\n    name: \"Subject\",\n    minWidth: \"170px\",\n    selector: (row) => row.Subject,\n  },\n  {\n    name: \"Destination\",\n    minWidth: \"120px\",\n    selector: (row) => row.Destination,\n  },\n  {\n    name: \"SetupTime\",\n    minWidth: \"160px\",\n    selector: (row) => row.SetupTime,\n    cell: (row) => {\n      return moment(row.SetupTime).format(\"YYYY/MM/DD HH:mm:ss\");\n    },\n  },\n  {\n    name: \"AnswerTime\",\n    minWidth: \"160px\",\n    selector: (row) => row.AnswerTime,\n    cell: (row) => {\n      return moment(row.AnswerTime).format(\"YYYY/MM/DD HH:mm:ss\");\n    },\n  },\n  {\n    name: \"Usage\",\n    minWidth: \"100px\",\n    selector: (row) => row.Usage,\n  },\n  {\n    name: \"CostSource\",\n    minWidth: \"120px\",\n    selector: (row) => row.CostSource,\n  },\n  {\n    name: \"Cost\",\n    minWidth: \"130px\",\n    selector: (row) => row.Cost,\n  },\n  {\n    name: \"ExtraInfo\",\n    minWidth: \"100px\",\n    selector: (row) => row.ExtraInfo,\n  },\n];\n","import {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  Label,\n  Input,\n  Collapse,\n} from \"reactstrap\";\nimport CustomButton from \"../../../../../components/button/index\";\nimport { useState } from \"react\";\nimport { IoIosArrowDown } from \"react-icons/io\";\n\nconst Filterbar = ({ filters, setFilters, getCdr }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Card>\n      {/* card title */}\n      <CardHeader\n        style={{ cursor: \"pointer\" }}\n        onClick={() => setOpen(!open)}\n        className=\"border-bottom\"\n      >\n        <CardTitle>Search and Filter</CardTitle>\n        <div\n          style={\n            open\n              ? { transform: \"rotate(-180deg)\", transition: \"all .2s\" }\n              : { transition: \"all .2s\" }\n          }\n        >\n          <IoIosArrowDown />\n        </div>\n      </CardHeader>\n      {/* card body */}\n      <Collapse isOpen={open}>\n        <CardBody>\n          <Row>\n            {/* RunIDs */}\n            <Col className=\"mt-1\" xs=\"12\" sm=\"6\" md=\"3\">\n              <Label for=\"RunIDs\" className=\"form-label\">\n                RunIDs\n              </Label>\n              <Input\n                name=\"RunIDs\"\n                id=\"RunIDs\"\n                value={filters.RunIDs}\n                onChange={(e) =>\n                  setFilters({ ...filters, RunIDs: e.target.value })\n                }\n              />\n            </Col>\n            {/* Tenants */}\n            <Col className=\"mt-1\" xs=\"12\" sm=\"6\" md=\"3\">\n              <Label for=\"Tenants\" className=\"form-label\">\n                Tenants\n              </Label>\n              <Input\n                name=\"Tenants\"\n                id=\"Tenants\"\n                value={filters.Tenants}\n                onChange={(e) =>\n                  setFilters({ ...filters, Tenants: e.target.value })\n                }\n              />\n            </Col>\n            {/* Accounts */}\n            <Col className=\"mt-1\" xs=\"12\" sm=\"6\" md=\"3\">\n              <Label for=\"Accounts\" className=\"form-label\">\n                Accounts\n              </Label>\n              <Input\n                name=\"Accounts\"\n                id=\"Accounts\"\n                value={filters.Accounts}\n                onChange={(e) =>\n                  setFilters({ ...filters, Accounts: e.target.value })\n                }\n              />\n            </Col>\n            {/* Category */}\n            <Col className=\"mt-1\" xs=\"12\" sm=\"6\" md=\"3\">\n              <Label for=\"Category\" className=\"form-label\">\n                Category\n              </Label>\n              <Input\n                name=\"Category\"\n                id=\"Category\"\n                value={filters.Category}\n                onChange={(e) =>\n                  setFilters({ ...filters, Category: e.target.value })\n                }\n              />\n            </Col>\n          </Row>\n          {/* actions */}\n          <Col sm=\"12\" className=\"mt-2 d-flex justify-content-end\">\n            <CustomButton\n              onClick={() => {\n                setFilters({\n                  RunIDs: \"\",\n                  Tenants: \"\",\n                  Accounts: \"\",\n                  Category: \"\",\n                });\n                getCdr(\"without_filter\");\n              }}\n              style={{ marginRight: 8 }}\n              color=\"danger\"\n            >\n              Clear Filters\n            </CustomButton>\n            <CustomButton onClick={() => getCdr()} color=\"primary\">\n              Search and Filter\n            </CustomButton>\n          </Col>\n        </CardBody>\n      </Collapse>\n    </Card>\n  );\n};\nexport default Filterbar;\n","import { Fragment, useEffect } from \"react\";\nimport Breadcrumbs from \"@components/breadcrumbs\";\nimport useCdr from \"../../../../hooks/use_cdr\";\nimport { useSkin } from \"@hooks/useSkin\";\nimport ProgressLoading from \"../../../../components/progress_loading/index\";\nimport DataTable from \"react-data-table-component\";\nimport { columns } from \"./datatable/columns\";\nimport CdrData from \"../../../../data/cdr.json\";\nimport { useNavigate } from \"react-router-dom\";\nimport Filterbar from \"./components/filterbar\";\nimport { useSelector } from \"react-redux\";\n\nconst CdrRoot = () => {\n  const navigate = useNavigate();\n  const { skin } = useSkin();\n  const { getCdr, listData, filters, setFilters, loadings } = useCdr();\n\n  const getAllTpIdsLoading = useSelector(\n    (state) => state.app.getAllTpIdsLoading\n  );\n  const selectedTpId = useSelector((state) => state.app.selectedTpId);\n\n  useEffect(() => {\n    if (selectedTpId) {\n      getCdr();\n    }\n  }, [selectedTpId]);\n\n  return (\n    <Fragment>\n      <Breadcrumbs title=\"CDR\" data={[{ title: \"CDR\" }]} />\n      {/* filterbar */}\n      <Filterbar filters={filters} setFilters={setFilters} getCdr={getCdr} />\n      {/* tpids loading */}\n      {getAllTpIdsLoading ? (\n        <div\n          style={{ width: \"100%\", height: \"50vh\" }}\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          Loading TPIds...\n        </div>\n      ) : null}\n      {/* table loading */}\n      {!getAllTpIdsLoading && loadings.getCdr ? (\n        <div className=\"datatable_loading_cover\">\n          <ProgressLoading />\n        </div>\n      ) : null}\n      {/* datatable */}\n      {!getAllTpIdsLoading && !loadings.getCdr ? (\n        <div className=\"react-dataTable mv_datatable_container\">\n          {!loadings.getCdr ? (\n            <Fragment>\n              <DataTable\n                noDataComponent={\n                  loadings.getCdr ? (\n                    \"\"\n                  ) : (\n                    <div style={{ margin: \"24px 0\" }}>No CDR Founded!</div>\n                  )\n                }\n                noHeader\n                columns={columns}\n                className=\"react-dataTable\"\n                style={{ background: \"red\" }}\n                data={listData}\n                theme={skin === \"dark\" ? \"darkTheme\" : \"\"}\n              />\n            </Fragment>\n          ) : null}\n          {loadings.getCdr ? (\n            <div className=\"datatable_loading_cover\">\n              <ProgressLoading />\n            </div>\n          ) : null}\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\nexport default CdrRoot;\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","import React from \"react\";\nimport \"./styles/progress_loading.scss\";\n\nconst ProgressLoading = () => {\n  return (\n    <div className=\"linear-activity\">\n      <div className=\"indeterminate\"></div>\n    </div>\n  );\n};\nexport default ProgressLoading;\n"],"sourceRoot":""}