{"version":3,"sources":["views/forms/form-elements/number-input/NumberInputSize.js","views/forms/form-elements/number-input/NumberInputBasic.js","views/forms/form-elements/number-input/NumberInputMinMax.js","views/forms/form-elements/number-input/NumberInputFormat.js","views/forms/form-elements/number-input/NumberInputColors.js","views/forms/form-elements/number-input/NumberInputDecimal.js","views/forms/form-elements/number-input/NumberInputControlled.js","views/forms/form-elements/number-input/index.js","@core/components/breadcrumbs/index.js"],"names":["NumberInputSize","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","CardBody","className","Label","for","InputNumber","defaultValue","upHandler","Plus","id","downHandler","Minus","NumberInputBasic","disabled","readOnly","NumberInputMinMax","min","max","NumberInputFormat","parser","num","cells","toString","split","replace","formatter","concat","colors","NumberInputColors","map","color","NumberInputDecimal","step","NumberInputControlled","value","setValue","useState","isDisabled","setIsDisabled","isReadOnly","setIsReadOnly","onChange","Button","size","onClick","NumberInput","Fragment","Breadcrumbs","title","data","Row","Col","md","sm","xs","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Link","to","item","index","Wrapper","link","isLastItem","length","active","classnames"],"mappings":"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","file":"static/js/120.7446c024.chunk.js","sourcesContent":["// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputSize = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Sizes</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='d-flex flex-wrap'>\n          <div className='me-2'>\n            <Label className='form-label' for='lg-number-input'>\n              Large Input\n            </Label>\n            <InputNumber\n              defaultValue={10}\n              className='input-lg'\n              upHandler={<Plus />}\n              id='lg-number-input'\n              downHandler={<Minus />}\n            />\n          </div>\n          <div>\n            <Label className='form-label' for='default-number-input'>\n              Default Input\n            </Label>\n            <InputNumber defaultValue={10} upHandler={<Plus />} id='default-number-input' downHandler={<Minus />} />\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputSize\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputBasic = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <div>\n            <Label className='form-label' for='basic-number-input'>\n              Basic Input\n            </Label>\n            <InputNumber id='basic-number-input' defaultValue={10} upHandler={<Plus />} downHandler={<Minus />} />\n          </div>\n          <div>\n            <Label className='form-label' for='disabled-number-input'>\n              Disabled Input\n            </Label>\n            <InputNumber\n              disabled\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='disabled-number-input'\n            />\n          </div>\n          <div>\n            <Label className='form-label' for='readOnly-number-input'>\n              ReadOnly Input\n            </Label>\n            <InputNumber\n              readOnly\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='readOnly-number-input'\n            />\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputBasic\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputMinMax = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Min Max</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='min-max-number-input'>\n            Min Max Input\n          </Label>\n          <InputNumber\n            min={0}\n            max={10}\n            defaultValue={5}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='min-max-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputMinMax\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputFormat = () => {\n  const numberWithCommas = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  }\n\n  const format = num => {\n    return `$ ${numberWithCommas(num)}`\n  }\n\n  const parser = num => {\n    const cells = num.toString().split(' ')\n    if (!cells[1]) {\n      return num\n    }\n\n    const parsed = cells[1].replace(/,*/g, '')\n\n    return parsed\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Formatting</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='formatting-number-input'>\n            Formatting Input\n          </Label>\n          <InputNumber\n            parser={parser}\n            defaultValue={5}\n            formatter={format}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='formatting-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputFormat\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info']\n\nconst NumberInputColors = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Colors</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          {colors.map(color => (\n            <div key={color}>\n              <Label className='form-label text-capitalize' for={`${color}-number-input`}>\n                {color} Input\n              </Label>\n              <InputNumber\n                defaultValue={10}\n                upHandler={<Plus />}\n                downHandler={<Minus />}\n                id={`${color}-number-input`}\n                className={`input-${color}`}\n              />\n            </div>\n          ))}\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputColors\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputDecimal = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Decimal</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='decimal-number-input'>\n            Decimal Input\n          </Label>\n          <InputNumber\n            step={0.1}\n            defaultValue={10}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='decimal-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputDecimal\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label, Button } from 'reactstrap'\n\nconst NumberInputControlled = () => {\n  const [value, setValue] = useState(1)\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(false)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='controlled-number-input'>\n            Controlled Input\n          </Label>\n          <InputNumber\n            value={value}\n            upHandler={<Plus />}\n            disabled={isDisabled}\n            readOnly={isReadOnly}\n            downHandler={<Minus />}\n            id='controlled-number-input'\n            onChange={value => setValue(value)}\n          />\n        </div>\n        <div className='demo-inline-spacing'>\n          <Button size='sm' color='primary' onClick={() => setIsDisabled(!isDisabled)}>\n            Toggle Disabled\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setIsReadOnly(!isReadOnly)}>\n            Toggle ReadOnly\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setValue(10)}>\n            Set Value to 10\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputControlled\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport NumberInputSize from './NumberInputSize'\nimport NumberInputBasic from './NumberInputBasic'\nimport NumberInputMinMax from './NumberInputMinMax'\nimport NumberInputFormat from './NumberInputFormat'\nimport NumberInputColors from './NumberInputColors'\nimport NumberInputDecimal from './NumberInputDecimal'\nimport NumberInputControlled from './NumberInputControlled'\n\n// ** Styles\nimport '@styles/react/libs/input-number/input-number.scss'\n\nconst NumberInput = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Number Input' data={[{ title: 'Form Elements' }, { title: 'Number Input' }]} />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <NumberInputBasic />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputControlled />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputDecimal />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputMinMax />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputSize />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputFormat />\n        </Col>\n        <Col xs='12'>\n          <NumberInputColors />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default NumberInput\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n"],"sourceRoot":""}