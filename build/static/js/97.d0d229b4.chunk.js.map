{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBaseCategory.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/pages/knowledge-base/KnowledgeBaseHeader.js"],"names":["KnowledgeBaseCategory","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","filteredData","setFilteredData","_useState5","_useState6","searchTerm","setSearchTerm","useEffect","axios","get","then","res","params","useParams","Content","_ref","item","IconTag","Icon","icon","_jsx","Col","className","md","sm","children","Card","_jsxs","CardBody","size","classnames","_defineProperty","iconColor","title","concat","questions","length","ListGroup","map","listItem","ListGroupItem","tag","Link","to","category","slug","question","id","Fragment","Breadcrumbs","KnowledgeBaseHeader","handleFilter","e","value","target","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj","_toConsumableArray","Row","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","index","Wrapper","link","isLastItem","active","_objectSpread","FaqFilter","style","backgroundImage","require","default","CardText","Form","onSubmit","preventDefault","InputGroup","InputGroupText","Search","Input","onChange","placeholder"],"mappings":"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","file":"static/js/97.d0d229b4.chunk.js","sourcesContent":["// ** React Imports\nimport { Link, useParams } from 'react-router-dom'\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport * as Icon from 'react-feather'\nimport classnames from 'classnames'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Styles\nimport '@styles/base/pages/page-knowledge-base.scss'\n\nconst KnowledgeBaseCategory = () => {\n  // ** States\n  const [data, setData] = useState(null),\n    [filteredData, setFilteredData] = useState([]),\n    [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    axios.get('/faq/data/category').then(res => setData(res.data))\n  }, [])\n\n  const params = useParams()\n\n  const Content = ({ item }) => {\n    const IconTag = Icon[item.icon]\n    return (\n      <Col className='kb-search-content' md='4' sm='6'>\n        <Card>\n          <CardBody>\n            <h6 className='kb-title'>\n              <IconTag\n                size={20}\n                className={classnames('me-50', {\n                  [item.iconColor]: item.iconColor\n                })}\n              />\n              <span>\n                {item.title} {`(${item.questions.length})`}\n              </span>\n            </h6>\n            <ListGroup className='list-group-circle mt-2'>\n              {item.questions.map(listItem => (\n                <ListGroupItem\n                  tag={Link}\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\n                  className='text-body'\n                  key={listItem.id}\n                >\n                  {listItem.question}\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </CardBody>\n        </Card>\n      </Col>\n    )\n  }\n\n  const renderContent = () => {\n    const dataToMap = searchTerm.length ? filteredData : data\n\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\n  }\n\n  const handleFilter = e => {\n    const value = e.target.value,\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\n\n    setSearchTerm(e.target.value)\n\n    let arr = []\n\n    if (value.length) {\n      arr = data.filter(item => {\n        return (\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\n        )\n      })\n    }\n\n    setFilteredData([...arr])\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs\n        title='Knowledge Base'\n        data={[{ title: 'Pages' }, { title: 'Knowledge Base' }, { title: 'Category' }]}\n      />\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\n      {data !== null ? (\n        <div id='knowledge-base-category'>\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\n        </div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default KnowledgeBaseCategory\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","// ** Icons Imports\nimport { Search } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\n\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\n  const onChange = e => {\n    if (handleFilter) {\n      handleFilter(e)\n    } else {\n      setSearchTerm(e.target.value)\n    }\n  }\n\n  return (\n    <div id='knowledge-base-search'>\n      <Card\n        className='knowledge-base-bg'\n        style={{\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\n        }}\n      >\n        <CardBody className='text-center'>\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\n          <CardText className='mb-2'>\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\n          </CardText>\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\n            <InputGroup className='input-group-merge'>\n              <InputGroupText>\n                <Search size={14} />\n              </InputGroupText>\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\n            </InputGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nexport default FaqFilter\n"],"sourceRoot":""}