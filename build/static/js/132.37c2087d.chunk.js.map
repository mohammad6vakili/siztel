{"version":3,"sources":["views/forms/form-elements/file-uploader/FileUploaderSingle.js","views/forms/form-elements/file-uploader/FileUploaderMultiple.js","views/forms/form-elements/file-uploader/FileUploaderRestrictions.js","views/forms/form-elements/file-uploader/index.js","@core/components/extensions-header/index.js"],"names":["FileUploaderSingle","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useDropzone","useDropzone","multiple","onDrop","acceptedFiles","concat","_toConsumableArray","map","file","Object","assign","getRootProps","getInputProps","renderFilePreview","type","startsWith","_jsx","className","alt","name","src","URL","createObjectURL","height","width","FileText","size","fileList","index","_jsxs","ListGroupItem","children","Math","round","toFixed","Button","color","outline","onClick","filtered","filter","i","handleRemoveFile","X","Card","CardHeader","CardTitle","tag","CardBody","_objectSpread","DownloadCloud","href","e","preventDefault","length","Fragment","ListGroup","FileUploaderMultiple","FileUploaderRestrictions","accept","rejectedFiles","toast","error","Uploader","ExtensionsHeader","title","link","subTitle","Row","Col","sm","props","target","rel"],"mappings":"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","file":"static/js/132.37c2087d.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Third Party Imports\nimport { useDropzone } from 'react-dropzone'\nimport { FileText, X, DownloadCloud } from 'react-feather'\n\nconst FileUploaderSingle = () => {\n  // ** State\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    onDrop: acceptedFiles => {\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n    }\n  })\n\n  const renderFilePreview = file => {\n    if (file.type.startsWith('image')) {\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n    } else {\n      return <FileText size='28' />\n    }\n  }\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  const handleRemoveAllFiles = () => {\n    setFiles([])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Single</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <div className='d-flex align-items-center justify-content-center flex-column'>\n            <DownloadCloud size={64} />\n            <h5>Drop Files here or click to upload</h5>\n            <p className='text-secondary'>\n              Drop files here or click{' '}\n              <a href='/' onClick={e => e.preventDefault()}>\n                browse\n              </a>{' '}\n              thorough your machine\n            </p>\n          </div>\n        </div>\n        {files.length ? (\n          <Fragment>\n            <ListGroup className='my-2'>{fileList}</ListGroup>\n            <div className='d-flex justify-content-end'>\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\n                Remove All\n              </Button>\n              <Button color='primary'>Upload Files</Button>\n            </div>\n          </Fragment>\n        ) : null}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderSingle\n","// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Third Party Imports\nimport { useDropzone } from 'react-dropzone'\nimport { FileText, X, DownloadCloud } from 'react-feather'\n\nconst FileUploaderMultiple = () => {\n  // ** State\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: acceptedFiles => {\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n    }\n  })\n\n  const renderFilePreview = file => {\n    if (file.type.startsWith('image')) {\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n    } else {\n      return <FileText size='28' />\n    }\n  }\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  const handleRemoveAllFiles = () => {\n    setFiles([])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Multiple</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <div className='d-flex align-items-center justify-content-center flex-column'>\n            <DownloadCloud size={64} />\n            <h5>Drop Files here or click to upload</h5>\n            <p className='text-secondary'>\n              Drop files here or click{' '}\n              <a href='/' onClick={e => e.preventDefault()}>\n                browse\n              </a>{' '}\n              thorough your machine\n            </p>\n          </div>\n        </div>\n        {files.length ? (\n          <Fragment>\n            <ListGroup className='my-2'>{fileList}</ListGroup>\n            <div className='d-flex justify-content-end'>\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\n                Remove All\n              </Button>\n              <Button color='primary'>Upload Files</Button>\n            </div>\n          </Fragment>\n        ) : null}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderMultiple\n","// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Third Party Imports\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport { X, DownloadCloud } from 'react-feather'\n\nconst FileUploaderRestrictions = () => {\n  // ** State\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    accept: 'image/*',\n    onDrop: (acceptedFiles, rejectedFiles) => {\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n      }\n    }\n  })\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>\n          <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n        </div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  const handleRemoveAllFiles = () => {\n    setFiles([])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Restrictions</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <div className='d-flex align-items-center justify-content-center flex-column'>\n            <DownloadCloud size={64} />\n            <h5>Drop Files here or click to upload</h5>\n            <p className='text-secondary'>\n              Drop files here or click{' '}\n              <a href='/' onClick={e => e.preventDefault()}>\n                browse\n              </a>{' '}\n              thorough your machine\n            </p>\n          </div>\n        </div>\n        {files.length ? (\n          <Fragment>\n            <ListGroup className='my-2'>{fileList}</ListGroup>\n            <div className='d-flex justify-content-end'>\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\n                Remove All\n              </Button>\n              <Button color='primary'>Upload Files</Button>\n            </div>\n          </Fragment>\n        ) : null}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderRestrictions\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Demo Components\nimport FileUploaderSingle from './FileUploaderSingle'\nimport FileUploaderMultiple from './FileUploaderMultiple'\nimport FileUploaderRestrictions from './FileUploaderRestrictions'\n\n// ** Styles\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\n\nconst Uploader = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Dropzone'\n        link='https://github.com/react-dropzone/react-dropzone'\n        subTitle=\"Simple React hook to create a HTML5-compliant drag'n'drop zone for files.\"\n      />\n\n      <Row>\n        <Col sm='12'>\n          <FileUploaderMultiple />\n        </Col>\n        <Col sm='12'>\n          <FileUploaderSingle />\n        </Col>\n        <Col sm='12'>\n          <FileUploaderRestrictions />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Uploader\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}