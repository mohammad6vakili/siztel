{"version":3,"sources":["views/forms/form-elements/input-mask/DateMask.js","views/forms/form-elements/input-mask/TimeMask.js","views/forms/form-elements/input-mask/PhoneMask.js","views/forms/form-elements/input-mask/BlocksMask.js","views/forms/form-elements/input-mask/PrefixMask.js","views/forms/form-elements/input-mask/DelimitersMask.js","views/forms/form-elements/input-mask/CreditCardMask.js","views/forms/form-elements/input-mask/CustomDelimitersMask.js","views/forms/form-elements/input-mask/NumeralFormattingMask.js","views/forms/form-elements/input-mask/index.js","@core/components/breadcrumbs/index.js"],"names":["DateMask","_jsxs","Fragment","children","_jsx","Label","for","Cleave","className","placeholder","options","date","delimiter","datePattern","id","TimeMask","time","timePattern","PhoneMask","InputGroup","InputGroupText","phone","phoneRegionCode","BlocksMask","blocks","uppercase","PrefixMask","prefix","DelimitersMask","CreditCardMask","creditCard","CustomDelimitersMask","delimiters","NumeralFormattingMask","numeral","numeralThousandsGroupStyle","InputMask","Breadcrumbs","title","data","Row","Col","sm","Card","CardHeader","CardTitle","tag","CardBody","xl","md","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames"],"mappings":"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","file":"static/js/172.bb3f0e06.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst DateMask = () => {\n  const options = { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }\n  return (\n    <Fragment>\n      <Label for='date'>Date</Label>\n      <Cleave className='form-control' placeholder='2001-01-01' options={options} id='date' />\n    </Fragment>\n  )\n}\n\nexport default DateMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst TimeMask = () => {\n  const options = { time: true, timePattern: ['h', 'm', 's'] }\n  return (\n    <Fragment>\n      <Label for='time'>Time</Label>\n      <Cleave className='form-control' placeholder='12:00:00' options={options} id='time' />\n    </Fragment>\n  )\n}\n\nexport default TimeMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\n// ** Reactstrap Components\nimport { InputGroup, InputGroupText, Label } from 'reactstrap'\n\nconst PhoneMask = () => {\n  const options = { phone: true, phoneRegionCode: 'US' }\n  return (\n    <Fragment>\n      <Label for='phone-number'>Phone Number</Label>\n      <InputGroup className='input-group-merge'>\n        <InputGroupText>US (+1)</InputGroupText>\n        <Cleave className='form-control' placeholder='1 234 567 8900' options={options} id='phone-number' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default PhoneMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst BlocksMask = () => {\n  const options = { blocks: [4, 3, 3], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='blocks'>Blocks</Label>\n      <Cleave className='form-control' placeholder='Blocks [4, 3, 3]' options={options} id='blocks' />\n    </Fragment>\n  )\n}\n\nexport default BlocksMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst PrefixMask = () => {\n  const options = { prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='prefix'>Prefix</Label>\n      <Cleave className='form-control' options={options} id='prefix' />\n    </Fragment>\n  )\n}\n\nexport default PrefixMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst DelimitersMask = () => {\n  const options = { delimiter: 'Â·', blocks: [3, 3, 3], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='delimiters'>Delimiters</Label>\n      <Cleave className='form-control' placeholder=\"Delimiter: '.'\" options={options} id='delimiters' />\n    </Fragment>\n  )\n}\n\nexport default DelimitersMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst CreditCardMask = () => {\n  const options = { creditCard: true }\n\n  return (\n    <Fragment>\n      <Label for='credit-card'>Credit Card</Label>\n      <Cleave className='form-control' placeholder='0000 0000 0000 0000' options={options} id='credit-card' />\n    </Fragment>\n  )\n}\n\nexport default CreditCardMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst CustomDelimitersMask = () => {\n  const options = { delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='custom-delimiters'>Custom Delimiters</Label>\n      <Cleave\n        className='form-control'\n        placeholder=\"Delimiter: ['.', '.', '-']\"\n        options={options}\n        id='custom-delimiters'\n      />\n    </Fragment>\n  )\n}\n\nexport default CustomDelimitersMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst NumeralFormattingMask = () => {\n  const options = { numeral: true, numeralThousandsGroupStyle: 'thousand' }\n\n  return (\n    <Fragment>\n      <Label for='numeral-formatting'>Numeral Formatting</Label>\n      <Cleave className='form-control' placeholder='10,000' options={options} id='numeral-formatting' />\n    </Fragment>\n  )\n}\n\nexport default NumeralFormattingMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Demo Components\nimport DateMask from './DateMask'\nimport TimeMask from './TimeMask'\nimport PhoneMask from './PhoneMask'\nimport BlocksMask from './BlocksMask'\nimport PrefixMask from './PrefixMask'\nimport DelimitersMask from './DelimitersMask'\nimport CreditCardMask from './CreditCardMask'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport CustomDelimitersMask from './CustomDelimitersMask'\nimport NumeralFormattingMask from './NumeralFormattingMask'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, CardTitle, CardHeader } from 'reactstrap'\n\nconst InputMask = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Input Mask' data={[{ title: 'Form Elements' }, { title: 'Input Mask' }]} />\n      <Row>\n        <Col sm='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Input Masks</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <CreditCardMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <PhoneMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <DateMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <TimeMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <NumeralFormattingMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <BlocksMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <DelimitersMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <CustomDelimitersMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <PrefixMask />\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default InputMask\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n"],"sourceRoot":""}