{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBaseCategoryQuestion.js","@core/components/breadcrumbs/index.js"],"names":["KnowledgeBaseCategoryQuestion","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","axios","get","then","res","_jsxs","Fragment","children","_jsx","Breadcrumbs","title","id","Row","Col","lg","md","size","order","sm","xs","Card","CardBody","className","Info","ListGroup","relatedQuestions","map","i","ListGroupItem","tag","href","onClick","e","preventDefault","question","CardTitle","Smartphone","lastUpdated","dangerouslySetInnerHTML","__html","content","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Link","to","item","index","Wrapper","link","isLastItem","length","active","classnames","_objectSpread"],"mappings":"0OAuEeA,UA1DuB,WAEpC,IAAAC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEpBI,qBAAU,WACRC,IAAMC,IAAI,sBAAsBC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIN,KAAK,GAC/D,GAAG,IAUH,OACEO,eAACC,WAAQ,CAAAC,SAAA,CACPC,cAACC,IAAW,CACVC,MAAM,iBACNZ,KAAM,CAAC,CAAEY,MAAO,SAAW,CAAEA,MAAO,kBAAoB,CAAEA,MAAO,YAAc,CAAEA,MAAO,eAEhF,OAATZ,EACCU,cAAA,OAAKG,GAAG,0BAAyBJ,SAC/BF,eAACO,KAAG,CAAAL,SAAA,CACFC,cAACK,IAAG,CAACC,GAAG,IAAIC,GAAI,CAAEC,KAAM,EAAGC,MAAO,GAAKC,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEF,MAAO,GAAIV,SACxEC,cAACY,IAAI,CAAAb,SACHF,eAACgB,IAAQ,CAAAd,SAAA,CACPF,eAAA,MAAIiB,UAAU,WAAUf,SAAA,CACtBC,cAACe,IAAI,CAACP,KAAM,GAAIM,UAAU,UAC1Bd,cAAA,QAAAD,SAAM,yBAERC,cAACgB,IAAS,CAACF,UAAU,yBAAwBf,SAvBpDT,EAAK2B,iBAAiBC,KAAI,SAAAC,GAAC,OAChCnB,cAACoB,IAAa,CAACN,UAAU,YAAYO,IAAI,IAAIC,KAAK,IAAeC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,gBAAgB,EAAC1B,SAC/FoB,EAAEO,UADsDP,EAAEhB,GAE7C,aAwBVH,cAACK,IAAG,CAACC,GAAG,IAAIC,GAAI,CAAEC,KAAM,EAAGC,MAAO,GAAKC,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEF,MAAO,GAAIV,SACxEC,cAACY,IAAI,CAAAb,SACHF,eAACgB,IAAQ,CAAAd,SAAA,CACPF,eAAC8B,IAAS,CAACb,UAAU,OAAMf,SAAA,CACzBC,cAAC4B,IAAU,CAACd,UAAU,yBAAyB,IAACd,cAAA,QAAAD,SAAOT,EAAKY,WAE9DL,eAAA,KAAGiB,UAAU,OAAMf,SAAA,CAAC,mBAAiBT,EAAKuC,eAC1C7B,cAAA,OACE8B,wBAAyB,CACvBC,OAAQzC,EAAK0C,uBAQzB,OAGV,C,+FCJeC,IA/CK,SAACC,GAEnB,IAAQ5C,EAAgB4C,EAAhB5C,KAAMY,EAAUgC,EAAVhC,MAqBd,OACEF,cAAA,OAAKc,UAAU,qBAAoBf,SACjCC,cAAA,OAAKc,UAAU,iDAAgDf,SAC7DC,cAAA,OAAKc,UAAU,sBAAqBf,SAClCF,eAAA,OAAKiB,UAAU,SAAQf,SAAA,CACpBG,EACCF,cAAA,MAAIc,UAAU,wCAAuCf,SAAEG,IAEvD,GAEFF,cAAA,OAAKc,UAAU,6DAA4Df,SACzEF,eAACsC,IAAU,CAAApC,SAAA,CACTC,cAACoC,IAAc,CAACf,IAAI,KAAItB,SACtBC,cAACqC,IAAI,CAACC,GAAG,IAAGvC,SAAC,gBA/BpBT,EAAK4B,KAAI,SAACqB,EAAMC,GACrB,IAAMC,EAAUF,EAAKG,KAAOL,IAAOvC,WAC7B6C,EAAarD,EAAKsD,OAAS,IAAMJ,EACvC,OACExC,cAACoC,IAAc,CACbf,IAAI,KAEJwB,QAASF,EACT7B,UAAWgC,IAAW,CAAE,gBAAiBH,IAAc5C,SAEvDC,cAACyC,EAAOM,wBAAA,GAAMR,EAAKG,KAAO,CAAEJ,GAAIC,EAAKG,MAAS,CAAC,GAAC,IAAA3C,SAC7CwC,EAAKrC,UALHsC,EASX,iBA0BJ,C","file":"static/js/182.07037425.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Info, Smartphone } from 'react-feather'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, CardTitle, ListGroup, ListGroupItem } from 'reactstrap'\n\nconst KnowledgeBaseCategoryQuestion = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/faq/data/question').then(res => setData(res.data))\n  }, [])\n\n  const renderRelatedQuestions = () => {\n    return data.relatedQuestions.map(i => (\n      <ListGroupItem className='text-body' tag='a' href='/' key={i.id} onClick={e => e.preventDefault()}>\n        {i.question}\n      </ListGroupItem>\n    ))\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs\n        title='Knowledge Base'\n        data={[{ title: 'Pages' }, { title: 'Knowledge Base' }, { title: 'Category' }, { title: 'Question' }]}\n      />\n      {data !== null ? (\n        <div id='knowledge-base-question'>\n          <Row>\n            <Col lg='3' md={{ size: 5, order: 1 }} sm={{ size: 12 }} xs={{ order: 2 }}>\n              <Card>\n                <CardBody>\n                  <h6 className='kb-title'>\n                    <Info size={20} className='me-50' />\n                    <span>Related Questions</span>\n                  </h6>\n                  <ListGroup className='list-group-circle mt-1'>{renderRelatedQuestions()}</ListGroup>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg='9' md={{ size: 7, order: 2 }} sm={{ size: 12 }} xs={{ order: 1 }}>\n              <Card>\n                <CardBody>\n                  <CardTitle className='mb-1'>\n                    <Smartphone className='font-medium-5  me-25' /> <span>{data.title}</span>\n                  </CardTitle>\n                  <p className='mb-2'>Last updated on {data.lastUpdated}</p>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: data.content\n                    }}\n                  ></div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default KnowledgeBaseCategoryQuestion\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n"],"sourceRoot":""}