{"version":3,"sources":["views/forms/form-elements/input-groups/InputGroupBasic.js","views/forms/form-elements/input-groups/InputGroupSizes.js","views/forms/form-elements/input-groups/InputGroupMerged.js","views/forms/form-elements/input-groups/InputGroupButtons.js","views/forms/form-elements/input-groups/InputGroupCbAndRadio.js","views/forms/form-elements/input-groups/InputGroupDropdown.js","views/forms/form-elements/input-groups/InputGroupSourceCode.js","views/forms/form-elements/input-groups/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js","@core/components/input-password-toggle/index.js"],"names":["InputGroupBasic","_jsxs","Fragment","children","InputGroup","className","_jsx","InputGroupText","Search","size","Input","placeholder","InputPasswordToggle","label","htmlFor","type","InputGroupSizes","InputGroupMerged","InputGroupButtons","Row","Col","md","sm","Button","color","outline","InputGroupCbAndRadio","Label","for","id","name","InputGroupDropdowns","_useState","useState","_useState2","_slicedToArray","dropdownOpen","setDropdownOpen","_useState3","_useState4","dropdownIcon","setDropdownIcon","_useState5","_useState6","dropdownRight","setDropdownRight","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","disabled","divider","Edit","inputGroupBasic","inputGroupMerged","inputGroupCBRadio","inputGroupButtons","inputGroupDropdowns","inputGroupSizes","InputGroups","useEffect","Prism","highlightAll","Breadcrumbs","title","data","Card","code","InputCbAndRadio","InputGroupDropdown","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","_objectSpread","CardSnippet","noBody","iconCode","setIsOpen","IconCode","Code","CardBody","CardHeader","CardTitle","onClick","Collapse","forwardRef","ref","_classnames","hideIcon","showIcon","visible","iconSize","inputClassName","invalid","rest","_objectWithoutProperties","_excluded","inputVisibility","setInputVisibility","_defineProperty","Eye","EyeOff","renderIcon","defaultProps"],"mappings":"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","file":"static/js/115.95a44e7e.chunk.js","sourcesContent":["import { Fragment } from 'react'\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupBasic = () => {\n  return (\n    <Fragment>\n      <InputGroup className='mb-2'>\n        <InputGroupText>\n          <Search size={14} />\n        </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\n      <InputGroup className='mb-2'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n        <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup>\n        <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputGroupBasic\n","import { Fragment } from 'react'\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\n\nconst InputGroupSizes = () => {\n  return (\n    <Fragment>\n      <InputGroup className='mb-1' size='lg'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup className='mb-1'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup size='sm'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputGroupSizes\n","import { Fragment } from 'react'\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupMerged = () => {\n  return (\n    <Fragment>\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>\n          <Search size={14} />\n        </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='merge-password' />\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n        <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup className='input-group-merge'>\n        <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputGroupMerged\n","import { Button, InputGroup, Input, Row, Col } from 'reactstrap'\nimport { Search } from 'react-feather'\n\nconst InputGroupButtons = () => {\n  return (\n    <Row>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <Input placeholder='Button on right side' />\n          <Button color='primary' outline>\n            Go\n          </Button>\n        </InputGroup>\n      </Col>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <Button color='primary' outline>\n            <Search size={12} />\n          </Button>\n          <Input type='text' placeholder='Button on both sides' />\n          <Button color='primary' outline>\n            Search !\n          </Button>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupButtons\n","import { InputGroup, InputGroupText, Row, Col, Input, Label } from 'reactstrap'\n\nconst InputGroupCbAndRadio = () => {\n  return (\n    <Row>\n      <Label for='col-cb'>Input Group with Checkbox</Label>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Label for='col-radio'>Input Group with Radio</Label>\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupCbAndRadio\n","import { useState } from 'react'\n\nimport { Row, Col, Input, InputGroup, Dropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nimport { Edit } from 'react-feather'\n\nconst InputGroupDropdowns = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const [dropdownIcon, setDropdownIcon] = useState(false)\n  const [dropdownRight, setDropdownRight] = useState(false)\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n  const toggleDropdownIcon = () => {\n    setDropdownIcon(!dropdownIcon)\n  }\n  const toggleDropDownRight = () => {\n    setDropdownRight(!dropdownRight)\n  }\n\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\n            <DropdownToggle color='primary' caret outline>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\n              <DropdownItem className='w-100' disabled>\n                Action\n              </DropdownItem>\n              <DropdownItem className='w-100' divider />\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\n            <DropdownToggle color='primary' caret outline>\n              <Edit size={12} />\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\n              <DropdownItem className='w-100' disabled>\n                Action\n              </DropdownItem>\n              <DropdownItem className='w-100' divider />\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\n            <DropdownToggle color='primary' outline caret>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\n              <DropdownItem className='w-100' disabled>\n                Action\n              </DropdownItem>\n              <DropdownItem className='w-100' divider />\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupDropdowns\n","export const inputGroupBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupBasic = () => {\n  return (\n    <React.Fragment>\n      <InputGroup className='mb-2'>\n          <InputGroupText>\n            <Search size={14} />\n          </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\n      <InputGroup className='mb-2'>\n          <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n          <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='mb-2'>\n          <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n          <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup>\n          <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </React.Fragment>\n  )\n}\n\nexport default InputGroupBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupMerged = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupMerged = () => {\n  return (\n    <React.Fragment>\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>\n            <Search size={14} />\n          </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='basic-default-password' />\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n          <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup className='input-group-merge'>\n          <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </React.Fragment>\n  )\n}\n\nexport default InputGroupMerged\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupCBRadio = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { InputGroup, Input, InputGroupText, Row, Col, Input } from 'reactstrap'\n\nconst InputGroupCbAndRadio = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <InputGroup>\n            <InputGroupText>\n              <input type='checkbox' />\n            </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n            <InputGroupText>\n              <input type='radio' />\n            </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <small className='fw-semibold w-100 ms-1 my-1'>Custom checkbox and radio</small>\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupCbAndRadio\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupButtons = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, InputGroup, Input,  Row, Col } from 'reactstrap'\nimport { Search } from 'react-feather'\n\nconst InputGroupButtons = () => {\n  return (\n    <Row>\n      <Col className='mb-1' lg='6' md='12'>\n        <InputGroup>\n          <Input />\n            <Button color='primary' outline>\n              Go\n            </Button>\n        </InputGroup>\n      </Col>\n      <Col className='mb-1' lg='6' md='12'>\n        <InputGroup>\n            <Button color='primary' outline>\n              <Search size={12} />\n            </Button>\n          <Input type='text' />\n            <Button color='primary' outline>\n              Search !\n            </Button>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupButtons\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupDropdowns = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport {\n  Row,\n  Col,\n  Input,\n  Dropdown,\n\n  InputGroup,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\nimport { Edit } from 'react-feather'\n\nconst InputGroupDropdowns = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const [dropdownIcon, setDropdownIcon] = useState(false)\n  const [dropdownRight, setDropdownRight] = useState(false)\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n  const toggleDropdownIcon = () => {\n    setDropdownIcon(!dropdownIcon)\n  }\n  const toggleDropDownRight = () => {\n    setDropdownRight(!dropdownRight)\n  }\n\n  return (\n    <Row>\n      <Col lg='6' md='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\n            <DropdownToggle color='primary' caret outline>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem>Action 1</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n        </InputGroup>\n      </Col>\n      <Col lg='6' md='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\n            <DropdownToggle color='primary' caret outline>\n              <Edit size={12} />\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem>Action 1</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\n            <DropdownToggle color='primary' outline caret>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem>Action 1</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupDropdowns\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\n\nconst InputGroupSizes = () => {\n  return (\n    <React.Fragment>\n      <InputGroup className='mb-1' size='lg'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup className='mb-1'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup size='sm'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n    </React.Fragment>\n  )\n}\n\nexport default InputGroupSizes\n  `}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport InputGroupBasic from './InputGroupBasic'\nimport InputGroupSizes from './InputGroupSizes'\nimport InputGroupMerged from './InputGroupMerged'\nimport InputGroupButtons from './InputGroupButtons'\nimport InputCbAndRadio from './InputGroupCbAndRadio'\nimport InputGroupDropdown from './InputGroupDropdown'\n\n// ** Source Code\nimport {\n  inputGroupBasic,\n  inputGroupSizes,\n  inputGroupMerged,\n  inputGroupCBRadio,\n  inputGroupButtons,\n  inputGroupDropdowns\n} from './InputGroupSourceCode'\n\nconst InputGroups = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n  return (\n    <Fragment>\n      <Breadcrumbs title='Input Groups' data={[{ title: 'Form Elements' }, { title: 'InputGroups' }]} />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <Card title='Basic' code={inputGroupBasic}>\n            <InputGroupBasic />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Merged' code={inputGroupMerged}>\n            <InputGroupMerged />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Sizing' code={inputGroupSizes}>\n            <InputGroupSizes />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Checkbox & Radio' code={inputGroupCBRadio}>\n            <InputCbAndRadio />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Input Group with Buttons' code={inputGroupButtons}>\n            <InputGroupButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Input Group Dropdowns' code={inputGroupDropdowns}>\n            <InputGroupDropdown />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default InputGroups\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from \"react\";\n\n// ** Third Party Components\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Eye, EyeOff } from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from \"reactstrap\";\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props;\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible);\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14;\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />;\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />;\n    }\n  };\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className=\"form-label\" for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          \"is-invalid\": invalid,\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? \"password\" : \"text\"}\n          placeholder={placeholder ? placeholder : \"············\"}\n          className={classnames({\n            [inputClassName]: inputClassName,\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor,\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText\n          className=\"cursor-pointer\"\n          onClick={() => setInputVisibility(!inputVisibility)}\n        >\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  );\n});\n\nexport default InputPasswordToggle;\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props[\"htmlFor\"] === \"undefined\") {\n      throw new Error(\"htmlFor prop is required when label prop is present\");\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props[\"label\"] === \"undefined\") {\n      throw new Error(\"label prop is required when htmlFor prop is present\");\n    }\n  },\n};\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false,\n};\n"],"sourceRoot":""}