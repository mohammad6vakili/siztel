{"version":3,"sources":["views/ui-elements/cards/statistics/StatsCard.js","@core/components/widgets/stats/ChartOptions.js","@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","@core/components/widgets/stats/StatsWithAreaChart.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/OrdersReceived.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js","views/ui-elements/cards/statistics/RevenueGenerated.js","views/ui-elements/cards/statistics/SubscribersGained.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/avatar/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["StatsCard","_ref","cols","data","title","subtitle","color","icon","_jsx","TrendingUp","size","User","Box","DollarSign","_jsxs","Card","className","children","CardHeader","CardTitle","tag","CardText","CardBody","Row","map","item","index","colMargin","Object","keys","margin","Col","classnames","concat","length","Avatar","StatsWithLineChart","stats","statTitle","series","options","type","height","rest","Chart","defaultProps","chart","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","Newsletter","warning","setData","useState","useEffect","axios","get","then","res","id","Mail","SiteTraffic","Monitor","ActiveUsers","success","UserCheck","StatsWithAreaChart","props","QuarterlySales","danger","ShoppingCart","analyticsData","sales","OrdersReceived","kFormatter","Package","orders","TinyChartStats","OrdersBarChart","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","ProfitLineChart","info","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize","RevenueGenerated","CreditCard","revenue","SubscribersGained","Users","subscribers","StatsVertical","StatisticsCards","context","useContext","ThemeColors","Fragment","Breadcrumbs","lg","xs","main","sm","md","xl","Eye","MessageSquare","ShoppingBag","Heart","Award","Truck","StatsHorizontal","Cpu","Server","Activity","AlertOctagon","QuaterlySales","BreadCrumbs","Breadcrumb","BreadcrumbItem","Link","to","Wrapper","link","isLastItem","active","forwardRef","ref","img","status","badgeUp","content","Tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","undefined","str","results","split","forEach","e","push","join","getInitials","Badge","pill","src","alt","renderStats","statsMargin"],"mappings":"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","file":"static/js/112.ac6e8eba.chunk.js","sourcesContent":["// ** Third Party Components\nimport classnames from 'classnames'\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst StatsCard = ({ cols }) => {\n  const data = [\n    {\n      title: '230k',\n      subtitle: 'Sales',\n      color: 'light-primary',\n      icon: <TrendingUp size={24} />\n    },\n    {\n      title: '8.549k',\n      subtitle: 'Customers',\n      color: 'light-info',\n      icon: <User size={24} />\n    },\n    {\n      title: '1.423k',\n      subtitle: 'Products',\n      color: 'light-danger',\n      icon: <Box size={24} />\n    },\n    {\n      title: '$9745',\n      subtitle: 'Revenue',\n      color: 'light-success',\n      icon: <DollarSign size={24} />\n    }\n  ]\n\n  const renderData = () => {\n    return data.map((item, index) => {\n      const colMargin = Object.keys(cols)\n      const margin = index === 2 ? 'sm' : colMargin[0]\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h4 className='fw-bolder mb-0'>{item.title}</h4>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText>\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='fw-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  color: 'primary',\n  options: areaChartOptions\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Package } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  options: PropTypes.object.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Users } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(data.analyticsData.subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='fw-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Custom Components\nimport StatsCard from './StatsCard'\nimport Newsletter from './Newsletter'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport RevenueGenerated from './RevenueGenerated'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SubscribersGained from './SubscribersGained'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport {\n  Eye,\n  Cpu,\n  Heart,\n  Award,\n  Truck,\n  Server,\n  Activity,\n  ShoppingBag,\n  AlertOctagon,\n  MessageSquare\n} from 'react-feather'\n\nconst StatisticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Statistics Cards' data={[{ title: 'Cards' }, { title: 'Statistics Cards' }]} />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n"],"sourceRoot":""}