{"version":3,"sources":["views/components/progress/ProgressBasic.js","views/components/progress/ProgressColored.js","views/components/progress/ProgressLabeled.js","views/components/progress/ProgressStriped.js","views/components/progress/ProgressAnimated.js","views/components/progress/ProgressMultipleStacked.js","views/components/progress/ProgressSourceCode.js","views/components/progress/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["ProgressBasic","_jsxs","className","children","_jsx","Progress","value","ProgressColored","ProgressLabeled","ProgressStriped","striped","ProgressAnimated","animated","ProgressMultipleStacked","multi","bar","color","progressBasic","progressColored","progressMultipleStacked","progressLabeled","progressStriped","progressAnimated","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","title","data","Row","Col","lg","Card","code","CardText","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","CardSnippet","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Code","size","CardBody","CardHeader","CardTitle","onClick","toggle","Collapse"],"mappings":"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","file":"static/js/151.892a0a80.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressBasic = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <div>\n        <span>Reticulating splines… 0%</span>\n        <Progress />\n      </div>\n      <div>\n        <span>Reticulating splines… 25%</span>\n        <Progress value='25' />\n      </div>\n      <div>\n        <span>Reticulating splines… 50%</span>\n        <Progress value={50} />\n      </div>\n      <div>\n        <span>Reticulating splines… 75%</span>\n        <Progress value={75} />\n      </div>\n      <div>\n        <span>Reticulating splines… 100%</span>\n        <Progress value='100' />\n      </div>\n    </div>\n  )\n}\nexport default ProgressBasic\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressColored = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress value={25} />\n      <Progress className='progress-bar-secondary' value={35} />\n      <Progress className='progress-bar-success' value={45} />\n      <Progress className='progress-bar-danger' value={55} />\n      <Progress className='progress-bar-warning' value={65} />\n      <Progress className='progress-bar-info' value={75} />\n      <Progress className='progress-bar-dark' value={85} />\n    </div>\n  )\n}\nexport default ProgressColored\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressLabeled = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress value='25'>25%</Progress>\n      <Progress value='35' className='progress-bar-secondary'>\n        35%\n      </Progress>\n      <Progress value='45' className='progress-bar-success'>\n        45%\n      </Progress>\n      <Progress value='55' className='progress-bar-danger'>\n        55%\n      </Progress>\n      <Progress className='progress-bar-warning' value='65'>\n        65%\n      </Progress>\n      <Progress className='progress-bar-info' value='75'>\n        75%\n      </Progress>\n      <Progress className='progress-bar-dark' value='85'>\n        85%\n      </Progress>\n    </div>\n  )\n}\nexport default ProgressLabeled\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressStriped = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress striped value={20} />\n      <Progress striped className='progress-bar-success' value={40} />\n      <Progress striped className='progress-bar-danger' value={60} />\n      <Progress striped className='progress-bar-warning' value={80} />\n      <Progress striped className='progress-bar-info' value={100} />\n    </div>\n  )\n}\nexport default ProgressStriped\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressAnimated = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress animated striped value={20} />\n      <Progress animated striped className='progress-bar-success' value={40} />\n      <Progress animated striped className='progress-bar-danger' value={60} />\n      <Progress animated striped className='progress-bar-warning' value={80} />\n      <Progress animated striped className='progress-bar-info' value={100} />\n    </div>\n  )\n}\nexport default ProgressAnimated\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressMultipleStacked = () => {\n  return (\n    <Progress multi>\n      <Progress bar color='danger' value='15'>\n        15%\n      </Progress>\n      <Progress bar color='warning' value='50'>\n        50%\n      </Progress>\n      <Progress bar color='primary' value='10'>\n        10%\n      </Progress>\n    </Progress>\n  )\n}\nexport default ProgressMultipleStacked\n","export const progressBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\nconst ProgressBasic = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <div>\n        <span>Reticulating splines… 0%</span>\n        <Progress />\n      </div>\n      <div>\n        <span>Reticulating splines… 25%</span>\n        <Progress value='25' />\n      </div>\n      <div>\n        <span>Reticulating splines… 50%</span>\n        <Progress value={50} />\n      </div>\n      <div>\n        <span>Reticulating splines… 75%</span>\n        <Progress value={75} />\n      </div>\n      <div>\n        <span>Reticulating splines… 100%</span>\n        <Progress value='100' />\n      </div>\n    </div>\n  )\n}\nexport default ProgressBasic\n`}\n    </code>\n  </pre>\n)\n\nexport const progressColored = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressColored = () => {\n  return (\n    <React.Fragment>\n      <Progress value={25} />\n      <Progress className='progress-bar-secondary' value={35} />\n      <Progress className='progress-bar-success' value={45} />\n      <Progress className='progress-bar-danger' value={55} />\n      <Progress className='progress-bar-warning' value={65} />\n      <Progress className='progress-bar-info' value={75} />\n      <Progress className='progress-bar-dark' value={85} />\n    </React.Fragment>\n  )\n}\nexport default ProgressColored\n`}\n    </code>\n  </pre>\n)\n\nexport const progressMultipleStacked = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressMultipleStacked = () => {\n  return (\n     <Progress multi>\n        <Progress bar color='danger' value='15'>\n          15%\n        </Progress>\n        <Progress bar color='warning' value='50'>\n          50%\n        </Progress>\n        <Progress bar color='primary' value='10'>\n          10%\n        </Progress>\n    </Progress>\n  )\n}\nexport default ProgressMultipleStacked\n`}\n    </code>\n  </pre>\n)\n\nexport const progressLabeled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressLabeled = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress value='25'>25%</Progress>\n      <Progress value='35' className='progress-bar-secondary'>\n        35%\n      </Progress>\n      <Progress value='45' className='progress-bar-success'>\n        45%\n      </Progress>\n      <Progress value='55' className='progress-bar-danger'>\n        55%\n      </Progress>\n      <Progress className='progress-bar-warning' value='65'>\n        65%\n      </Progress>\n      <Progress className='progress-bar-info' value='75'>\n        75%\n      </Progress>\n      <Progress className='progress-bar-dark' value='85'>\n        85%\n      </Progress>\n    </div>\n  )\n}\nexport default ProgressLabeled\n`}\n    </code>\n  </pre>\n)\n\nexport const progressStriped = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\nconst ProgressStriped = () => {\n  return (\n    <React.Fragment>\n      <Progress striped value={20} />\n      <Progress striped className='progress-bar-success' value={40} />\n      <Progress striped className='progress-bar-danger' value={60} />\n      <Progress striped className='progress-bar-warning' value={80} />\n      <Progress striped className='progress-bar-info' value={100} />\n    </React.Fragment>\n  )\n}\nexport default ProgressStriped\n`}\n    </code>\n  </pre>\n)\n\nexport const progressAnimated = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressAnimated = () => {\n  return (\n    <React.Fragment>\n      <Progress striped value={20} />\n      <Progress striped className='progress-bar-success' value={40} />\n      <Progress striped className='progress-bar-danger' value={60} />\n      <Progress striped className='progress-bar-warning' value={80} />\n      <Progress striped className='progress-bar-info' value={100} />\n    </React.Fragment>\n  )\n}\nexport default ProgressAnimated\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport ProgressBasic from './ProgressBasic'\nimport ProgressColored from './ProgressColored'\nimport ProgressLabeled from './ProgressLabeled'\nimport ProgressStriped from './ProgressStriped'\nimport ProgressAnimated from './ProgressAnimated'\nimport ProgressMultipleStacked from './ProgressMultipleStacked'\n\n// ** Source Code\nimport {\n  progressBasic,\n  progressColored,\n  progressLabeled,\n  progressStriped,\n  progressAnimated,\n  progressMultipleStacked\n} from './ProgressSourceCode'\n\nconst Progress = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Progress' data={[{ title: 'Components' }, { title: 'Progress' }]} />\n      <Row>\n        <Col lg='12'>\n          <Card title='Basic Progress' code={progressBasic}>\n            <ProgressBasic />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Colored Progress' code={progressColored}>\n            <CardText>\n              Use <code>progress-bar-[color]</code> class with progress to change progress color.\n            </CardText>\n            <ProgressColored />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Labeled Progress' code={progressLabeled}>\n            <CardText>Add text between progress tag to create a labeled progress bar.</CardText>\n            <ProgressLabeled />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Multiple Stacked' code={progressMultipleStacked}>\n            <CardText>\n              To create a multi colored progress wrap all of your progresses in with <code>multi</code> prop.\n            </CardText>\n            <ProgressMultipleStacked />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Striped Progress' code={progressStriped}>\n            <CardText>\n              Use <code>striped</code> prop with progress to create a striped progress bar.\n            </CardText>\n            <ProgressStriped />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Animated Progress' code={progressAnimated}>\n            <CardText>\n              Use <code>animated</code> prop with progress to animate progress bar.\n            </CardText>\n            <ProgressAnimated />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Progress\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}