{"version":3,"sources":["views/pages/profile/ProfilePolls.js","views/pages/profile/ProfileAbout.js","views/pages/profile/ProfilePosts.js","views/pages/profile/ProfileHeader.js","views/pages/profile/ProfileTwitterFeeds.js","views/pages/profile/ProfileLatestPhotos.js","views/pages/profile/ProfileSuggestedPages.js","views/pages/profile/ProfileFriendsSuggestions.js","views/pages/profile/index.js","@core/components/breadcrumbs/index.js","@core/components/avatar/index.js","@core/components/ui-loader/index.js"],"names":["ProfilePolls","_ref","data","_jsx","Card","children","_jsxs","CardBody","className","CardText","map","option","index","Input","type","name","id","concat","toLowerCase","Label","for","result","Progress","value","replace","trim","classnames","votedUser","user","Fragment","Avatar","imgWidth","imgHeight","img","username","split","join","UncontrolledTooltip","target","placement","ProfileAbout","about","joined","lives","email","website","ProfilePosts","post","avatar","postTime","postText","postImg","src","alt","postVid","Row","Col","sm","Heart","size","youLiked","likes","likedUsers","href","onClick","e","preventDefault","likedCount","MessageSquare","comments","Share2","share","detailedComments","comment","commentsLikes","rows","placeholder","Button","color","ProfileHeader","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","CardImg","coverImg","top","designation","Navbar","container","expand","light","AlignJustify","Collapse","navbar","Nav","pills","NavItem","NavLink","active","Rss","Info","Image","Users","Edit","ProfileTwitterFeeds","feed","imgUrl","title","CheckCircle","Star","favorite","desc","tags","ProfileLatestPhotos","item","md","xs","ProfileSuggestedPages","suggestion","length","subtitle","ProfileFriendsSuggestions","mutualFriend","UserPlus","Profile","setData","_useState3","_useState4","block","setBlock","useEffect","axios","get","then","response","Breadcrumbs","header","lg","order","userAbout","suggestedPages","twitterFeeds","latestPhotos","suggestions","ProfilePoll","polls","setTimeout","UILoader","blocking","overlayColor","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","Wrapper","link","isLastItem","_objectSpread","forwardRef","ref","_classnames","_classnames3","icon","status","badgeUp","content","Tag","initials","badgeText","badgeColor","imgClassName","contentStyles","rest","_objectWithoutProperties","_excluded","_defineProperty","undefined","style","str","results","forEach","push","getInitials","Badge","pill","height","width","defaultProps","loader","backgroundColor","Spinner"],"mappings":"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","file":"static/js/59.409c0a5e.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Progress, Input, Label, UncontrolledTooltip } from 'reactstrap'\n\nconst ProfilePolls = ({ data }) => {\n  const renderOptions = () => {\n    return data.map((option, index) => {\n      return (\n        <div key={option.name} className='profile-polls-info mt-2'>\n          <div className='d-flex justify-content-between'>\n            <div className='form-check'>\n              <Input type='radio' name='polls' id={`radio-${option.name.toLowerCase()}`} />\n              <Label className='form-check-label' for={`radio-${option.name.toLowerCase()}`}>\n                {option.name}\n              </Label>\n            </div>\n            <div className='text-end'>{option.result}</div>\n          </div>\n          <Progress className='my-50' value={option.result.replace('%', ' ').trim()} />\n          <div\n            className={classnames('avatar-group', {\n              'mt-1': index > 0,\n              'my-1': index === 0\n            })}\n          >\n            {option.votedUser.map(user => {\n              return (\n                <Fragment key={user.username}>\n                  <Avatar\n                    imgWidth='26'\n                    imgHeight='26'\n                    img={user.img}\n                    className='pull-up'\n                    id={user.username.toLowerCase().split(' ').join('-')}\n                  />\n                  <UncontrolledTooltip target={user.username.toLowerCase().split(' ').join('-')} placement='top'>\n                    {user.username}\n                  </UncontrolledTooltip>\n                </Fragment>\n              )\n            })}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <h5 className='mb-1'>Polls</h5>\n        <CardText className='mb-0'>Who is the best actor in Marvel Cinematic Universe?</CardText>\n        {renderOptions()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ProfilePolls\n","// ** Reactstrap Imports\nimport { Card, CardBody, CardText } from 'reactstrap'\n\nconst ProfileAbout = ({ data }) => {\n  return (\n    <Card>\n      <CardBody>\n        <h5 className='mb-75'>About</h5>\n        <CardText>{data.about}</CardText>\n        <div className='mt-2'>\n          <h5 className='mb-75'>Joined:</h5>\n          <CardText>{data.joined}</CardText>\n        </div>\n        <div className='mt-2'>\n          <h5 className='mb-75'>Lives:</h5>\n          <CardText>{data.lives}</CardText>\n        </div>\n        <div className='mt-2'>\n          <h5 className='mb-75'>Email:</h5>\n          <CardText>{data.email}</CardText>\n        </div>\n        <div className='mt-2'>\n          <h5 className='mb-75'>Website:</h5>\n          <CardText>{data.website}</CardText>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ProfileAbout\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Heart, MessageSquare, Share2 } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Row, Col, UncontrolledTooltip, Input, Label, Button } from 'reactstrap'\n\nconst ProfilePosts = ({ data }) => {\n  const renderPosts = () => {\n    return data.map(post => {\n      return (\n        <Card className='post' key={post.username}>\n          <CardBody>\n            <div className='d-flex justify-content-start align-items-center mb-1'>\n              <Avatar className='me-1' img={post.avatar} imgHeight='50' imgWidth='50' />\n              <div className='profile-user-info'>\n                <h6 className='mb-0'>{post.username}</h6>\n                <small className='text-muted'>{post.postTime}</small>\n              </div>\n            </div>\n            <CardText>{post.postText}</CardText>\n            {post.postImg ? (\n              <img src={post.postImg} alt={post.username} className='img-fluid rounded mb-75' />\n            ) : post.postVid ? (\n              <iframe\n                src='https://www.youtube.com/embed/6stlCkUDG_s'\n                className='w-100 rounded height-250 mb-50 border-0'\n              ></iframe>\n            ) : null}\n            <Row className='d-flex justify-content-start align-items-center flex-wrap pb-50 post-actions'>\n              <Col className='d-flex justify-content-between justify-content-sm-start mb-2' sm='6'>\n                <div className='d-flex align-items-center text-muted text-nowrap cursor-pointer'>\n                  <Heart\n                    size={18}\n                    className={classnames('me-50', {\n                      'profile-likes': post.youLiked === true\n                    })}\n                  />\n                  <span>{post.likes}</span>\n                </div>\n                <div className='d-flex align-items-center'>\n                  <div className='avatar-group ms-1'>\n                    {post.likedUsers.map(user => {\n                      return (\n                        <Fragment key={user.username}>\n                          <Avatar\n                            className='pull-up'\n                            img={user.avatar}\n                            id={user.username.toLowerCase().split(' ').join('-')}\n                            imgHeight='26'\n                            imgWidth='26'\n                          />\n                          <UncontrolledTooltip\n                            target={user.username.toLowerCase().split(' ').join('-')}\n                            placement='top'\n                          >\n                            {user.username}\n                          </UncontrolledTooltip>\n                        </Fragment>\n                      )\n                    })}\n                  </div>\n                  <a href='/' className='text-muted text-nowrap ms-50' onClick={e => e.preventDefault()}>\n                    +{post.likedCount} more\n                  </a>\n                </div>\n              </Col>\n              <Col className='d-flex justify-content-between justify-content-sm-end align-items-center mb-2' sm='6'>\n                <a href='/' className='text-nowrap' onClick={e => e.preventDefault()}>\n                  <MessageSquare size={18} className='text-body me-50'></MessageSquare>\n                  <span className='text-muted me-1'>{post.comments}</span>\n                </a>\n                <a href='/' className='text-nowrap share-post' onClick={e => e.preventDefault()}>\n                  <Share2 size={18} className='text-body mx-50'></Share2>\n                  <span className='text-muted me-1'>{post.share}</span>\n                </a>\n              </Col>\n            </Row>\n            {post.detailedComments.map(comment => (\n              <div key={comment.username} className='d-flex align-items-start mb-1'>\n                <Avatar img={comment.avatar} className='mt-25 me-75' imgHeight='34' imgWidth='34' />\n                <div className='profile-user-info w-100'>\n                  <div className='d-flex align-items-center justify-content-between'>\n                    <h6 className='mb-0'>{comment.username}</h6>\n                    <a href='/' onClick={e => e.preventDefault()}>\n                      <Heart\n                        size={18}\n                        className={classnames('text-body', {\n                          'profile-likes': comment.youLiked === true\n                        })}\n                      />\n                      <span className='align-middle ms-25 text-muted'>{comment.commentsLikes}</span>\n                    </a>\n                  </div>\n                  <small>{comment.comment}</small>\n                </div>\n              </div>\n            ))}\n            <fieldset className='form-label-group mb-50'>\n              <Label className='form-check-label' for={`add-comment-${post.username}`}>\n                Add Comment\n              </Label>\n              <Input id={`add-comment-${post.username}`} type='textarea' rows='3' placeholder='Add Comment' />\n            </fieldset>\n            <Button color='primary' size='sm'>\n              Post Comment\n            </Button>\n          </CardBody>\n        </Card>\n      )\n    })\n  }\n  return renderPosts()\n}\nexport default ProfilePosts\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Icons Imports\nimport { AlignJustify, Rss, Info, Image, Users, Edit } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardImg, Collapse, Navbar, Nav, NavItem, NavLink, Button } from 'reactstrap'\n\nconst ProfileHeader = ({ data }) => {\n  // ** States\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = () => setIsOpen(!isOpen)\n\n  return (\n    <Card className='profile-header mb-2'>\n      <CardImg src={data.coverImg} alt='User Profile Image' top />\n      <div className='position-relative'>\n        <div className='profile-img-container d-flex align-items-center'>\n          <div className='profile-img'>\n            <img className='rounded img-fluid' src={data.avatar} alt='Card image' />\n          </div>\n          <div className='profile-title ms-3'>\n            <h2 className='text-white'>{data.username}</h2>\n            <p className='text-white'>{data.designation}</p>\n          </div>\n        </div>\n      </div>\n      <div className='profile-header-nav'>\n        <Navbar container={false} className='justify-content-end justify-content-md-between w-100' expand='md' light>\n          <Button color='' className='btn-icon navbar-toggler' onClick={toggle}>\n            <AlignJustify size={21} />\n          </Button>\n          <Collapse isOpen={isOpen} navbar>\n            <div className='profile-tabs d-flex justify-content-between flex-wrap mt-1 mt-md-0'>\n              <Nav className='mb-0' pills>\n                <NavItem>\n                  <NavLink className='fw-bold' active>\n                    <span className='d-none d-md-block'>Feed</span>\n                    <Rss className='d-block d-md-none' size={14} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className='fw-bold'>\n                    <span className='d-none d-md-block'>About</span>\n                    <Info className='d-block d-md-none' size={14} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className='fw-bold'>\n                    <span className='d-none d-md-block'>Photos</span>\n                    <Image className='d-block d-md-none' size={14} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className='fw-bold'>\n                    <span className='d-none d-md-block'>Friends</span>\n                    <Users className='d-block d-md-none' size={14} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Button color='primary'>\n                <Edit className='d-block d-md-none' size={14} />\n                <span className='fw-bold d-none d-md-block'>Edit</span>\n              </Button>\n            </div>\n          </Collapse>\n        </Navbar>\n      </div>\n    </Card>\n  )\n}\n\nexport default ProfileHeader\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { CheckCircle, Star } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText } from 'reactstrap'\n\nconst ProfileTwitterFeeds = ({ data }) => {\n  const renderFeeds = () => {\n    return data.map((feed, index) => {\n      return (\n        <div\n          className={classnames('profile-twitter-feed', {\n            'mt-1': index === 0,\n            'mt-2': index !== 0\n          })}\n          key={index}\n        >\n          <div className='d-flex justify-content-start align-items-center mb-1'>\n            <Avatar className='me-1' img={feed.imgUrl} imgHeight='40' imgWidth='40' />\n            <div className='profile-user-info'>\n              <h6 className='mb-0'>{feed.title}</h6>\n              <a href='/' onClick={e => e.preventDefault()}>\n                <small className='text-muted'>@{feed.id}</small>\n                <CheckCircle size={14} />\n              </a>\n            </div>\n            <div className='profile-star ms-auto'>\n              <Star\n                size={18}\n                className={classnames('cursor-pointer', {\n                  'profile-favorite': feed.favorite === true\n                })}\n              />\n            </div>\n          </div>\n          <CardText className='mb-50'>{feed.desc}</CardText>\n          <a href='/' onClick={e => e.preventDefault()}>\n            <small>{feed.tags}</small>\n          </a>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <h5>Twitter Feeds</h5>\n        {renderFeeds()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ProfileTwitterFeeds\n","// ** Reactstrap Imports\nimport { Card, CardBody, Row, Col } from 'reactstrap'\n\nconst ProfileLatestPhotos = ({ data }) => {\n  const renderPhotos = () => {\n    return data.map((item, index) => {\n      return (\n        <Col key={index} md='4' xs='6' className='profile-latest-img'>\n          <a href='/' onClick={e => e.preventDefault()}>\n            <img className='img-fluid rounded' src={item.img} alt='latest-photo' />\n          </a>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <h5 className='mb-0'>Latest Photos</h5>\n        <Row>{renderPhotos()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ProfileLatestPhotos\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { Star } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst ProfileSuggestedPages = ({ data }) => {\n  const renderSuggestions = () => {\n    return data.map((suggestion, index) => {\n      return (\n        <div\n          className={classnames('d-flex justify-content-start align-items-center', {\n            'mb-1': index !== data.length - 1\n          })}\n          key={index}\n        >\n          <Avatar className='me-1' img={suggestion.avatar} imgHeight={40} imgWidth={40} />\n          <div className='profile-user-info'>\n            <h6 className='mb-0'>{suggestion.username}</h6>\n            <small className='text-muted'>{suggestion.subtitle}</small>\n          </div>\n          <div className='profile-star ms-auto'>\n            <Star\n              size={18}\n              className={classnames('cursor-pointer', {\n                'profile-favorite': suggestion.favorite === true\n              })}\n            />\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody className='profile-suggestion'>\n        <h5 className='mb-2'>Suggested Pages</h5>\n        {renderSuggestions()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ProfileSuggestedPages\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { UserPlus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\nconst ProfileFriendsSuggestions = ({ data }) => {\n  const renderSuggestion = () => {\n    return data.map((suggestion, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-start align-items-center', {\n            'mt-2': index === 0,\n            'mt-1': index !== 0\n          })}\n        >\n          <Avatar className='me-75' img={suggestion.avatar} imgHeight='40' imgWidth='40' />\n          <div className='profile-user-info'>\n            <h6 className='mb-0'>{suggestion.name}</h6>\n            <small className='text-muted'>{suggestion.mutualFriend}</small>\n          </div>\n          <div className='ms-auto'>\n            <Button className='btn-icon' color='primary' size='sm'>\n              <UserPlus size={14} />\n            </Button>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <h5>Suggestions</h5>\n        {renderSuggestion()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ProfileFriendsSuggestions\n","// ** React Imports\nimport { Fragment, useState, useEffect } from \"react\";\n\n// ** Third Party Components\nimport axios from \"axios\";\n\n// ** Custom Components\nimport UILoader from \"@components/ui-loader\";\nimport Breadcrumbs from \"@components/breadcrumbs\";\n\n// ** Reactstrap Imports\nimport { Row, Col, Button } from \"reactstrap\";\n\n// ** Demo Components\nimport ProfilePoll from \"./ProfilePolls\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfilePosts from \"./ProfilePosts\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileTwitterFeeds from \"./ProfileTwitterFeeds\";\nimport ProfileLatestPhotos from \"./ProfileLatestPhotos\";\nimport ProfileSuggestedPages from \"./ProfileSuggestedPages\";\nimport ProfileFriendsSuggestions from \"./ProfileFriendsSuggestions\";\n\n// ** Styles\nimport \"@styles/react/pages/page-profile.scss\";\n\nconst Profile = () => {\n  // ** States\n  const [data, setData] = useState(null);\n  const [block, setBlock] = useState(false);\n\n  const handleBlock = () => {\n    setBlock(true);\n    setTimeout(() => {\n      setBlock(false);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    axios.get(\"/profile/data\").then((response) => setData(response.data));\n  }, []);\n  return (\n    <Fragment>\n      <Breadcrumbs title=\"Profile\" data={[{ title: \"Profile\" }]} />\n      {data !== null ? (\n        <div id=\"user-profile\">\n          <Row>\n            <Col sm=\"12\">\n              <ProfileHeader data={data.header} />\n            </Col>\n          </Row>\n          <section id=\"profile-info\">\n            <Row>\n              <Col\n                lg={{ size: 3, order: 1 }}\n                sm={{ size: 12 }}\n                xs={{ order: 2 }}\n              >\n                <ProfileAbout data={data.userAbout} />\n                <ProfileSuggestedPages data={data.suggestedPages} />\n                <ProfileTwitterFeeds data={data.twitterFeeds} />\n              </Col>\n              <Col\n                lg={{ size: 6, order: 2 }}\n                sm={{ size: 12 }}\n                xs={{ order: 1 }}\n              >\n                <ProfilePosts data={data.post} />\n              </Col>\n              <Col\n                lg={{ size: 3, order: 3 }}\n                sm={{ size: 12 }}\n                xs={{ order: 3 }}\n              >\n                <ProfileLatestPhotos data={data.latestPhotos} />\n                <ProfileFriendsSuggestions data={data.suggestions} />\n                <ProfilePoll data={data.polls} />\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center\" sm=\"12\">\n                <Button\n                  color=\"primary\"\n                  className=\"border-0 mb-1 profile-load-more\"\n                  size=\"sm\"\n                  onClick={handleBlock}\n                >\n                  <UILoader\n                    blocking={block}\n                    overlayColor=\"rgba(255,255,255, .5)\"\n                  >\n                    <span> Load More</span>\n                  </UILoader>\n                </Button>\n              </Col>\n            </Row>\n          </section>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default Profile;\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n"],"sourceRoot":""}