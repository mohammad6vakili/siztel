{"version":3,"sources":["views/pages/blog/list/index.js","@core/components/breadcrumbs/index.js","@core/components/avatar/index.js","views/pages/blog/BlogSidebar.js"],"names":["BlogList","data","setData","useState","useEffect","axios","get","then","res","badgeColorsArr","Quote","Fashion","Gaming","Video","Food","_jsxs","Fragment","children","_jsx","Breadcrumbs","title","className","Row","map","item","Col","md","Card","Link","to","concat","id","CardImg","src","img","alt","top","CardBody","CardTitle","tag","Avatar","avatar","imgHeight","imgWidth","href","onClick","e","preventDefault","userFullName","blogPosted","tags","index","Badge","classnames","length","color","pill","CardText","excerpt","MessageSquare","size","comment","sm","Pagination","PaginationItem","PaginationLink","active","Sidebar","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Wrapper","link","isLastItem","forwardRef","ref","icon","status","badgeUp","content","Tag","initials","badgeText","badgeColor","imgClassName","contentStyles","rest","undefined","style","str","results","split","forEach","push","join","getInitials","height","width","defaultProps","BlogSidebar","CategoryColorsArr","InputGroup","Input","placeholder","InputGroupText","Icon","recentPosts","post","createdTime","categories","IconTag","category"],"mappings":"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","file":"static/js/86.d9983246.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport { MessageSquare } from 'react-feather'\n\n// ** Custom Components\nimport Sidebar from '../BlogSidebar'\nimport Avatar from '@components/avatar'\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardImg,\n  Badge,\n  Pagination,\n  PaginationItem,\n  PaginationLink\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/base/pages/page-blog.scss'\n\nconst BlogList = () => {\n  // ** States\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/blog/list/data').then(res => setData(res.data))\n  }, [])\n\n  const badgeColorsArr = {\n    Quote: 'light-info',\n    Fashion: 'light-primary',\n    Gaming: 'light-danger',\n    Video: 'light-warning',\n    Food: 'light-success'\n  }\n  const renderRenderList = () => {\n    return data.map(item => {\n      const renderTags = () => {\n        return item.tags.map((tag, index) => {\n          return (\n            <a key={index} href='/' onClick={e => e.preventDefault()}>\n              <Badge\n                className={classnames({\n                  'me-50': index !== item.tags.length - 1\n                })}\n                color={badgeColorsArr[tag]}\n                pill\n              >\n                {tag}\n              </Badge>\n            </a>\n          )\n        })\n      }\n\n      return (\n        <Col key={item.title} md='6'>\n          <Card>\n            <Link to={`/pages/blog/detail/${item.id}`}>\n              <CardImg className='img-fluid' src={item.img} alt={item.title} top />\n            </Link>\n            <CardBody>\n              <CardTitle tag='h4'>\n                <Link className='blog-title-truncate text-body-heading' to={`/pages/blog/detail/${item.id}`}>\n                  {item.title}\n                </Link>\n              </CardTitle>\n              <div className='d-flex'>\n                <Avatar className='me-50' img={item.avatar} imgHeight='24' imgWidth='24' />\n                <div>\n                  <small className='text-muted me-25'>by</small>\n                  <small>\n                    <a className='text-body' href='/' onClick={e => e.preventDefault()}>\n                      {item.userFullName}\n                    </a>\n                  </small>\n                  <span className='text-muted ms-50 me-25'>|</span>\n                  <small className='text-muted'>{item.blogPosted}</small>\n                </div>\n              </div>\n              <div className='my-1 py-25'>{renderTags()}</div>\n              <CardText className='blog-content-truncate'>{item.excerpt}</CardText>\n              <hr />\n              <div className='d-flex justify-content-between align-items-center'>\n                <Link to={`/pages/blog/detail/${item.id}`}>\n                  <MessageSquare size={15} className='text-body me-50' />\n                  <span className='text-body fw-bold'>{item.comment} Comments</span>\n                </Link>\n                <Link className='fw-bold' to={`/pages/blog/detail/${item.id}`}>\n                  Read More\n                </Link>\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Blog List' data={[{ title: 'Pages' }, { title: 'Blog' }, { title: 'List' }]} />\n      <div className='blog-wrapper'>\n        <div className='content-detached content-left'>\n          <div className='content-body'>\n            {data !== null ? (\n              <div className='blog-list-wrapper'>\n                <Row>{renderRenderList()}</Row>\n                <Row>\n                  <Col sm='12'>\n                    <Pagination className='d-flex justify-content-center mt-2'>\n                      <PaginationItem className='prev-item'>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}></PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}>\n                          1\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}>\n                          2\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}>\n                          3\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem active>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}>\n                          4\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}>\n                          5\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}>\n                          6\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}>\n                          7\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem className='next-item'>\n                        <PaginationLink href='#' onClick={e => e.preventDefault()}></PaginationLink>\n                      </PaginationItem>\n                    </Pagination>\n                  </Col>\n                </Row>\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <Sidebar />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default BlogList\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Grid,\n  CheckSquare,\n  MessageSquare,\n  Mail,\n  Calendar,\n} from \"react-feather\";\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props;\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment;\n      const isLastItem = data.length - 1 === index;\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2 w-100\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Dashboard</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BreadCrumbs;\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired,\n    })\n  ),\n};\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useEffect, useState, Fragment } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport * as Icon from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst BlogSidebar = () => {\n  // ** States\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/blog/list/data/sidebar').then(res => setData(res.data))\n  }, [])\n\n  const CategoryColorsArr = {\n    Quote: 'light-info',\n    Fashion: 'light-primary',\n    Gaming: 'light-danger',\n    Video: 'light-warning',\n    Food: 'light-success'\n  }\n\n  const renderRecentPosts = () => {\n    return data.recentPosts.map((post, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex', {\n            'mb-2': index !== data.recentPosts.length - 1\n          })}\n        >\n          <Link className='me-2' to={`/pages/blog/detail/${post.id}`}>\n            <img className='rounded' src={post.img} alt={post.title} width='100' height='70' />\n          </Link>\n          <div>\n            <h6 className='blog-recent-post-title'>\n              <Link className='text-body-heading' to={`/pages/blog/detail/${post.id}`}>\n                {post.title}\n              </Link>\n            </h6>\n            <div className='text-muted mb-0'>{post.createdTime}</div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  const renderCategories = () => {\n    return data.categories.map((item, index) => {\n      const IconTag = Icon[item.icon]\n\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-start align-items-center', {\n            'mb-75': index !== data.categories.length - 1\n          })}\n        >\n          <a className='me-75' href='/' onClick={e => e.preventDefault()}>\n            <Avatar className='rounded' color={CategoryColorsArr[item.category]} icon={<IconTag size={15} />} />\n          </a>\n          <a href='/' onClick={e => e.preventDefault()}>\n            <div className='blog-category-title text-body'>{item.category}</div>\n          </a>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='sidebar-detached sidebar-right'>\n      <div className='sidebar'>\n        <div className='blog-sidebar right-sidebar my-2 my-lg-0'>\n          <div className='right-sidebar-content'>\n            <div className='blog-search'>\n              <InputGroup className='input-group-merge'>\n                <Input placeholder='Search here' />\n                <InputGroupText>\n                  <Icon.Search size={14} />\n                </InputGroupText>\n              </InputGroup>\n            </div>\n            {data !== null ? (\n              <Fragment>\n                <div className='blog-recent-posts mt-3'>\n                  <h6 className='section-label'>Recent Posts</h6>\n                  <div className='mt-75'>{renderRecentPosts()}</div>\n                </div>\n                <div className='blog-categories mt-3'>\n                  <h6 className='section-label'>Categories</h6>\n                  <div className='mt-1'>{renderCategories()}</div>\n                </div>\n              </Fragment>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlogSidebar\n"],"sourceRoot":""}